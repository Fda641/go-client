/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTAppAssociativeDataInfoArray struct for BTAppAssociativeDataInfoArray
type BTAppAssociativeDataInfoArray struct {
	ChangeId *string `json:"changeId,omitempty"`
	ErrorCode *int32 `json:"errorCode,omitempty"`
	ErrorDescription *string `json:"errorDescription,omitempty"`
	ErrorValue *string `json:"errorValue,omitempty"`
	Items *[]BTAssociativeDataInfo `json:"items,omitempty"`
	ParentChangeId *string `json:"parentChangeId,omitempty"`
}

// NewBTAppAssociativeDataInfoArray instantiates a new BTAppAssociativeDataInfoArray object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAppAssociativeDataInfoArray() *BTAppAssociativeDataInfoArray {
	this := BTAppAssociativeDataInfoArray{}
	return &this
}

// NewBTAppAssociativeDataInfoArrayWithDefaults instantiates a new BTAppAssociativeDataInfoArray object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAppAssociativeDataInfoArrayWithDefaults() *BTAppAssociativeDataInfoArray {
	this := BTAppAssociativeDataInfoArray{}
	return &this
}

// GetChangeId returns the ChangeId field value if set, zero value otherwise.
func (o *BTAppAssociativeDataInfoArray) GetChangeId() string {
	if o == nil || o.ChangeId == nil {
		var ret string
		return ret
	}
	return *o.ChangeId
}

// GetChangeIdOk returns a tuple with the ChangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppAssociativeDataInfoArray) GetChangeIdOk() (*string, bool) {
	if o == nil || o.ChangeId == nil {
		return nil, false
	}
	return o.ChangeId, true
}

// HasChangeId returns a boolean if a field has been set.
func (o *BTAppAssociativeDataInfoArray) HasChangeId() bool {
	if o != nil && o.ChangeId != nil {
		return true
	}

	return false
}

// SetChangeId gets a reference to the given string and assigns it to the ChangeId field.
func (o *BTAppAssociativeDataInfoArray) SetChangeId(v string) {
	o.ChangeId = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *BTAppAssociativeDataInfoArray) GetErrorCode() int32 {
	if o == nil || o.ErrorCode == nil {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppAssociativeDataInfoArray) GetErrorCodeOk() (*int32, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *BTAppAssociativeDataInfoArray) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *BTAppAssociativeDataInfoArray) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *BTAppAssociativeDataInfoArray) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppAssociativeDataInfoArray) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *BTAppAssociativeDataInfoArray) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *BTAppAssociativeDataInfoArray) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetErrorValue returns the ErrorValue field value if set, zero value otherwise.
func (o *BTAppAssociativeDataInfoArray) GetErrorValue() string {
	if o == nil || o.ErrorValue == nil {
		var ret string
		return ret
	}
	return *o.ErrorValue
}

// GetErrorValueOk returns a tuple with the ErrorValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppAssociativeDataInfoArray) GetErrorValueOk() (*string, bool) {
	if o == nil || o.ErrorValue == nil {
		return nil, false
	}
	return o.ErrorValue, true
}

// HasErrorValue returns a boolean if a field has been set.
func (o *BTAppAssociativeDataInfoArray) HasErrorValue() bool {
	if o != nil && o.ErrorValue != nil {
		return true
	}

	return false
}

// SetErrorValue gets a reference to the given string and assigns it to the ErrorValue field.
func (o *BTAppAssociativeDataInfoArray) SetErrorValue(v string) {
	o.ErrorValue = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *BTAppAssociativeDataInfoArray) GetItems() []BTAssociativeDataInfo {
	if o == nil || o.Items == nil {
		var ret []BTAssociativeDataInfo
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppAssociativeDataInfoArray) GetItemsOk() (*[]BTAssociativeDataInfo, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *BTAppAssociativeDataInfoArray) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []BTAssociativeDataInfo and assigns it to the Items field.
func (o *BTAppAssociativeDataInfoArray) SetItems(v []BTAssociativeDataInfo) {
	o.Items = &v
}

// GetParentChangeId returns the ParentChangeId field value if set, zero value otherwise.
func (o *BTAppAssociativeDataInfoArray) GetParentChangeId() string {
	if o == nil || o.ParentChangeId == nil {
		var ret string
		return ret
	}
	return *o.ParentChangeId
}

// GetParentChangeIdOk returns a tuple with the ParentChangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppAssociativeDataInfoArray) GetParentChangeIdOk() (*string, bool) {
	if o == nil || o.ParentChangeId == nil {
		return nil, false
	}
	return o.ParentChangeId, true
}

// HasParentChangeId returns a boolean if a field has been set.
func (o *BTAppAssociativeDataInfoArray) HasParentChangeId() bool {
	if o != nil && o.ParentChangeId != nil {
		return true
	}

	return false
}

// SetParentChangeId gets a reference to the given string and assigns it to the ParentChangeId field.
func (o *BTAppAssociativeDataInfoArray) SetParentChangeId(v string) {
	o.ParentChangeId = &v
}

func (o BTAppAssociativeDataInfoArray) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ChangeId != nil {
		toSerialize["changeId"] = o.ChangeId
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorDescription != nil {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if o.ErrorValue != nil {
		toSerialize["errorValue"] = o.ErrorValue
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.ParentChangeId != nil {
		toSerialize["parentChangeId"] = o.ParentChangeId
	}
	return json.Marshal(toSerialize)
}

type NullableBTAppAssociativeDataInfoArray struct {
	value *BTAppAssociativeDataInfoArray
	isSet bool
}

func (v NullableBTAppAssociativeDataInfoArray) Get() *BTAppAssociativeDataInfoArray {
	return v.value
}

func (v *NullableBTAppAssociativeDataInfoArray) Set(val *BTAppAssociativeDataInfoArray) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAppAssociativeDataInfoArray) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAppAssociativeDataInfoArray) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAppAssociativeDataInfoArray(val *BTAppAssociativeDataInfoArray) *NullableBTAppAssociativeDataInfoArray {
	return &NullableBTAppAssociativeDataInfoArray{value: val, isSet: true}
}

func (v NullableBTAppAssociativeDataInfoArray) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAppAssociativeDataInfoArray) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
