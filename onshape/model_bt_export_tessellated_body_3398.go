/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTExportTessellatedBody3398 struct for BTExportTessellatedBody3398
type BTExportTessellatedBody3398 struct {
	BtType *string `json:"btType,omitempty"`
	Constituents *[]string `json:"constituents,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewBTExportTessellatedBody3398 instantiates a new BTExportTessellatedBody3398 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTExportTessellatedBody3398() *BTExportTessellatedBody3398 {
	this := BTExportTessellatedBody3398{}
	return &this
}

// NewBTExportTessellatedBody3398WithDefaults instantiates a new BTExportTessellatedBody3398 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTExportTessellatedBody3398WithDefaults() *BTExportTessellatedBody3398 {
	this := BTExportTessellatedBody3398{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTExportTessellatedBody3398) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTExportTessellatedBody3398) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTExportTessellatedBody3398) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTExportTessellatedBody3398) SetBtType(v string) {
	o.BtType = &v
}

// GetConstituents returns the Constituents field value if set, zero value otherwise.
func (o *BTExportTessellatedBody3398) GetConstituents() []string {
	if o == nil || o.Constituents == nil {
		var ret []string
		return ret
	}
	return *o.Constituents
}

// GetConstituentsOk returns a tuple with the Constituents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTExportTessellatedBody3398) GetConstituentsOk() (*[]string, bool) {
	if o == nil || o.Constituents == nil {
		return nil, false
	}
	return o.Constituents, true
}

// HasConstituents returns a boolean if a field has been set.
func (o *BTExportTessellatedBody3398) HasConstituents() bool {
	if o != nil && o.Constituents != nil {
		return true
	}

	return false
}

// SetConstituents gets a reference to the given []string and assigns it to the Constituents field.
func (o *BTExportTessellatedBody3398) SetConstituents(v []string) {
	o.Constituents = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTExportTessellatedBody3398) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTExportTessellatedBody3398) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTExportTessellatedBody3398) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTExportTessellatedBody3398) SetId(v string) {
	o.Id = &v
}

func (o BTExportTessellatedBody3398) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Constituents != nil {
		toSerialize["constituents"] = o.Constituents
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableBTExportTessellatedBody3398 struct {
	value *BTExportTessellatedBody3398
	isSet bool
}

func (v NullableBTExportTessellatedBody3398) Get() *BTExportTessellatedBody3398 {
	return v.value
}

func (v *NullableBTExportTessellatedBody3398) Set(val *BTExportTessellatedBody3398) {
	v.value = val
	v.isSet = true
}

func (v NullableBTExportTessellatedBody3398) IsSet() bool {
	return v.isSet
}

func (v *NullableBTExportTessellatedBody3398) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTExportTessellatedBody3398(val *BTExportTessellatedBody3398) *NullableBTExportTessellatedBody3398 {
	return &NullableBTExportTessellatedBody3398{value: val, isSet: true}
}

func (v NullableBTExportTessellatedBody3398) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTExportTessellatedBody3398) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
