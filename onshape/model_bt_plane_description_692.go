/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTPlaneDescription692 struct for BTPlaneDescription692
type BTPlaneDescription692 struct {
	BTSurfaceDescription1564
	BtType *string `json:"btType,omitempty"`
	IsOrientedWithFace *bool `json:"isOrientedWithFace,omitempty"`
	Normal *BTVector3d389 `json:"normal,omitempty"`
	Origin *BTVector3d389 `json:"origin,omitempty"`
}

// NewBTPlaneDescription692 instantiates a new BTPlaneDescription692 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPlaneDescription692() *BTPlaneDescription692 {
	this := BTPlaneDescription692{}
	return &this
}

// NewBTPlaneDescription692WithDefaults instantiates a new BTPlaneDescription692 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPlaneDescription692WithDefaults() *BTPlaneDescription692 {
	this := BTPlaneDescription692{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPlaneDescription692) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPlaneDescription692) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPlaneDescription692) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPlaneDescription692) SetBtType(v string) {
	o.BtType = &v
}

// GetIsOrientedWithFace returns the IsOrientedWithFace field value if set, zero value otherwise.
func (o *BTPlaneDescription692) GetIsOrientedWithFace() bool {
	if o == nil || o.IsOrientedWithFace == nil {
		var ret bool
		return ret
	}
	return *o.IsOrientedWithFace
}

// GetIsOrientedWithFaceOk returns a tuple with the IsOrientedWithFace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPlaneDescription692) GetIsOrientedWithFaceOk() (*bool, bool) {
	if o == nil || o.IsOrientedWithFace == nil {
		return nil, false
	}
	return o.IsOrientedWithFace, true
}

// HasIsOrientedWithFace returns a boolean if a field has been set.
func (o *BTPlaneDescription692) HasIsOrientedWithFace() bool {
	if o != nil && o.IsOrientedWithFace != nil {
		return true
	}

	return false
}

// SetIsOrientedWithFace gets a reference to the given bool and assigns it to the IsOrientedWithFace field.
func (o *BTPlaneDescription692) SetIsOrientedWithFace(v bool) {
	o.IsOrientedWithFace = &v
}

// GetNormal returns the Normal field value if set, zero value otherwise.
func (o *BTPlaneDescription692) GetNormal() BTVector3d389 {
	if o == nil || o.Normal == nil {
		var ret BTVector3d389
		return ret
	}
	return *o.Normal
}

// GetNormalOk returns a tuple with the Normal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPlaneDescription692) GetNormalOk() (*BTVector3d389, bool) {
	if o == nil || o.Normal == nil {
		return nil, false
	}
	return o.Normal, true
}

// HasNormal returns a boolean if a field has been set.
func (o *BTPlaneDescription692) HasNormal() bool {
	if o != nil && o.Normal != nil {
		return true
	}

	return false
}

// SetNormal gets a reference to the given BTVector3d389 and assigns it to the Normal field.
func (o *BTPlaneDescription692) SetNormal(v BTVector3d389) {
	o.Normal = &v
}

// GetOrigin returns the Origin field value if set, zero value otherwise.
func (o *BTPlaneDescription692) GetOrigin() BTVector3d389 {
	if o == nil || o.Origin == nil {
		var ret BTVector3d389
		return ret
	}
	return *o.Origin
}

// GetOriginOk returns a tuple with the Origin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPlaneDescription692) GetOriginOk() (*BTVector3d389, bool) {
	if o == nil || o.Origin == nil {
		return nil, false
	}
	return o.Origin, true
}

// HasOrigin returns a boolean if a field has been set.
func (o *BTPlaneDescription692) HasOrigin() bool {
	if o != nil && o.Origin != nil {
		return true
	}

	return false
}

// SetOrigin gets a reference to the given BTVector3d389 and assigns it to the Origin field.
func (o *BTPlaneDescription692) SetOrigin(v BTVector3d389) {
	o.Origin = &v
}

func (o BTPlaneDescription692) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTSurfaceDescription1564, errBTSurfaceDescription1564 := json.Marshal(o.BTSurfaceDescription1564)
	if errBTSurfaceDescription1564 != nil {
		return []byte{}, errBTSurfaceDescription1564
	}
	errBTSurfaceDescription1564 = json.Unmarshal([]byte(serializedBTSurfaceDescription1564), &toSerialize)
	if errBTSurfaceDescription1564 != nil {
		return []byte{}, errBTSurfaceDescription1564
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.IsOrientedWithFace != nil {
		toSerialize["isOrientedWithFace"] = o.IsOrientedWithFace
	}
	if o.Normal != nil {
		toSerialize["normal"] = o.Normal
	}
	if o.Origin != nil {
		toSerialize["origin"] = o.Origin
	}
	return json.Marshal(toSerialize)
}

type NullableBTPlaneDescription692 struct {
	value *BTPlaneDescription692
	isSet bool
}

func (v NullableBTPlaneDescription692) Get() *BTPlaneDescription692 {
	return v.value
}

func (v *NullableBTPlaneDescription692) Set(val *BTPlaneDescription692) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPlaneDescription692) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPlaneDescription692) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPlaneDescription692(val *BTPlaneDescription692) *NullableBTPlaneDescription692 {
	return &NullableBTPlaneDescription692{value: val, isSet: true}
}

func (v NullableBTPlaneDescription692) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPlaneDescription692) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
