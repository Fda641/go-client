/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTClosedCurveFilter1206AllOf struct for BTClosedCurveFilter1206AllOf
type BTClosedCurveFilter1206AllOf struct {
	BtType *string `json:"btType,omitempty"`
	IsClosed *bool `json:"isClosed,omitempty"`
}

// NewBTClosedCurveFilter1206AllOf instantiates a new BTClosedCurveFilter1206AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTClosedCurveFilter1206AllOf() *BTClosedCurveFilter1206AllOf {
	this := BTClosedCurveFilter1206AllOf{}
	return &this
}

// NewBTClosedCurveFilter1206AllOfWithDefaults instantiates a new BTClosedCurveFilter1206AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTClosedCurveFilter1206AllOfWithDefaults() *BTClosedCurveFilter1206AllOf {
	this := BTClosedCurveFilter1206AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTClosedCurveFilter1206AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTClosedCurveFilter1206AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTClosedCurveFilter1206AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTClosedCurveFilter1206AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetIsClosed returns the IsClosed field value if set, zero value otherwise.
func (o *BTClosedCurveFilter1206AllOf) GetIsClosed() bool {
	if o == nil || o.IsClosed == nil {
		var ret bool
		return ret
	}
	return *o.IsClosed
}

// GetIsClosedOk returns a tuple with the IsClosed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTClosedCurveFilter1206AllOf) GetIsClosedOk() (*bool, bool) {
	if o == nil || o.IsClosed == nil {
		return nil, false
	}
	return o.IsClosed, true
}

// HasIsClosed returns a boolean if a field has been set.
func (o *BTClosedCurveFilter1206AllOf) HasIsClosed() bool {
	if o != nil && o.IsClosed != nil {
		return true
	}

	return false
}

// SetIsClosed gets a reference to the given bool and assigns it to the IsClosed field.
func (o *BTClosedCurveFilter1206AllOf) SetIsClosed(v bool) {
	o.IsClosed = &v
}

func (o BTClosedCurveFilter1206AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.IsClosed != nil {
		toSerialize["isClosed"] = o.IsClosed
	}
	return json.Marshal(toSerialize)
}

type NullableBTClosedCurveFilter1206AllOf struct {
	value *BTClosedCurveFilter1206AllOf
	isSet bool
}

func (v NullableBTClosedCurveFilter1206AllOf) Get() *BTClosedCurveFilter1206AllOf {
	return v.value
}

func (v *NullableBTClosedCurveFilter1206AllOf) Set(val *BTClosedCurveFilter1206AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTClosedCurveFilter1206AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTClosedCurveFilter1206AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTClosedCurveFilter1206AllOf(val *BTClosedCurveFilter1206AllOf) *NullableBTClosedCurveFilter1206AllOf {
	return &NullableBTClosedCurveFilter1206AllOf{value: val, isSet: true}
}

func (v NullableBTClosedCurveFilter1206AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTClosedCurveFilter1206AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
