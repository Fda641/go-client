/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMConfiguredValueByBoolean1501 struct for BTMConfiguredValueByBoolean1501
type BTMConfiguredValueByBoolean1501 struct {
	BTMConfiguredValue1341
	BooleanValue *bool `json:"booleanValue,omitempty"`
	BtType *string `json:"btType,omitempty"`
}

// NewBTMConfiguredValueByBoolean1501 instantiates a new BTMConfiguredValueByBoolean1501 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMConfiguredValueByBoolean1501() *BTMConfiguredValueByBoolean1501 {
	this := BTMConfiguredValueByBoolean1501{}
	return &this
}

// NewBTMConfiguredValueByBoolean1501WithDefaults instantiates a new BTMConfiguredValueByBoolean1501 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMConfiguredValueByBoolean1501WithDefaults() *BTMConfiguredValueByBoolean1501 {
	this := BTMConfiguredValueByBoolean1501{}
	return &this
}

// GetBooleanValue returns the BooleanValue field value if set, zero value otherwise.
func (o *BTMConfiguredValueByBoolean1501) GetBooleanValue() bool {
	if o == nil || o.BooleanValue == nil {
		var ret bool
		return ret
	}
	return *o.BooleanValue
}

// GetBooleanValueOk returns a tuple with the BooleanValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfiguredValueByBoolean1501) GetBooleanValueOk() (*bool, bool) {
	if o == nil || o.BooleanValue == nil {
		return nil, false
	}
	return o.BooleanValue, true
}

// HasBooleanValue returns a boolean if a field has been set.
func (o *BTMConfiguredValueByBoolean1501) HasBooleanValue() bool {
	if o != nil && o.BooleanValue != nil {
		return true
	}

	return false
}

// SetBooleanValue gets a reference to the given bool and assigns it to the BooleanValue field.
func (o *BTMConfiguredValueByBoolean1501) SetBooleanValue(v bool) {
	o.BooleanValue = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMConfiguredValueByBoolean1501) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfiguredValueByBoolean1501) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMConfiguredValueByBoolean1501) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMConfiguredValueByBoolean1501) SetBtType(v string) {
	o.BtType = &v
}

func (o BTMConfiguredValueByBoolean1501) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMConfiguredValue1341, errBTMConfiguredValue1341 := json.Marshal(o.BTMConfiguredValue1341)
	if errBTMConfiguredValue1341 != nil {
		return []byte{}, errBTMConfiguredValue1341
	}
	errBTMConfiguredValue1341 = json.Unmarshal([]byte(serializedBTMConfiguredValue1341), &toSerialize)
	if errBTMConfiguredValue1341 != nil {
		return []byte{}, errBTMConfiguredValue1341
	}
	if o.BooleanValue != nil {
		toSerialize["booleanValue"] = o.BooleanValue
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	return json.Marshal(toSerialize)
}

type NullableBTMConfiguredValueByBoolean1501 struct {
	value *BTMConfiguredValueByBoolean1501
	isSet bool
}

func (v NullableBTMConfiguredValueByBoolean1501) Get() *BTMConfiguredValueByBoolean1501 {
	return v.value
}

func (v *NullableBTMConfiguredValueByBoolean1501) Set(val *BTMConfiguredValueByBoolean1501) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMConfiguredValueByBoolean1501) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMConfiguredValueByBoolean1501) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMConfiguredValueByBoolean1501(val *BTMConfiguredValueByBoolean1501) *NullableBTMConfiguredValueByBoolean1501 {
	return &NullableBTMConfiguredValueByBoolean1501{value: val, isSet: true}
}

func (v NullableBTMConfiguredValueByBoolean1501) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMConfiguredValueByBoolean1501) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
