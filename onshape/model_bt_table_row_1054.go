/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTTableRow1054 struct for BTTableRow1054
type BTTableRow1054 struct {
	BtType *string `json:"btType,omitempty"`
	ColumnIdToCell *map[string]BTTableCell1114 `json:"columnIdToCell,omitempty"`
	Id *string `json:"id,omitempty"`
	MetaData *BTTreeNode20 `json:"metaData,omitempty"`
	NodeId *string `json:"nodeId,omitempty"`
	RowMetadata *BTTableBaseRowMetadata3181 `json:"rowMetadata,omitempty"`
}

// NewBTTableRow1054 instantiates a new BTTableRow1054 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTTableRow1054() *BTTableRow1054 {
	this := BTTableRow1054{}
	return &this
}

// NewBTTableRow1054WithDefaults instantiates a new BTTableRow1054 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTTableRow1054WithDefaults() *BTTableRow1054 {
	this := BTTableRow1054{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTTableRow1054) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableRow1054) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTTableRow1054) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTTableRow1054) SetBtType(v string) {
	o.BtType = &v
}

// GetColumnIdToCell returns the ColumnIdToCell field value if set, zero value otherwise.
func (o *BTTableRow1054) GetColumnIdToCell() map[string]BTTableCell1114 {
	if o == nil || o.ColumnIdToCell == nil {
		var ret map[string]BTTableCell1114
		return ret
	}
	return *o.ColumnIdToCell
}

// GetColumnIdToCellOk returns a tuple with the ColumnIdToCell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableRow1054) GetColumnIdToCellOk() (*map[string]BTTableCell1114, bool) {
	if o == nil || o.ColumnIdToCell == nil {
		return nil, false
	}
	return o.ColumnIdToCell, true
}

// HasColumnIdToCell returns a boolean if a field has been set.
func (o *BTTableRow1054) HasColumnIdToCell() bool {
	if o != nil && o.ColumnIdToCell != nil {
		return true
	}

	return false
}

// SetColumnIdToCell gets a reference to the given map[string]BTTableCell1114 and assigns it to the ColumnIdToCell field.
func (o *BTTableRow1054) SetColumnIdToCell(v map[string]BTTableCell1114) {
	o.ColumnIdToCell = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTTableRow1054) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableRow1054) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTTableRow1054) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTTableRow1054) SetId(v string) {
	o.Id = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *BTTableRow1054) GetMetaData() BTTreeNode20 {
	if o == nil || o.MetaData == nil {
		var ret BTTreeNode20
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableRow1054) GetMetaDataOk() (*BTTreeNode20, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *BTTableRow1054) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given BTTreeNode20 and assigns it to the MetaData field.
func (o *BTTableRow1054) SetMetaData(v BTTreeNode20) {
	o.MetaData = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *BTTableRow1054) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableRow1054) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *BTTableRow1054) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *BTTableRow1054) SetNodeId(v string) {
	o.NodeId = &v
}

// GetRowMetadata returns the RowMetadata field value if set, zero value otherwise.
func (o *BTTableRow1054) GetRowMetadata() BTTableBaseRowMetadata3181 {
	if o == nil || o.RowMetadata == nil {
		var ret BTTableBaseRowMetadata3181
		return ret
	}
	return *o.RowMetadata
}

// GetRowMetadataOk returns a tuple with the RowMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableRow1054) GetRowMetadataOk() (*BTTableBaseRowMetadata3181, bool) {
	if o == nil || o.RowMetadata == nil {
		return nil, false
	}
	return o.RowMetadata, true
}

// HasRowMetadata returns a boolean if a field has been set.
func (o *BTTableRow1054) HasRowMetadata() bool {
	if o != nil && o.RowMetadata != nil {
		return true
	}

	return false
}

// SetRowMetadata gets a reference to the given BTTableBaseRowMetadata3181 and assigns it to the RowMetadata field.
func (o *BTTableRow1054) SetRowMetadata(v BTTableBaseRowMetadata3181) {
	o.RowMetadata = &v
}

func (o BTTableRow1054) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ColumnIdToCell != nil {
		toSerialize["columnIdToCell"] = o.ColumnIdToCell
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MetaData != nil {
		toSerialize["metaData"] = o.MetaData
	}
	if o.NodeId != nil {
		toSerialize["nodeId"] = o.NodeId
	}
	if o.RowMetadata != nil {
		toSerialize["rowMetadata"] = o.RowMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableBTTableRow1054 struct {
	value *BTTableRow1054
	isSet bool
}

func (v NullableBTTableRow1054) Get() *BTTableRow1054 {
	return v.value
}

func (v *NullableBTTableRow1054) Set(val *BTTableRow1054) {
	v.value = val
	v.isSet = true
}

func (v NullableBTTableRow1054) IsSet() bool {
	return v.isSet
}

func (v *NullableBTTableRow1054) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTTableRow1054(val *BTTableRow1054) *NullableBTTableRow1054 {
	return &NullableBTTableRow1054{value: val, isSet: true}
}

func (v NullableBTTableRow1054) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTTableRow1054) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
