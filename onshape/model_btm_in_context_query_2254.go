/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMInContextQuery2254 struct for BTMInContextQuery2254
type BTMInContextQuery2254 struct {
	BTMIndividualQueryBase139
	BtType *string `json:"btType,omitempty"`
	Path *[]string `json:"path,omitempty"`
}

// NewBTMInContextQuery2254 instantiates a new BTMInContextQuery2254 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMInContextQuery2254() *BTMInContextQuery2254 {
	this := BTMInContextQuery2254{}
	return &this
}

// NewBTMInContextQuery2254WithDefaults instantiates a new BTMInContextQuery2254 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMInContextQuery2254WithDefaults() *BTMInContextQuery2254 {
	this := BTMInContextQuery2254{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMInContextQuery2254) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMInContextQuery2254) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMInContextQuery2254) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMInContextQuery2254) SetBtType(v string) {
	o.BtType = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *BTMInContextQuery2254) GetPath() []string {
	if o == nil || o.Path == nil {
		var ret []string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMInContextQuery2254) GetPathOk() (*[]string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *BTMInContextQuery2254) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given []string and assigns it to the Path field.
func (o *BTMInContextQuery2254) SetPath(v []string) {
	o.Path = &v
}

func (o BTMInContextQuery2254) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMIndividualQueryBase139, errBTMIndividualQueryBase139 := json.Marshal(o.BTMIndividualQueryBase139)
	if errBTMIndividualQueryBase139 != nil {
		return []byte{}, errBTMIndividualQueryBase139
	}
	errBTMIndividualQueryBase139 = json.Unmarshal([]byte(serializedBTMIndividualQueryBase139), &toSerialize)
	if errBTMIndividualQueryBase139 != nil {
		return []byte{}, errBTMIndividualQueryBase139
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableBTMInContextQuery2254 struct {
	value *BTMInContextQuery2254
	isSet bool
}

func (v NullableBTMInContextQuery2254) Get() *BTMInContextQuery2254 {
	return v.value
}

func (v *NullableBTMInContextQuery2254) Set(val *BTMInContextQuery2254) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMInContextQuery2254) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMInContextQuery2254) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMInContextQuery2254(val *BTMInContextQuery2254) *NullableBTMInContextQuery2254 {
	return &NullableBTMInContextQuery2254{value: val, isSet: true}
}

func (v NullableBTMInContextQuery2254) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMInContextQuery2254) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
