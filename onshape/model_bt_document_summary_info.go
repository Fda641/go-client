/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTDocumentSummaryInfo struct for BTDocumentSummaryInfo
type BTDocumentSummaryInfo struct {
	BTGlobalTreeNodeInfo
	JsonType *string `json:"jsonType,omitempty"`
	AnonymousAccessAllowed *bool `json:"anonymousAccessAllowed,omitempty"`
	AnonymousAllowsExport *bool `json:"anonymousAllowsExport,omitempty"`
	CanUnshare *bool `json:"canUnshare,omitempty"`
	CreatedWithEducationPlan *bool `json:"createdWithEducationPlan,omitempty"`
	DefaultElementId *string `json:"defaultElementId,omitempty"`
	DefaultWorkspace *BTWorkspaceInfo `json:"defaultWorkspace,omitempty"`
	DocumentLabels *[]BTDocumentLabelInfo `json:"documentLabels,omitempty"`
	HasReleaseRevisionableObjects *bool `json:"hasReleaseRevisionableObjects,omitempty"`
	HasRelevantInsertables *bool `json:"hasRelevantInsertables,omitempty"`
	IsOrphaned *bool `json:"isOrphaned,omitempty"`
	IsUsingManagedWorkflow *bool `json:"isUsingManagedWorkflow,omitempty"`
	LikedByCurrentUser *bool `json:"likedByCurrentUser,omitempty"`
	Likes *int64 `json:"likes,omitempty"`
	NotRevisionManaged *bool `json:"notRevisionManaged,omitempty"`
	NumberOfTimesCopied *int64 `json:"numberOfTimesCopied,omitempty"`
	NumberOfTimesReferenced *int64 `json:"numberOfTimesReferenced,omitempty"`
	ParentId *string `json:"parentId,omitempty"`
	Permission *string `json:"permission,omitempty"`
	PermissionSet *[]string `json:"permissionSet,omitempty"`
	Public *bool `json:"public,omitempty"`
	RecentVersion *BTBaseInfo `json:"recentVersion,omitempty"`
	SupportTeamUserAndShared *bool `json:"supportTeamUserAndShared,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	Thumbnail *BTThumbnailInfo `json:"thumbnail,omitempty"`
	TotalWorkspacesScheduledForUpdate *int32 `json:"totalWorkspacesScheduledForUpdate,omitempty"`
	TotalWorkspacesUpdating *int32 `json:"totalWorkspacesUpdating,omitempty"`
	Trash *bool `json:"trash,omitempty"`
	TrashedAt *JSONTime `json:"trashedAt,omitempty"`
	UserAccountLimitsBreached *bool `json:"userAccountLimitsBreached,omitempty"`
}

// NewBTDocumentSummaryInfo instantiates a new BTDocumentSummaryInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTDocumentSummaryInfo() *BTDocumentSummaryInfo {
	this := BTDocumentSummaryInfo{}
	return &this
}

// NewBTDocumentSummaryInfoWithDefaults instantiates a new BTDocumentSummaryInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTDocumentSummaryInfoWithDefaults() *BTDocumentSummaryInfo {
	this := BTDocumentSummaryInfo{}
	return &this
}

// GetJsonType returns the JsonType field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetJsonType() string {
	if o == nil || o.JsonType == nil {
		var ret string
		return ret
	}
	return *o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetJsonTypeOk() (*string, bool) {
	if o == nil || o.JsonType == nil {
		return nil, false
	}
	return o.JsonType, true
}

// HasJsonType returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasJsonType() bool {
	if o != nil && o.JsonType != nil {
		return true
	}

	return false
}

// SetJsonType gets a reference to the given string and assigns it to the JsonType field.
func (o *BTDocumentSummaryInfo) SetJsonType(v string) {
	o.JsonType = &v
}

// GetAnonymousAccessAllowed returns the AnonymousAccessAllowed field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetAnonymousAccessAllowed() bool {
	if o == nil || o.AnonymousAccessAllowed == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousAccessAllowed
}

// GetAnonymousAccessAllowedOk returns a tuple with the AnonymousAccessAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetAnonymousAccessAllowedOk() (*bool, bool) {
	if o == nil || o.AnonymousAccessAllowed == nil {
		return nil, false
	}
	return o.AnonymousAccessAllowed, true
}

// HasAnonymousAccessAllowed returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasAnonymousAccessAllowed() bool {
	if o != nil && o.AnonymousAccessAllowed != nil {
		return true
	}

	return false
}

// SetAnonymousAccessAllowed gets a reference to the given bool and assigns it to the AnonymousAccessAllowed field.
func (o *BTDocumentSummaryInfo) SetAnonymousAccessAllowed(v bool) {
	o.AnonymousAccessAllowed = &v
}

// GetAnonymousAllowsExport returns the AnonymousAllowsExport field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetAnonymousAllowsExport() bool {
	if o == nil || o.AnonymousAllowsExport == nil {
		var ret bool
		return ret
	}
	return *o.AnonymousAllowsExport
}

// GetAnonymousAllowsExportOk returns a tuple with the AnonymousAllowsExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetAnonymousAllowsExportOk() (*bool, bool) {
	if o == nil || o.AnonymousAllowsExport == nil {
		return nil, false
	}
	return o.AnonymousAllowsExport, true
}

// HasAnonymousAllowsExport returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasAnonymousAllowsExport() bool {
	if o != nil && o.AnonymousAllowsExport != nil {
		return true
	}

	return false
}

// SetAnonymousAllowsExport gets a reference to the given bool and assigns it to the AnonymousAllowsExport field.
func (o *BTDocumentSummaryInfo) SetAnonymousAllowsExport(v bool) {
	o.AnonymousAllowsExport = &v
}

// GetCanUnshare returns the CanUnshare field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetCanUnshare() bool {
	if o == nil || o.CanUnshare == nil {
		var ret bool
		return ret
	}
	return *o.CanUnshare
}

// GetCanUnshareOk returns a tuple with the CanUnshare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetCanUnshareOk() (*bool, bool) {
	if o == nil || o.CanUnshare == nil {
		return nil, false
	}
	return o.CanUnshare, true
}

// HasCanUnshare returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasCanUnshare() bool {
	if o != nil && o.CanUnshare != nil {
		return true
	}

	return false
}

// SetCanUnshare gets a reference to the given bool and assigns it to the CanUnshare field.
func (o *BTDocumentSummaryInfo) SetCanUnshare(v bool) {
	o.CanUnshare = &v
}

// GetCreatedWithEducationPlan returns the CreatedWithEducationPlan field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetCreatedWithEducationPlan() bool {
	if o == nil || o.CreatedWithEducationPlan == nil {
		var ret bool
		return ret
	}
	return *o.CreatedWithEducationPlan
}

// GetCreatedWithEducationPlanOk returns a tuple with the CreatedWithEducationPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetCreatedWithEducationPlanOk() (*bool, bool) {
	if o == nil || o.CreatedWithEducationPlan == nil {
		return nil, false
	}
	return o.CreatedWithEducationPlan, true
}

// HasCreatedWithEducationPlan returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasCreatedWithEducationPlan() bool {
	if o != nil && o.CreatedWithEducationPlan != nil {
		return true
	}

	return false
}

// SetCreatedWithEducationPlan gets a reference to the given bool and assigns it to the CreatedWithEducationPlan field.
func (o *BTDocumentSummaryInfo) SetCreatedWithEducationPlan(v bool) {
	o.CreatedWithEducationPlan = &v
}

// GetDefaultElementId returns the DefaultElementId field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetDefaultElementId() string {
	if o == nil || o.DefaultElementId == nil {
		var ret string
		return ret
	}
	return *o.DefaultElementId
}

// GetDefaultElementIdOk returns a tuple with the DefaultElementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetDefaultElementIdOk() (*string, bool) {
	if o == nil || o.DefaultElementId == nil {
		return nil, false
	}
	return o.DefaultElementId, true
}

// HasDefaultElementId returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasDefaultElementId() bool {
	if o != nil && o.DefaultElementId != nil {
		return true
	}

	return false
}

// SetDefaultElementId gets a reference to the given string and assigns it to the DefaultElementId field.
func (o *BTDocumentSummaryInfo) SetDefaultElementId(v string) {
	o.DefaultElementId = &v
}

// GetDefaultWorkspace returns the DefaultWorkspace field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetDefaultWorkspace() BTWorkspaceInfo {
	if o == nil || o.DefaultWorkspace == nil {
		var ret BTWorkspaceInfo
		return ret
	}
	return *o.DefaultWorkspace
}

// GetDefaultWorkspaceOk returns a tuple with the DefaultWorkspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetDefaultWorkspaceOk() (*BTWorkspaceInfo, bool) {
	if o == nil || o.DefaultWorkspace == nil {
		return nil, false
	}
	return o.DefaultWorkspace, true
}

// HasDefaultWorkspace returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasDefaultWorkspace() bool {
	if o != nil && o.DefaultWorkspace != nil {
		return true
	}

	return false
}

// SetDefaultWorkspace gets a reference to the given BTWorkspaceInfo and assigns it to the DefaultWorkspace field.
func (o *BTDocumentSummaryInfo) SetDefaultWorkspace(v BTWorkspaceInfo) {
	o.DefaultWorkspace = &v
}

// GetDocumentLabels returns the DocumentLabels field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetDocumentLabels() []BTDocumentLabelInfo {
	if o == nil || o.DocumentLabels == nil {
		var ret []BTDocumentLabelInfo
		return ret
	}
	return *o.DocumentLabels
}

// GetDocumentLabelsOk returns a tuple with the DocumentLabels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetDocumentLabelsOk() (*[]BTDocumentLabelInfo, bool) {
	if o == nil || o.DocumentLabels == nil {
		return nil, false
	}
	return o.DocumentLabels, true
}

// HasDocumentLabels returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasDocumentLabels() bool {
	if o != nil && o.DocumentLabels != nil {
		return true
	}

	return false
}

// SetDocumentLabels gets a reference to the given []BTDocumentLabelInfo and assigns it to the DocumentLabels field.
func (o *BTDocumentSummaryInfo) SetDocumentLabels(v []BTDocumentLabelInfo) {
	o.DocumentLabels = &v
}

// GetHasReleaseRevisionableObjects returns the HasReleaseRevisionableObjects field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetHasReleaseRevisionableObjects() bool {
	if o == nil || o.HasReleaseRevisionableObjects == nil {
		var ret bool
		return ret
	}
	return *o.HasReleaseRevisionableObjects
}

// GetHasReleaseRevisionableObjectsOk returns a tuple with the HasReleaseRevisionableObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetHasReleaseRevisionableObjectsOk() (*bool, bool) {
	if o == nil || o.HasReleaseRevisionableObjects == nil {
		return nil, false
	}
	return o.HasReleaseRevisionableObjects, true
}

// HasHasReleaseRevisionableObjects returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasHasReleaseRevisionableObjects() bool {
	if o != nil && o.HasReleaseRevisionableObjects != nil {
		return true
	}

	return false
}

// SetHasReleaseRevisionableObjects gets a reference to the given bool and assigns it to the HasReleaseRevisionableObjects field.
func (o *BTDocumentSummaryInfo) SetHasReleaseRevisionableObjects(v bool) {
	o.HasReleaseRevisionableObjects = &v
}

// GetHasRelevantInsertables returns the HasRelevantInsertables field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetHasRelevantInsertables() bool {
	if o == nil || o.HasRelevantInsertables == nil {
		var ret bool
		return ret
	}
	return *o.HasRelevantInsertables
}

// GetHasRelevantInsertablesOk returns a tuple with the HasRelevantInsertables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetHasRelevantInsertablesOk() (*bool, bool) {
	if o == nil || o.HasRelevantInsertables == nil {
		return nil, false
	}
	return o.HasRelevantInsertables, true
}

// HasHasRelevantInsertables returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasHasRelevantInsertables() bool {
	if o != nil && o.HasRelevantInsertables != nil {
		return true
	}

	return false
}

// SetHasRelevantInsertables gets a reference to the given bool and assigns it to the HasRelevantInsertables field.
func (o *BTDocumentSummaryInfo) SetHasRelevantInsertables(v bool) {
	o.HasRelevantInsertables = &v
}

// GetIsOrphaned returns the IsOrphaned field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetIsOrphaned() bool {
	if o == nil || o.IsOrphaned == nil {
		var ret bool
		return ret
	}
	return *o.IsOrphaned
}

// GetIsOrphanedOk returns a tuple with the IsOrphaned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetIsOrphanedOk() (*bool, bool) {
	if o == nil || o.IsOrphaned == nil {
		return nil, false
	}
	return o.IsOrphaned, true
}

// HasIsOrphaned returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasIsOrphaned() bool {
	if o != nil && o.IsOrphaned != nil {
		return true
	}

	return false
}

// SetIsOrphaned gets a reference to the given bool and assigns it to the IsOrphaned field.
func (o *BTDocumentSummaryInfo) SetIsOrphaned(v bool) {
	o.IsOrphaned = &v
}

// GetIsUsingManagedWorkflow returns the IsUsingManagedWorkflow field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetIsUsingManagedWorkflow() bool {
	if o == nil || o.IsUsingManagedWorkflow == nil {
		var ret bool
		return ret
	}
	return *o.IsUsingManagedWorkflow
}

// GetIsUsingManagedWorkflowOk returns a tuple with the IsUsingManagedWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetIsUsingManagedWorkflowOk() (*bool, bool) {
	if o == nil || o.IsUsingManagedWorkflow == nil {
		return nil, false
	}
	return o.IsUsingManagedWorkflow, true
}

// HasIsUsingManagedWorkflow returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasIsUsingManagedWorkflow() bool {
	if o != nil && o.IsUsingManagedWorkflow != nil {
		return true
	}

	return false
}

// SetIsUsingManagedWorkflow gets a reference to the given bool and assigns it to the IsUsingManagedWorkflow field.
func (o *BTDocumentSummaryInfo) SetIsUsingManagedWorkflow(v bool) {
	o.IsUsingManagedWorkflow = &v
}

// GetLikedByCurrentUser returns the LikedByCurrentUser field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetLikedByCurrentUser() bool {
	if o == nil || o.LikedByCurrentUser == nil {
		var ret bool
		return ret
	}
	return *o.LikedByCurrentUser
}

// GetLikedByCurrentUserOk returns a tuple with the LikedByCurrentUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetLikedByCurrentUserOk() (*bool, bool) {
	if o == nil || o.LikedByCurrentUser == nil {
		return nil, false
	}
	return o.LikedByCurrentUser, true
}

// HasLikedByCurrentUser returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasLikedByCurrentUser() bool {
	if o != nil && o.LikedByCurrentUser != nil {
		return true
	}

	return false
}

// SetLikedByCurrentUser gets a reference to the given bool and assigns it to the LikedByCurrentUser field.
func (o *BTDocumentSummaryInfo) SetLikedByCurrentUser(v bool) {
	o.LikedByCurrentUser = &v
}

// GetLikes returns the Likes field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetLikes() int64 {
	if o == nil || o.Likes == nil {
		var ret int64
		return ret
	}
	return *o.Likes
}

// GetLikesOk returns a tuple with the Likes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetLikesOk() (*int64, bool) {
	if o == nil || o.Likes == nil {
		return nil, false
	}
	return o.Likes, true
}

// HasLikes returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasLikes() bool {
	if o != nil && o.Likes != nil {
		return true
	}

	return false
}

// SetLikes gets a reference to the given int64 and assigns it to the Likes field.
func (o *BTDocumentSummaryInfo) SetLikes(v int64) {
	o.Likes = &v
}

// GetNotRevisionManaged returns the NotRevisionManaged field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetNotRevisionManaged() bool {
	if o == nil || o.NotRevisionManaged == nil {
		var ret bool
		return ret
	}
	return *o.NotRevisionManaged
}

// GetNotRevisionManagedOk returns a tuple with the NotRevisionManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetNotRevisionManagedOk() (*bool, bool) {
	if o == nil || o.NotRevisionManaged == nil {
		return nil, false
	}
	return o.NotRevisionManaged, true
}

// HasNotRevisionManaged returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasNotRevisionManaged() bool {
	if o != nil && o.NotRevisionManaged != nil {
		return true
	}

	return false
}

// SetNotRevisionManaged gets a reference to the given bool and assigns it to the NotRevisionManaged field.
func (o *BTDocumentSummaryInfo) SetNotRevisionManaged(v bool) {
	o.NotRevisionManaged = &v
}

// GetNumberOfTimesCopied returns the NumberOfTimesCopied field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetNumberOfTimesCopied() int64 {
	if o == nil || o.NumberOfTimesCopied == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfTimesCopied
}

// GetNumberOfTimesCopiedOk returns a tuple with the NumberOfTimesCopied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetNumberOfTimesCopiedOk() (*int64, bool) {
	if o == nil || o.NumberOfTimesCopied == nil {
		return nil, false
	}
	return o.NumberOfTimesCopied, true
}

// HasNumberOfTimesCopied returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasNumberOfTimesCopied() bool {
	if o != nil && o.NumberOfTimesCopied != nil {
		return true
	}

	return false
}

// SetNumberOfTimesCopied gets a reference to the given int64 and assigns it to the NumberOfTimesCopied field.
func (o *BTDocumentSummaryInfo) SetNumberOfTimesCopied(v int64) {
	o.NumberOfTimesCopied = &v
}

// GetNumberOfTimesReferenced returns the NumberOfTimesReferenced field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetNumberOfTimesReferenced() int64 {
	if o == nil || o.NumberOfTimesReferenced == nil {
		var ret int64
		return ret
	}
	return *o.NumberOfTimesReferenced
}

// GetNumberOfTimesReferencedOk returns a tuple with the NumberOfTimesReferenced field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetNumberOfTimesReferencedOk() (*int64, bool) {
	if o == nil || o.NumberOfTimesReferenced == nil {
		return nil, false
	}
	return o.NumberOfTimesReferenced, true
}

// HasNumberOfTimesReferenced returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasNumberOfTimesReferenced() bool {
	if o != nil && o.NumberOfTimesReferenced != nil {
		return true
	}

	return false
}

// SetNumberOfTimesReferenced gets a reference to the given int64 and assigns it to the NumberOfTimesReferenced field.
func (o *BTDocumentSummaryInfo) SetNumberOfTimesReferenced(v int64) {
	o.NumberOfTimesReferenced = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetParentId() string {
	if o == nil || o.ParentId == nil {
		var ret string
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetParentIdOk() (*string, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given string and assigns it to the ParentId field.
func (o *BTDocumentSummaryInfo) SetParentId(v string) {
	o.ParentId = &v
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetPermission() string {
	if o == nil || o.Permission == nil {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetPermissionOk() (*string, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *BTDocumentSummaryInfo) SetPermission(v string) {
	o.Permission = &v
}

// GetPermissionSet returns the PermissionSet field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetPermissionSet() []string {
	if o == nil || o.PermissionSet == nil {
		var ret []string
		return ret
	}
	return *o.PermissionSet
}

// GetPermissionSetOk returns a tuple with the PermissionSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetPermissionSetOk() (*[]string, bool) {
	if o == nil || o.PermissionSet == nil {
		return nil, false
	}
	return o.PermissionSet, true
}

// HasPermissionSet returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasPermissionSet() bool {
	if o != nil && o.PermissionSet != nil {
		return true
	}

	return false
}

// SetPermissionSet gets a reference to the given []string and assigns it to the PermissionSet field.
func (o *BTDocumentSummaryInfo) SetPermissionSet(v []string) {
	o.PermissionSet = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetPublic() bool {
	if o == nil || o.Public == nil {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetPublicOk() (*bool, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *BTDocumentSummaryInfo) SetPublic(v bool) {
	o.Public = &v
}

// GetRecentVersion returns the RecentVersion field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetRecentVersion() BTBaseInfo {
	if o == nil || o.RecentVersion == nil {
		var ret BTBaseInfo
		return ret
	}
	return *o.RecentVersion
}

// GetRecentVersionOk returns a tuple with the RecentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetRecentVersionOk() (*BTBaseInfo, bool) {
	if o == nil || o.RecentVersion == nil {
		return nil, false
	}
	return o.RecentVersion, true
}

// HasRecentVersion returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasRecentVersion() bool {
	if o != nil && o.RecentVersion != nil {
		return true
	}

	return false
}

// SetRecentVersion gets a reference to the given BTBaseInfo and assigns it to the RecentVersion field.
func (o *BTDocumentSummaryInfo) SetRecentVersion(v BTBaseInfo) {
	o.RecentVersion = &v
}

// GetSupportTeamUserAndShared returns the SupportTeamUserAndShared field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetSupportTeamUserAndShared() bool {
	if o == nil || o.SupportTeamUserAndShared == nil {
		var ret bool
		return ret
	}
	return *o.SupportTeamUserAndShared
}

// GetSupportTeamUserAndSharedOk returns a tuple with the SupportTeamUserAndShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetSupportTeamUserAndSharedOk() (*bool, bool) {
	if o == nil || o.SupportTeamUserAndShared == nil {
		return nil, false
	}
	return o.SupportTeamUserAndShared, true
}

// HasSupportTeamUserAndShared returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasSupportTeamUserAndShared() bool {
	if o != nil && o.SupportTeamUserAndShared != nil {
		return true
	}

	return false
}

// SetSupportTeamUserAndShared gets a reference to the given bool and assigns it to the SupportTeamUserAndShared field.
func (o *BTDocumentSummaryInfo) SetSupportTeamUserAndShared(v bool) {
	o.SupportTeamUserAndShared = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *BTDocumentSummaryInfo) SetTags(v []string) {
	o.Tags = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetThumbnail() BTThumbnailInfo {
	if o == nil || o.Thumbnail == nil {
		var ret BTThumbnailInfo
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetThumbnailOk() (*BTThumbnailInfo, bool) {
	if o == nil || o.Thumbnail == nil {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasThumbnail() bool {
	if o != nil && o.Thumbnail != nil {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given BTThumbnailInfo and assigns it to the Thumbnail field.
func (o *BTDocumentSummaryInfo) SetThumbnail(v BTThumbnailInfo) {
	o.Thumbnail = &v
}

// GetTotalWorkspacesScheduledForUpdate returns the TotalWorkspacesScheduledForUpdate field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetTotalWorkspacesScheduledForUpdate() int32 {
	if o == nil || o.TotalWorkspacesScheduledForUpdate == nil {
		var ret int32
		return ret
	}
	return *o.TotalWorkspacesScheduledForUpdate
}

// GetTotalWorkspacesScheduledForUpdateOk returns a tuple with the TotalWorkspacesScheduledForUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetTotalWorkspacesScheduledForUpdateOk() (*int32, bool) {
	if o == nil || o.TotalWorkspacesScheduledForUpdate == nil {
		return nil, false
	}
	return o.TotalWorkspacesScheduledForUpdate, true
}

// HasTotalWorkspacesScheduledForUpdate returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasTotalWorkspacesScheduledForUpdate() bool {
	if o != nil && o.TotalWorkspacesScheduledForUpdate != nil {
		return true
	}

	return false
}

// SetTotalWorkspacesScheduledForUpdate gets a reference to the given int32 and assigns it to the TotalWorkspacesScheduledForUpdate field.
func (o *BTDocumentSummaryInfo) SetTotalWorkspacesScheduledForUpdate(v int32) {
	o.TotalWorkspacesScheduledForUpdate = &v
}

// GetTotalWorkspacesUpdating returns the TotalWorkspacesUpdating field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetTotalWorkspacesUpdating() int32 {
	if o == nil || o.TotalWorkspacesUpdating == nil {
		var ret int32
		return ret
	}
	return *o.TotalWorkspacesUpdating
}

// GetTotalWorkspacesUpdatingOk returns a tuple with the TotalWorkspacesUpdating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetTotalWorkspacesUpdatingOk() (*int32, bool) {
	if o == nil || o.TotalWorkspacesUpdating == nil {
		return nil, false
	}
	return o.TotalWorkspacesUpdating, true
}

// HasTotalWorkspacesUpdating returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasTotalWorkspacesUpdating() bool {
	if o != nil && o.TotalWorkspacesUpdating != nil {
		return true
	}

	return false
}

// SetTotalWorkspacesUpdating gets a reference to the given int32 and assigns it to the TotalWorkspacesUpdating field.
func (o *BTDocumentSummaryInfo) SetTotalWorkspacesUpdating(v int32) {
	o.TotalWorkspacesUpdating = &v
}

// GetTrash returns the Trash field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetTrash() bool {
	if o == nil || o.Trash == nil {
		var ret bool
		return ret
	}
	return *o.Trash
}

// GetTrashOk returns a tuple with the Trash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetTrashOk() (*bool, bool) {
	if o == nil || o.Trash == nil {
		return nil, false
	}
	return o.Trash, true
}

// HasTrash returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasTrash() bool {
	if o != nil && o.Trash != nil {
		return true
	}

	return false
}

// SetTrash gets a reference to the given bool and assigns it to the Trash field.
func (o *BTDocumentSummaryInfo) SetTrash(v bool) {
	o.Trash = &v
}

// GetTrashedAt returns the TrashedAt field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetTrashedAt() JSONTime {
	if o == nil || o.TrashedAt == nil {
		var ret JSONTime
		return ret
	}
	return *o.TrashedAt
}

// GetTrashedAtOk returns a tuple with the TrashedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetTrashedAtOk() (*JSONTime, bool) {
	if o == nil || o.TrashedAt == nil {
		return nil, false
	}
	return o.TrashedAt, true
}

// HasTrashedAt returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasTrashedAt() bool {
	if o != nil && o.TrashedAt != nil {
		return true
	}

	return false
}

// SetTrashedAt gets a reference to the given JSONTime and assigns it to the TrashedAt field.
func (o *BTDocumentSummaryInfo) SetTrashedAt(v JSONTime) {
	o.TrashedAt = &v
}

// GetUserAccountLimitsBreached returns the UserAccountLimitsBreached field value if set, zero value otherwise.
func (o *BTDocumentSummaryInfo) GetUserAccountLimitsBreached() bool {
	if o == nil || o.UserAccountLimitsBreached == nil {
		var ret bool
		return ret
	}
	return *o.UserAccountLimitsBreached
}

// GetUserAccountLimitsBreachedOk returns a tuple with the UserAccountLimitsBreached field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentSummaryInfo) GetUserAccountLimitsBreachedOk() (*bool, bool) {
	if o == nil || o.UserAccountLimitsBreached == nil {
		return nil, false
	}
	return o.UserAccountLimitsBreached, true
}

// HasUserAccountLimitsBreached returns a boolean if a field has been set.
func (o *BTDocumentSummaryInfo) HasUserAccountLimitsBreached() bool {
	if o != nil && o.UserAccountLimitsBreached != nil {
		return true
	}

	return false
}

// SetUserAccountLimitsBreached gets a reference to the given bool and assigns it to the UserAccountLimitsBreached field.
func (o *BTDocumentSummaryInfo) SetUserAccountLimitsBreached(v bool) {
	o.UserAccountLimitsBreached = &v
}

func (o BTDocumentSummaryInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTGlobalTreeNodeInfo, errBTGlobalTreeNodeInfo := json.Marshal(o.BTGlobalTreeNodeInfo)
	if errBTGlobalTreeNodeInfo != nil {
		return []byte{}, errBTGlobalTreeNodeInfo
	}
	errBTGlobalTreeNodeInfo = json.Unmarshal([]byte(serializedBTGlobalTreeNodeInfo), &toSerialize)
	if errBTGlobalTreeNodeInfo != nil {
		return []byte{}, errBTGlobalTreeNodeInfo
	}
	if o.JsonType != nil {
		toSerialize["jsonType"] = o.JsonType
	}
	if o.AnonymousAccessAllowed != nil {
		toSerialize["anonymousAccessAllowed"] = o.AnonymousAccessAllowed
	}
	if o.AnonymousAllowsExport != nil {
		toSerialize["anonymousAllowsExport"] = o.AnonymousAllowsExport
	}
	if o.CanUnshare != nil {
		toSerialize["canUnshare"] = o.CanUnshare
	}
	if o.CreatedWithEducationPlan != nil {
		toSerialize["createdWithEducationPlan"] = o.CreatedWithEducationPlan
	}
	if o.DefaultElementId != nil {
		toSerialize["defaultElementId"] = o.DefaultElementId
	}
	if o.DefaultWorkspace != nil {
		toSerialize["defaultWorkspace"] = o.DefaultWorkspace
	}
	if o.DocumentLabels != nil {
		toSerialize["documentLabels"] = o.DocumentLabels
	}
	if o.HasReleaseRevisionableObjects != nil {
		toSerialize["hasReleaseRevisionableObjects"] = o.HasReleaseRevisionableObjects
	}
	if o.HasRelevantInsertables != nil {
		toSerialize["hasRelevantInsertables"] = o.HasRelevantInsertables
	}
	if o.IsOrphaned != nil {
		toSerialize["isOrphaned"] = o.IsOrphaned
	}
	if o.IsUsingManagedWorkflow != nil {
		toSerialize["isUsingManagedWorkflow"] = o.IsUsingManagedWorkflow
	}
	if o.LikedByCurrentUser != nil {
		toSerialize["likedByCurrentUser"] = o.LikedByCurrentUser
	}
	if o.Likes != nil {
		toSerialize["likes"] = o.Likes
	}
	if o.NotRevisionManaged != nil {
		toSerialize["notRevisionManaged"] = o.NotRevisionManaged
	}
	if o.NumberOfTimesCopied != nil {
		toSerialize["numberOfTimesCopied"] = o.NumberOfTimesCopied
	}
	if o.NumberOfTimesReferenced != nil {
		toSerialize["numberOfTimesReferenced"] = o.NumberOfTimesReferenced
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	if o.PermissionSet != nil {
		toSerialize["permissionSet"] = o.PermissionSet
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	if o.RecentVersion != nil {
		toSerialize["recentVersion"] = o.RecentVersion
	}
	if o.SupportTeamUserAndShared != nil {
		toSerialize["supportTeamUserAndShared"] = o.SupportTeamUserAndShared
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Thumbnail != nil {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if o.TotalWorkspacesScheduledForUpdate != nil {
		toSerialize["totalWorkspacesScheduledForUpdate"] = o.TotalWorkspacesScheduledForUpdate
	}
	if o.TotalWorkspacesUpdating != nil {
		toSerialize["totalWorkspacesUpdating"] = o.TotalWorkspacesUpdating
	}
	if o.Trash != nil {
		toSerialize["trash"] = o.Trash
	}
	if o.TrashedAt != nil {
		toSerialize["trashedAt"] = o.TrashedAt
	}
	if o.UserAccountLimitsBreached != nil {
		toSerialize["userAccountLimitsBreached"] = o.UserAccountLimitsBreached
	}
	return json.Marshal(toSerialize)
}

type NullableBTDocumentSummaryInfo struct {
	value *BTDocumentSummaryInfo
	isSet bool
}

func (v NullableBTDocumentSummaryInfo) Get() *BTDocumentSummaryInfo {
	return v.value
}

func (v *NullableBTDocumentSummaryInfo) Set(val *BTDocumentSummaryInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTDocumentSummaryInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTDocumentSummaryInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTDocumentSummaryInfo(val *BTDocumentSummaryInfo) *NullableBTDocumentSummaryInfo {
	return &NullableBTDocumentSummaryInfo{value: val, isSet: true}
}

func (v NullableBTDocumentSummaryInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTDocumentSummaryInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
