/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTCloudStorageAccountInfoAllOf struct for BTCloudStorageAccountInfoAllOf
type BTCloudStorageAccountInfoAllOf struct {
	CloudStorageAccountId *string `json:"cloudStorageAccountId,omitempty"`
	CloudStorageProvider *int32 `json:"cloudStorageProvider,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	ExportFolder *BTCloudStorageObjectInfo `json:"exportFolder,omitempty"`
	ImportFolder *BTCloudStorageObjectInfo `json:"importFolder,omitempty"`
}

// NewBTCloudStorageAccountInfoAllOf instantiates a new BTCloudStorageAccountInfoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTCloudStorageAccountInfoAllOf() *BTCloudStorageAccountInfoAllOf {
	this := BTCloudStorageAccountInfoAllOf{}
	return &this
}

// NewBTCloudStorageAccountInfoAllOfWithDefaults instantiates a new BTCloudStorageAccountInfoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTCloudStorageAccountInfoAllOfWithDefaults() *BTCloudStorageAccountInfoAllOf {
	this := BTCloudStorageAccountInfoAllOf{}
	return &this
}

// GetCloudStorageAccountId returns the CloudStorageAccountId field value if set, zero value otherwise.
func (o *BTCloudStorageAccountInfoAllOf) GetCloudStorageAccountId() string {
	if o == nil || o.CloudStorageAccountId == nil {
		var ret string
		return ret
	}
	return *o.CloudStorageAccountId
}

// GetCloudStorageAccountIdOk returns a tuple with the CloudStorageAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCloudStorageAccountInfoAllOf) GetCloudStorageAccountIdOk() (*string, bool) {
	if o == nil || o.CloudStorageAccountId == nil {
		return nil, false
	}
	return o.CloudStorageAccountId, true
}

// HasCloudStorageAccountId returns a boolean if a field has been set.
func (o *BTCloudStorageAccountInfoAllOf) HasCloudStorageAccountId() bool {
	if o != nil && o.CloudStorageAccountId != nil {
		return true
	}

	return false
}

// SetCloudStorageAccountId gets a reference to the given string and assigns it to the CloudStorageAccountId field.
func (o *BTCloudStorageAccountInfoAllOf) SetCloudStorageAccountId(v string) {
	o.CloudStorageAccountId = &v
}

// GetCloudStorageProvider returns the CloudStorageProvider field value if set, zero value otherwise.
func (o *BTCloudStorageAccountInfoAllOf) GetCloudStorageProvider() int32 {
	if o == nil || o.CloudStorageProvider == nil {
		var ret int32
		return ret
	}
	return *o.CloudStorageProvider
}

// GetCloudStorageProviderOk returns a tuple with the CloudStorageProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCloudStorageAccountInfoAllOf) GetCloudStorageProviderOk() (*int32, bool) {
	if o == nil || o.CloudStorageProvider == nil {
		return nil, false
	}
	return o.CloudStorageProvider, true
}

// HasCloudStorageProvider returns a boolean if a field has been set.
func (o *BTCloudStorageAccountInfoAllOf) HasCloudStorageProvider() bool {
	if o != nil && o.CloudStorageProvider != nil {
		return true
	}

	return false
}

// SetCloudStorageProvider gets a reference to the given int32 and assigns it to the CloudStorageProvider field.
func (o *BTCloudStorageAccountInfoAllOf) SetCloudStorageProvider(v int32) {
	o.CloudStorageProvider = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *BTCloudStorageAccountInfoAllOf) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCloudStorageAccountInfoAllOf) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *BTCloudStorageAccountInfoAllOf) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *BTCloudStorageAccountInfoAllOf) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExportFolder returns the ExportFolder field value if set, zero value otherwise.
func (o *BTCloudStorageAccountInfoAllOf) GetExportFolder() BTCloudStorageObjectInfo {
	if o == nil || o.ExportFolder == nil {
		var ret BTCloudStorageObjectInfo
		return ret
	}
	return *o.ExportFolder
}

// GetExportFolderOk returns a tuple with the ExportFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCloudStorageAccountInfoAllOf) GetExportFolderOk() (*BTCloudStorageObjectInfo, bool) {
	if o == nil || o.ExportFolder == nil {
		return nil, false
	}
	return o.ExportFolder, true
}

// HasExportFolder returns a boolean if a field has been set.
func (o *BTCloudStorageAccountInfoAllOf) HasExportFolder() bool {
	if o != nil && o.ExportFolder != nil {
		return true
	}

	return false
}

// SetExportFolder gets a reference to the given BTCloudStorageObjectInfo and assigns it to the ExportFolder field.
func (o *BTCloudStorageAccountInfoAllOf) SetExportFolder(v BTCloudStorageObjectInfo) {
	o.ExportFolder = &v
}

// GetImportFolder returns the ImportFolder field value if set, zero value otherwise.
func (o *BTCloudStorageAccountInfoAllOf) GetImportFolder() BTCloudStorageObjectInfo {
	if o == nil || o.ImportFolder == nil {
		var ret BTCloudStorageObjectInfo
		return ret
	}
	return *o.ImportFolder
}

// GetImportFolderOk returns a tuple with the ImportFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCloudStorageAccountInfoAllOf) GetImportFolderOk() (*BTCloudStorageObjectInfo, bool) {
	if o == nil || o.ImportFolder == nil {
		return nil, false
	}
	return o.ImportFolder, true
}

// HasImportFolder returns a boolean if a field has been set.
func (o *BTCloudStorageAccountInfoAllOf) HasImportFolder() bool {
	if o != nil && o.ImportFolder != nil {
		return true
	}

	return false
}

// SetImportFolder gets a reference to the given BTCloudStorageObjectInfo and assigns it to the ImportFolder field.
func (o *BTCloudStorageAccountInfoAllOf) SetImportFolder(v BTCloudStorageObjectInfo) {
	o.ImportFolder = &v
}

func (o BTCloudStorageAccountInfoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudStorageAccountId != nil {
		toSerialize["cloudStorageAccountId"] = o.CloudStorageAccountId
	}
	if o.CloudStorageProvider != nil {
		toSerialize["cloudStorageProvider"] = o.CloudStorageProvider
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ExportFolder != nil {
		toSerialize["exportFolder"] = o.ExportFolder
	}
	if o.ImportFolder != nil {
		toSerialize["importFolder"] = o.ImportFolder
	}
	return json.Marshal(toSerialize)
}

type NullableBTCloudStorageAccountInfoAllOf struct {
	value *BTCloudStorageAccountInfoAllOf
	isSet bool
}

func (v NullableBTCloudStorageAccountInfoAllOf) Get() *BTCloudStorageAccountInfoAllOf {
	return v.value
}

func (v *NullableBTCloudStorageAccountInfoAllOf) Set(val *BTCloudStorageAccountInfoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTCloudStorageAccountInfoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTCloudStorageAccountInfoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTCloudStorageAccountInfoAllOf(val *BTCloudStorageAccountInfoAllOf) *NullableBTCloudStorageAccountInfoAllOf {
	return &NullableBTCloudStorageAccountInfoAllOf{value: val, isSet: true}
}

func (v NullableBTCloudStorageAccountInfoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTCloudStorageAccountInfoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
