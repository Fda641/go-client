/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTAppElementCommitTransactionParams struct for BTAppElementCommitTransactionParams
type BTAppElementCommitTransactionParams struct {
	Description *string `json:"description,omitempty"`
	ReturnError *bool `json:"returnError,omitempty"`
	TransactionId *string `json:"transactionId,omitempty"`
}

// NewBTAppElementCommitTransactionParams instantiates a new BTAppElementCommitTransactionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAppElementCommitTransactionParams() *BTAppElementCommitTransactionParams {
	this := BTAppElementCommitTransactionParams{}
	return &this
}

// NewBTAppElementCommitTransactionParamsWithDefaults instantiates a new BTAppElementCommitTransactionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAppElementCommitTransactionParamsWithDefaults() *BTAppElementCommitTransactionParams {
	this := BTAppElementCommitTransactionParams{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTAppElementCommitTransactionParams) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementCommitTransactionParams) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTAppElementCommitTransactionParams) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTAppElementCommitTransactionParams) SetDescription(v string) {
	o.Description = &v
}

// GetReturnError returns the ReturnError field value if set, zero value otherwise.
func (o *BTAppElementCommitTransactionParams) GetReturnError() bool {
	if o == nil || o.ReturnError == nil {
		var ret bool
		return ret
	}
	return *o.ReturnError
}

// GetReturnErrorOk returns a tuple with the ReturnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementCommitTransactionParams) GetReturnErrorOk() (*bool, bool) {
	if o == nil || o.ReturnError == nil {
		return nil, false
	}
	return o.ReturnError, true
}

// HasReturnError returns a boolean if a field has been set.
func (o *BTAppElementCommitTransactionParams) HasReturnError() bool {
	if o != nil && o.ReturnError != nil {
		return true
	}

	return false
}

// SetReturnError gets a reference to the given bool and assigns it to the ReturnError field.
func (o *BTAppElementCommitTransactionParams) SetReturnError(v bool) {
	o.ReturnError = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *BTAppElementCommitTransactionParams) GetTransactionId() string {
	if o == nil || o.TransactionId == nil {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementCommitTransactionParams) GetTransactionIdOk() (*string, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *BTAppElementCommitTransactionParams) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *BTAppElementCommitTransactionParams) SetTransactionId(v string) {
	o.TransactionId = &v
}

func (o BTAppElementCommitTransactionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ReturnError != nil {
		toSerialize["returnError"] = o.ReturnError
	}
	if o.TransactionId != nil {
		toSerialize["transactionId"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableBTAppElementCommitTransactionParams struct {
	value *BTAppElementCommitTransactionParams
	isSet bool
}

func (v NullableBTAppElementCommitTransactionParams) Get() *BTAppElementCommitTransactionParams {
	return v.value
}

func (v *NullableBTAppElementCommitTransactionParams) Set(val *BTAppElementCommitTransactionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAppElementCommitTransactionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAppElementCommitTransactionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAppElementCommitTransactionParams(val *BTAppElementCommitTransactionParams) *NullableBTAppElementCommitTransactionParams {
	return &NullableBTAppElementCommitTransactionParams{value: val, isSet: true}
}

func (v NullableBTAppElementCommitTransactionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAppElementCommitTransactionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
