/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTStringMinimumLengthPattern895AllOf struct for BTStringMinimumLengthPattern895AllOf
type BTStringMinimumLengthPattern895AllOf struct {
	BtType *string `json:"btType,omitempty"`
	MinimumLength *int32 `json:"minimumLength,omitempty"`
}

// NewBTStringMinimumLengthPattern895AllOf instantiates a new BTStringMinimumLengthPattern895AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTStringMinimumLengthPattern895AllOf() *BTStringMinimumLengthPattern895AllOf {
	this := BTStringMinimumLengthPattern895AllOf{}
	return &this
}

// NewBTStringMinimumLengthPattern895AllOfWithDefaults instantiates a new BTStringMinimumLengthPattern895AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTStringMinimumLengthPattern895AllOfWithDefaults() *BTStringMinimumLengthPattern895AllOf {
	this := BTStringMinimumLengthPattern895AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTStringMinimumLengthPattern895AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTStringMinimumLengthPattern895AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTStringMinimumLengthPattern895AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTStringMinimumLengthPattern895AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetMinimumLength returns the MinimumLength field value if set, zero value otherwise.
func (o *BTStringMinimumLengthPattern895AllOf) GetMinimumLength() int32 {
	if o == nil || o.MinimumLength == nil {
		var ret int32
		return ret
	}
	return *o.MinimumLength
}

// GetMinimumLengthOk returns a tuple with the MinimumLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTStringMinimumLengthPattern895AllOf) GetMinimumLengthOk() (*int32, bool) {
	if o == nil || o.MinimumLength == nil {
		return nil, false
	}
	return o.MinimumLength, true
}

// HasMinimumLength returns a boolean if a field has been set.
func (o *BTStringMinimumLengthPattern895AllOf) HasMinimumLength() bool {
	if o != nil && o.MinimumLength != nil {
		return true
	}

	return false
}

// SetMinimumLength gets a reference to the given int32 and assigns it to the MinimumLength field.
func (o *BTStringMinimumLengthPattern895AllOf) SetMinimumLength(v int32) {
	o.MinimumLength = &v
}

func (o BTStringMinimumLengthPattern895AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.MinimumLength != nil {
		toSerialize["minimumLength"] = o.MinimumLength
	}
	return json.Marshal(toSerialize)
}

type NullableBTStringMinimumLengthPattern895AllOf struct {
	value *BTStringMinimumLengthPattern895AllOf
	isSet bool
}

func (v NullableBTStringMinimumLengthPattern895AllOf) Get() *BTStringMinimumLengthPattern895AllOf {
	return v.value
}

func (v *NullableBTStringMinimumLengthPattern895AllOf) Set(val *BTStringMinimumLengthPattern895AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTStringMinimumLengthPattern895AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTStringMinimumLengthPattern895AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTStringMinimumLengthPattern895AllOf(val *BTStringMinimumLengthPattern895AllOf) *NullableBTStringMinimumLengthPattern895AllOf {
	return &NullableBTStringMinimumLengthPattern895AllOf{value: val, isSet: true}
}

func (v NullableBTStringMinimumLengthPattern895AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTStringMinimumLengthPattern895AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
