/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTParameterSpecArray2600 struct for BTParameterSpecArray2600
type BTParameterSpecArray2600 struct {
	BTParameterSpec6
	BtType *string `json:"btType,omitempty"`
	DrivenQuery *string `json:"drivenQuery,omitempty"`
	ItemLabelTemplate *string `json:"itemLabelTemplate,omitempty"`
	ItemName *string `json:"itemName,omitempty"`
}

// NewBTParameterSpecArray2600 instantiates a new BTParameterSpecArray2600 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTParameterSpecArray2600() *BTParameterSpecArray2600 {
	this := BTParameterSpecArray2600{}
	return &this
}

// NewBTParameterSpecArray2600WithDefaults instantiates a new BTParameterSpecArray2600 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTParameterSpecArray2600WithDefaults() *BTParameterSpecArray2600 {
	this := BTParameterSpecArray2600{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTParameterSpecArray2600) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecArray2600) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTParameterSpecArray2600) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTParameterSpecArray2600) SetBtType(v string) {
	o.BtType = &v
}

// GetDrivenQuery returns the DrivenQuery field value if set, zero value otherwise.
func (o *BTParameterSpecArray2600) GetDrivenQuery() string {
	if o == nil || o.DrivenQuery == nil {
		var ret string
		return ret
	}
	return *o.DrivenQuery
}

// GetDrivenQueryOk returns a tuple with the DrivenQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecArray2600) GetDrivenQueryOk() (*string, bool) {
	if o == nil || o.DrivenQuery == nil {
		return nil, false
	}
	return o.DrivenQuery, true
}

// HasDrivenQuery returns a boolean if a field has been set.
func (o *BTParameterSpecArray2600) HasDrivenQuery() bool {
	if o != nil && o.DrivenQuery != nil {
		return true
	}

	return false
}

// SetDrivenQuery gets a reference to the given string and assigns it to the DrivenQuery field.
func (o *BTParameterSpecArray2600) SetDrivenQuery(v string) {
	o.DrivenQuery = &v
}

// GetItemLabelTemplate returns the ItemLabelTemplate field value if set, zero value otherwise.
func (o *BTParameterSpecArray2600) GetItemLabelTemplate() string {
	if o == nil || o.ItemLabelTemplate == nil {
		var ret string
		return ret
	}
	return *o.ItemLabelTemplate
}

// GetItemLabelTemplateOk returns a tuple with the ItemLabelTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecArray2600) GetItemLabelTemplateOk() (*string, bool) {
	if o == nil || o.ItemLabelTemplate == nil {
		return nil, false
	}
	return o.ItemLabelTemplate, true
}

// HasItemLabelTemplate returns a boolean if a field has been set.
func (o *BTParameterSpecArray2600) HasItemLabelTemplate() bool {
	if o != nil && o.ItemLabelTemplate != nil {
		return true
	}

	return false
}

// SetItemLabelTemplate gets a reference to the given string and assigns it to the ItemLabelTemplate field.
func (o *BTParameterSpecArray2600) SetItemLabelTemplate(v string) {
	o.ItemLabelTemplate = &v
}

// GetItemName returns the ItemName field value if set, zero value otherwise.
func (o *BTParameterSpecArray2600) GetItemName() string {
	if o == nil || o.ItemName == nil {
		var ret string
		return ret
	}
	return *o.ItemName
}

// GetItemNameOk returns a tuple with the ItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecArray2600) GetItemNameOk() (*string, bool) {
	if o == nil || o.ItemName == nil {
		return nil, false
	}
	return o.ItemName, true
}

// HasItemName returns a boolean if a field has been set.
func (o *BTParameterSpecArray2600) HasItemName() bool {
	if o != nil && o.ItemName != nil {
		return true
	}

	return false
}

// SetItemName gets a reference to the given string and assigns it to the ItemName field.
func (o *BTParameterSpecArray2600) SetItemName(v string) {
	o.ItemName = &v
}

func (o BTParameterSpecArray2600) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTParameterSpec6, errBTParameterSpec6 := json.Marshal(o.BTParameterSpec6)
	if errBTParameterSpec6 != nil {
		return []byte{}, errBTParameterSpec6
	}
	errBTParameterSpec6 = json.Unmarshal([]byte(serializedBTParameterSpec6), &toSerialize)
	if errBTParameterSpec6 != nil {
		return []byte{}, errBTParameterSpec6
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.DrivenQuery != nil {
		toSerialize["drivenQuery"] = o.DrivenQuery
	}
	if o.ItemLabelTemplate != nil {
		toSerialize["itemLabelTemplate"] = o.ItemLabelTemplate
	}
	if o.ItemName != nil {
		toSerialize["itemName"] = o.ItemName
	}
	return json.Marshal(toSerialize)
}

type NullableBTParameterSpecArray2600 struct {
	value *BTParameterSpecArray2600
	isSet bool
}

func (v NullableBTParameterSpecArray2600) Get() *BTParameterSpecArray2600 {
	return v.value
}

func (v *NullableBTParameterSpecArray2600) Set(val *BTParameterSpecArray2600) {
	v.value = val
	v.isSet = true
}

func (v NullableBTParameterSpecArray2600) IsSet() bool {
	return v.isSet
}

func (v *NullableBTParameterSpecArray2600) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTParameterSpecArray2600(val *BTParameterSpecArray2600) *NullableBTParameterSpecArray2600 {
	return &NullableBTParameterSpecArray2600{value: val, isSet: true}
}

func (v NullableBTParameterSpecArray2600) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTParameterSpecArray2600) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
