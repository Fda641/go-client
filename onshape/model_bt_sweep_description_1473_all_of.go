/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTSweepDescription1473AllOf struct for BTSweepDescription1473AllOf
type BTSweepDescription1473AllOf struct {
	BtType *string `json:"btType,omitempty"`
	Direction *BTVector3d389 `json:"direction,omitempty"`
	Profile *BTSplineDescription2118 `json:"profile,omitempty"`
}

// NewBTSweepDescription1473AllOf instantiates a new BTSweepDescription1473AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTSweepDescription1473AllOf() *BTSweepDescription1473AllOf {
	this := BTSweepDescription1473AllOf{}
	return &this
}

// NewBTSweepDescription1473AllOfWithDefaults instantiates a new BTSweepDescription1473AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTSweepDescription1473AllOfWithDefaults() *BTSweepDescription1473AllOf {
	this := BTSweepDescription1473AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTSweepDescription1473AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTSweepDescription1473AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTSweepDescription1473AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTSweepDescription1473AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *BTSweepDescription1473AllOf) GetDirection() BTVector3d389 {
	if o == nil || o.Direction == nil {
		var ret BTVector3d389
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTSweepDescription1473AllOf) GetDirectionOk() (*BTVector3d389, bool) {
	if o == nil || o.Direction == nil {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *BTSweepDescription1473AllOf) HasDirection() bool {
	if o != nil && o.Direction != nil {
		return true
	}

	return false
}

// SetDirection gets a reference to the given BTVector3d389 and assigns it to the Direction field.
func (o *BTSweepDescription1473AllOf) SetDirection(v BTVector3d389) {
	o.Direction = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *BTSweepDescription1473AllOf) GetProfile() BTSplineDescription2118 {
	if o == nil || o.Profile == nil {
		var ret BTSplineDescription2118
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTSweepDescription1473AllOf) GetProfileOk() (*BTSplineDescription2118, bool) {
	if o == nil || o.Profile == nil {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *BTSweepDescription1473AllOf) HasProfile() bool {
	if o != nil && o.Profile != nil {
		return true
	}

	return false
}

// SetProfile gets a reference to the given BTSplineDescription2118 and assigns it to the Profile field.
func (o *BTSweepDescription1473AllOf) SetProfile(v BTSplineDescription2118) {
	o.Profile = &v
}

func (o BTSweepDescription1473AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Direction != nil {
		toSerialize["direction"] = o.Direction
	}
	if o.Profile != nil {
		toSerialize["profile"] = o.Profile
	}
	return json.Marshal(toSerialize)
}

type NullableBTSweepDescription1473AllOf struct {
	value *BTSweepDescription1473AllOf
	isSet bool
}

func (v NullableBTSweepDescription1473AllOf) Get() *BTSweepDescription1473AllOf {
	return v.value
}

func (v *NullableBTSweepDescription1473AllOf) Set(val *BTSweepDescription1473AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTSweepDescription1473AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTSweepDescription1473AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTSweepDescription1473AllOf(val *BTSweepDescription1473AllOf) *NullableBTSweepDescription1473AllOf {
	return &NullableBTSweepDescription1473AllOf{value: val, isSet: true}
}

func (v NullableBTSweepDescription1473AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTSweepDescription1473AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
