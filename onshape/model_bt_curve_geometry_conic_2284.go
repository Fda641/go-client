/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTCurveGeometryConic2284 struct for BTCurveGeometryConic2284
type BTCurveGeometryConic2284 struct {
	BTCurveGeometry114
	BtType *string `json:"btType,omitempty"`
	Points *[]float64 `json:"points,omitempty"`
	Rho *float64 `json:"rho,omitempty"`
}

// NewBTCurveGeometryConic2284 instantiates a new BTCurveGeometryConic2284 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTCurveGeometryConic2284() *BTCurveGeometryConic2284 {
	this := BTCurveGeometryConic2284{}
	return &this
}

// NewBTCurveGeometryConic2284WithDefaults instantiates a new BTCurveGeometryConic2284 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTCurveGeometryConic2284WithDefaults() *BTCurveGeometryConic2284 {
	this := BTCurveGeometryConic2284{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTCurveGeometryConic2284) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometryConic2284) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTCurveGeometryConic2284) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTCurveGeometryConic2284) SetBtType(v string) {
	o.BtType = &v
}

// GetPoints returns the Points field value if set, zero value otherwise.
func (o *BTCurveGeometryConic2284) GetPoints() []float64 {
	if o == nil || o.Points == nil {
		var ret []float64
		return ret
	}
	return *o.Points
}

// GetPointsOk returns a tuple with the Points field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometryConic2284) GetPointsOk() (*[]float64, bool) {
	if o == nil || o.Points == nil {
		return nil, false
	}
	return o.Points, true
}

// HasPoints returns a boolean if a field has been set.
func (o *BTCurveGeometryConic2284) HasPoints() bool {
	if o != nil && o.Points != nil {
		return true
	}

	return false
}

// SetPoints gets a reference to the given []float64 and assigns it to the Points field.
func (o *BTCurveGeometryConic2284) SetPoints(v []float64) {
	o.Points = &v
}

// GetRho returns the Rho field value if set, zero value otherwise.
func (o *BTCurveGeometryConic2284) GetRho() float64 {
	if o == nil || o.Rho == nil {
		var ret float64
		return ret
	}
	return *o.Rho
}

// GetRhoOk returns a tuple with the Rho field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometryConic2284) GetRhoOk() (*float64, bool) {
	if o == nil || o.Rho == nil {
		return nil, false
	}
	return o.Rho, true
}

// HasRho returns a boolean if a field has been set.
func (o *BTCurveGeometryConic2284) HasRho() bool {
	if o != nil && o.Rho != nil {
		return true
	}

	return false
}

// SetRho gets a reference to the given float64 and assigns it to the Rho field.
func (o *BTCurveGeometryConic2284) SetRho(v float64) {
	o.Rho = &v
}

func (o BTCurveGeometryConic2284) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTCurveGeometry114, errBTCurveGeometry114 := json.Marshal(o.BTCurveGeometry114)
	if errBTCurveGeometry114 != nil {
		return []byte{}, errBTCurveGeometry114
	}
	errBTCurveGeometry114 = json.Unmarshal([]byte(serializedBTCurveGeometry114), &toSerialize)
	if errBTCurveGeometry114 != nil {
		return []byte{}, errBTCurveGeometry114
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Points != nil {
		toSerialize["points"] = o.Points
	}
	if o.Rho != nil {
		toSerialize["rho"] = o.Rho
	}
	return json.Marshal(toSerialize)
}

type NullableBTCurveGeometryConic2284 struct {
	value *BTCurveGeometryConic2284
	isSet bool
}

func (v NullableBTCurveGeometryConic2284) Get() *BTCurveGeometryConic2284 {
	return v.value
}

func (v *NullableBTCurveGeometryConic2284) Set(val *BTCurveGeometryConic2284) {
	v.value = val
	v.isSet = true
}

func (v NullableBTCurveGeometryConic2284) IsSet() bool {
	return v.isSet
}

func (v *NullableBTCurveGeometryConic2284) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTCurveGeometryConic2284(val *BTCurveGeometryConic2284) *NullableBTCurveGeometryConic2284 {
	return &NullableBTCurveGeometryConic2284{value: val, isSet: true}
}

func (v NullableBTCurveGeometryConic2284) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTCurveGeometryConic2284) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
