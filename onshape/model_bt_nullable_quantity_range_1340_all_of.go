/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTNullableQuantityRange1340AllOf struct for BTNullableQuantityRange1340AllOf
type BTNullableQuantityRange1340AllOf struct {
	BtType *string `json:"btType,omitempty"`
	HasDefaultValue *bool `json:"hasDefaultValue,omitempty"`
	HasMaxValue *bool `json:"hasMaxValue,omitempty"`
	HasMinValue *bool `json:"hasMinValue,omitempty"`
}

// NewBTNullableQuantityRange1340AllOf instantiates a new BTNullableQuantityRange1340AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTNullableQuantityRange1340AllOf() *BTNullableQuantityRange1340AllOf {
	this := BTNullableQuantityRange1340AllOf{}
	return &this
}

// NewBTNullableQuantityRange1340AllOfWithDefaults instantiates a new BTNullableQuantityRange1340AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTNullableQuantityRange1340AllOfWithDefaults() *BTNullableQuantityRange1340AllOf {
	this := BTNullableQuantityRange1340AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTNullableQuantityRange1340AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTNullableQuantityRange1340AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTNullableQuantityRange1340AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTNullableQuantityRange1340AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetHasDefaultValue returns the HasDefaultValue field value if set, zero value otherwise.
func (o *BTNullableQuantityRange1340AllOf) GetHasDefaultValue() bool {
	if o == nil || o.HasDefaultValue == nil {
		var ret bool
		return ret
	}
	return *o.HasDefaultValue
}

// GetHasDefaultValueOk returns a tuple with the HasDefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTNullableQuantityRange1340AllOf) GetHasDefaultValueOk() (*bool, bool) {
	if o == nil || o.HasDefaultValue == nil {
		return nil, false
	}
	return o.HasDefaultValue, true
}

// HasHasDefaultValue returns a boolean if a field has been set.
func (o *BTNullableQuantityRange1340AllOf) HasHasDefaultValue() bool {
	if o != nil && o.HasDefaultValue != nil {
		return true
	}

	return false
}

// SetHasDefaultValue gets a reference to the given bool and assigns it to the HasDefaultValue field.
func (o *BTNullableQuantityRange1340AllOf) SetHasDefaultValue(v bool) {
	o.HasDefaultValue = &v
}

// GetHasMaxValue returns the HasMaxValue field value if set, zero value otherwise.
func (o *BTNullableQuantityRange1340AllOf) GetHasMaxValue() bool {
	if o == nil || o.HasMaxValue == nil {
		var ret bool
		return ret
	}
	return *o.HasMaxValue
}

// GetHasMaxValueOk returns a tuple with the HasMaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTNullableQuantityRange1340AllOf) GetHasMaxValueOk() (*bool, bool) {
	if o == nil || o.HasMaxValue == nil {
		return nil, false
	}
	return o.HasMaxValue, true
}

// HasHasMaxValue returns a boolean if a field has been set.
func (o *BTNullableQuantityRange1340AllOf) HasHasMaxValue() bool {
	if o != nil && o.HasMaxValue != nil {
		return true
	}

	return false
}

// SetHasMaxValue gets a reference to the given bool and assigns it to the HasMaxValue field.
func (o *BTNullableQuantityRange1340AllOf) SetHasMaxValue(v bool) {
	o.HasMaxValue = &v
}

// GetHasMinValue returns the HasMinValue field value if set, zero value otherwise.
func (o *BTNullableQuantityRange1340AllOf) GetHasMinValue() bool {
	if o == nil || o.HasMinValue == nil {
		var ret bool
		return ret
	}
	return *o.HasMinValue
}

// GetHasMinValueOk returns a tuple with the HasMinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTNullableQuantityRange1340AllOf) GetHasMinValueOk() (*bool, bool) {
	if o == nil || o.HasMinValue == nil {
		return nil, false
	}
	return o.HasMinValue, true
}

// HasHasMinValue returns a boolean if a field has been set.
func (o *BTNullableQuantityRange1340AllOf) HasHasMinValue() bool {
	if o != nil && o.HasMinValue != nil {
		return true
	}

	return false
}

// SetHasMinValue gets a reference to the given bool and assigns it to the HasMinValue field.
func (o *BTNullableQuantityRange1340AllOf) SetHasMinValue(v bool) {
	o.HasMinValue = &v
}

func (o BTNullableQuantityRange1340AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.HasDefaultValue != nil {
		toSerialize["hasDefaultValue"] = o.HasDefaultValue
	}
	if o.HasMaxValue != nil {
		toSerialize["hasMaxValue"] = o.HasMaxValue
	}
	if o.HasMinValue != nil {
		toSerialize["hasMinValue"] = o.HasMinValue
	}
	return json.Marshal(toSerialize)
}

type NullableBTNullableQuantityRange1340AllOf struct {
	value *BTNullableQuantityRange1340AllOf
	isSet bool
}

func (v NullableBTNullableQuantityRange1340AllOf) Get() *BTNullableQuantityRange1340AllOf {
	return v.value
}

func (v *NullableBTNullableQuantityRange1340AllOf) Set(val *BTNullableQuantityRange1340AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTNullableQuantityRange1340AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTNullableQuantityRange1340AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTNullableQuantityRange1340AllOf(val *BTNullableQuantityRange1340AllOf) *NullableBTNullableQuantityRange1340AllOf {
	return &NullableBTNullableQuantityRange1340AllOf{value: val, isSet: true}
}

func (v NullableBTNullableQuantityRange1340AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTNullableQuantityRange1340AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
