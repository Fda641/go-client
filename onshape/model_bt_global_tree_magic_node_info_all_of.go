/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTGlobalTreeMagicNodeInfoAllOf struct for BTGlobalTreeMagicNodeInfoAllOf
type BTGlobalTreeMagicNodeInfoAllOf struct {
	SubType *int32 `json:"subType,omitempty"`
}

// NewBTGlobalTreeMagicNodeInfoAllOf instantiates a new BTGlobalTreeMagicNodeInfoAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTGlobalTreeMagicNodeInfoAllOf() *BTGlobalTreeMagicNodeInfoAllOf {
	this := BTGlobalTreeMagicNodeInfoAllOf{}
	return &this
}

// NewBTGlobalTreeMagicNodeInfoAllOfWithDefaults instantiates a new BTGlobalTreeMagicNodeInfoAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTGlobalTreeMagicNodeInfoAllOfWithDefaults() *BTGlobalTreeMagicNodeInfoAllOf {
	this := BTGlobalTreeMagicNodeInfoAllOf{}
	return &this
}

// GetSubType returns the SubType field value if set, zero value otherwise.
func (o *BTGlobalTreeMagicNodeInfoAllOf) GetSubType() int32 {
	if o == nil || o.SubType == nil {
		var ret int32
		return ret
	}
	return *o.SubType
}

// GetSubTypeOk returns a tuple with the SubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTGlobalTreeMagicNodeInfoAllOf) GetSubTypeOk() (*int32, bool) {
	if o == nil || o.SubType == nil {
		return nil, false
	}
	return o.SubType, true
}

// HasSubType returns a boolean if a field has been set.
func (o *BTGlobalTreeMagicNodeInfoAllOf) HasSubType() bool {
	if o != nil && o.SubType != nil {
		return true
	}

	return false
}

// SetSubType gets a reference to the given int32 and assigns it to the SubType field.
func (o *BTGlobalTreeMagicNodeInfoAllOf) SetSubType(v int32) {
	o.SubType = &v
}

func (o BTGlobalTreeMagicNodeInfoAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SubType != nil {
		toSerialize["subType"] = o.SubType
	}
	return json.Marshal(toSerialize)
}

type NullableBTGlobalTreeMagicNodeInfoAllOf struct {
	value *BTGlobalTreeMagicNodeInfoAllOf
	isSet bool
}

func (v NullableBTGlobalTreeMagicNodeInfoAllOf) Get() *BTGlobalTreeMagicNodeInfoAllOf {
	return v.value
}

func (v *NullableBTGlobalTreeMagicNodeInfoAllOf) Set(val *BTGlobalTreeMagicNodeInfoAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTGlobalTreeMagicNodeInfoAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTGlobalTreeMagicNodeInfoAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTGlobalTreeMagicNodeInfoAllOf(val *BTGlobalTreeMagicNodeInfoAllOf) *NullableBTGlobalTreeMagicNodeInfoAllOf {
	return &NullableBTGlobalTreeMagicNodeInfoAllOf{value: val, isSet: true}
}

func (v NullableBTGlobalTreeMagicNodeInfoAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTGlobalTreeMagicNodeInfoAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
