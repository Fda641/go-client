/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTPlaneOrientationFilter1700AllOf struct for BTPlaneOrientationFilter1700AllOf
type BTPlaneOrientationFilter1700AllOf struct {
	BtType *string `json:"btType,omitempty"`
	Normal *BTVector3d389 `json:"normal,omitempty"`
}

// NewBTPlaneOrientationFilter1700AllOf instantiates a new BTPlaneOrientationFilter1700AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPlaneOrientationFilter1700AllOf() *BTPlaneOrientationFilter1700AllOf {
	this := BTPlaneOrientationFilter1700AllOf{}
	return &this
}

// NewBTPlaneOrientationFilter1700AllOfWithDefaults instantiates a new BTPlaneOrientationFilter1700AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPlaneOrientationFilter1700AllOfWithDefaults() *BTPlaneOrientationFilter1700AllOf {
	this := BTPlaneOrientationFilter1700AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPlaneOrientationFilter1700AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPlaneOrientationFilter1700AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPlaneOrientationFilter1700AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPlaneOrientationFilter1700AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetNormal returns the Normal field value if set, zero value otherwise.
func (o *BTPlaneOrientationFilter1700AllOf) GetNormal() BTVector3d389 {
	if o == nil || o.Normal == nil {
		var ret BTVector3d389
		return ret
	}
	return *o.Normal
}

// GetNormalOk returns a tuple with the Normal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPlaneOrientationFilter1700AllOf) GetNormalOk() (*BTVector3d389, bool) {
	if o == nil || o.Normal == nil {
		return nil, false
	}
	return o.Normal, true
}

// HasNormal returns a boolean if a field has been set.
func (o *BTPlaneOrientationFilter1700AllOf) HasNormal() bool {
	if o != nil && o.Normal != nil {
		return true
	}

	return false
}

// SetNormal gets a reference to the given BTVector3d389 and assigns it to the Normal field.
func (o *BTPlaneOrientationFilter1700AllOf) SetNormal(v BTVector3d389) {
	o.Normal = &v
}

func (o BTPlaneOrientationFilter1700AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Normal != nil {
		toSerialize["normal"] = o.Normal
	}
	return json.Marshal(toSerialize)
}

type NullableBTPlaneOrientationFilter1700AllOf struct {
	value *BTPlaneOrientationFilter1700AllOf
	isSet bool
}

func (v NullableBTPlaneOrientationFilter1700AllOf) Get() *BTPlaneOrientationFilter1700AllOf {
	return v.value
}

func (v *NullableBTPlaneOrientationFilter1700AllOf) Set(val *BTPlaneOrientationFilter1700AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPlaneOrientationFilter1700AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPlaneOrientationFilter1700AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPlaneOrientationFilter1700AllOf(val *BTPlaneOrientationFilter1700AllOf) *NullableBTPlaneOrientationFilter1700AllOf {
	return &NullableBTPlaneOrientationFilter1700AllOf{value: val, isSet: true}
}

func (v NullableBTPlaneOrientationFilter1700AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPlaneOrientationFilter1700AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
