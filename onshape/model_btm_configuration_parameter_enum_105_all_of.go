/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMConfigurationParameterEnum105AllOf struct for BTMConfigurationParameterEnum105AllOf
type BTMConfigurationParameterEnum105AllOf struct {
	BtType *string `json:"btType,omitempty"`
	DefaultValue *string `json:"defaultValue,omitempty"`
	EnumName *string `json:"enumName,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	OptionIds *[]string `json:"optionIds,omitempty"`
	Options *[]BTMEnumOption592 `json:"options,omitempty"`
}

// NewBTMConfigurationParameterEnum105AllOf instantiates a new BTMConfigurationParameterEnum105AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMConfigurationParameterEnum105AllOf() *BTMConfigurationParameterEnum105AllOf {
	this := BTMConfigurationParameterEnum105AllOf{}
	return &this
}

// NewBTMConfigurationParameterEnum105AllOfWithDefaults instantiates a new BTMConfigurationParameterEnum105AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMConfigurationParameterEnum105AllOfWithDefaults() *BTMConfigurationParameterEnum105AllOf {
	this := BTMConfigurationParameterEnum105AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMConfigurationParameterEnum105AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterEnum105AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMConfigurationParameterEnum105AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMConfigurationParameterEnum105AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *BTMConfigurationParameterEnum105AllOf) GetDefaultValue() string {
	if o == nil || o.DefaultValue == nil {
		var ret string
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterEnum105AllOf) GetDefaultValueOk() (*string, bool) {
	if o == nil || o.DefaultValue == nil {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *BTMConfigurationParameterEnum105AllOf) HasDefaultValue() bool {
	if o != nil && o.DefaultValue != nil {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given string and assigns it to the DefaultValue field.
func (o *BTMConfigurationParameterEnum105AllOf) SetDefaultValue(v string) {
	o.DefaultValue = &v
}

// GetEnumName returns the EnumName field value if set, zero value otherwise.
func (o *BTMConfigurationParameterEnum105AllOf) GetEnumName() string {
	if o == nil || o.EnumName == nil {
		var ret string
		return ret
	}
	return *o.EnumName
}

// GetEnumNameOk returns a tuple with the EnumName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterEnum105AllOf) GetEnumNameOk() (*string, bool) {
	if o == nil || o.EnumName == nil {
		return nil, false
	}
	return o.EnumName, true
}

// HasEnumName returns a boolean if a field has been set.
func (o *BTMConfigurationParameterEnum105AllOf) HasEnumName() bool {
	if o != nil && o.EnumName != nil {
		return true
	}

	return false
}

// SetEnumName gets a reference to the given string and assigns it to the EnumName field.
func (o *BTMConfigurationParameterEnum105AllOf) SetEnumName(v string) {
	o.EnumName = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *BTMConfigurationParameterEnum105AllOf) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterEnum105AllOf) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *BTMConfigurationParameterEnum105AllOf) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *BTMConfigurationParameterEnum105AllOf) SetNamespace(v string) {
	o.Namespace = &v
}

// GetOptionIds returns the OptionIds field value if set, zero value otherwise.
func (o *BTMConfigurationParameterEnum105AllOf) GetOptionIds() []string {
	if o == nil || o.OptionIds == nil {
		var ret []string
		return ret
	}
	return *o.OptionIds
}

// GetOptionIdsOk returns a tuple with the OptionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterEnum105AllOf) GetOptionIdsOk() (*[]string, bool) {
	if o == nil || o.OptionIds == nil {
		return nil, false
	}
	return o.OptionIds, true
}

// HasOptionIds returns a boolean if a field has been set.
func (o *BTMConfigurationParameterEnum105AllOf) HasOptionIds() bool {
	if o != nil && o.OptionIds != nil {
		return true
	}

	return false
}

// SetOptionIds gets a reference to the given []string and assigns it to the OptionIds field.
func (o *BTMConfigurationParameterEnum105AllOf) SetOptionIds(v []string) {
	o.OptionIds = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *BTMConfigurationParameterEnum105AllOf) GetOptions() []BTMEnumOption592 {
	if o == nil || o.Options == nil {
		var ret []BTMEnumOption592
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterEnum105AllOf) GetOptionsOk() (*[]BTMEnumOption592, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *BTMConfigurationParameterEnum105AllOf) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []BTMEnumOption592 and assigns it to the Options field.
func (o *BTMConfigurationParameterEnum105AllOf) SetOptions(v []BTMEnumOption592) {
	o.Options = &v
}

func (o BTMConfigurationParameterEnum105AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.DefaultValue != nil {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	if o.EnumName != nil {
		toSerialize["enumName"] = o.EnumName
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.OptionIds != nil {
		toSerialize["optionIds"] = o.OptionIds
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableBTMConfigurationParameterEnum105AllOf struct {
	value *BTMConfigurationParameterEnum105AllOf
	isSet bool
}

func (v NullableBTMConfigurationParameterEnum105AllOf) Get() *BTMConfigurationParameterEnum105AllOf {
	return v.value
}

func (v *NullableBTMConfigurationParameterEnum105AllOf) Set(val *BTMConfigurationParameterEnum105AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMConfigurationParameterEnum105AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMConfigurationParameterEnum105AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMConfigurationParameterEnum105AllOf(val *BTMConfigurationParameterEnum105AllOf) *NullableBTMConfigurationParameterEnum105AllOf {
	return &NullableBTMConfigurationParameterEnum105AllOf{value: val, isSet: true}
}

func (v NullableBTMConfigurationParameterEnum105AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMConfigurationParameterEnum105AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
