/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMParameterReferenceImage2014 struct for BTMParameterReferenceImage2014
type BTMParameterReferenceImage2014 struct {
	BTMParameterReferenceBlob3281
	BtType *string `json:"btType,omitempty"`
}

// NewBTMParameterReferenceImage2014 instantiates a new BTMParameterReferenceImage2014 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMParameterReferenceImage2014() *BTMParameterReferenceImage2014 {
	this := BTMParameterReferenceImage2014{}
	return &this
}

// NewBTMParameterReferenceImage2014WithDefaults instantiates a new BTMParameterReferenceImage2014 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMParameterReferenceImage2014WithDefaults() *BTMParameterReferenceImage2014 {
	this := BTMParameterReferenceImage2014{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMParameterReferenceImage2014) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterReferenceImage2014) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMParameterReferenceImage2014) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMParameterReferenceImage2014) SetBtType(v string) {
	o.BtType = &v
}

func (o BTMParameterReferenceImage2014) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMParameterReferenceBlob3281, errBTMParameterReferenceBlob3281 := json.Marshal(o.BTMParameterReferenceBlob3281)
	if errBTMParameterReferenceBlob3281 != nil {
		return []byte{}, errBTMParameterReferenceBlob3281
	}
	errBTMParameterReferenceBlob3281 = json.Unmarshal([]byte(serializedBTMParameterReferenceBlob3281), &toSerialize)
	if errBTMParameterReferenceBlob3281 != nil {
		return []byte{}, errBTMParameterReferenceBlob3281
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	return json.Marshal(toSerialize)
}

type NullableBTMParameterReferenceImage2014 struct {
	value *BTMParameterReferenceImage2014
	isSet bool
}

func (v NullableBTMParameterReferenceImage2014) Get() *BTMParameterReferenceImage2014 {
	return v.value
}

func (v *NullableBTMParameterReferenceImage2014) Set(val *BTMParameterReferenceImage2014) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMParameterReferenceImage2014) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMParameterReferenceImage2014) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMParameterReferenceImage2014(val *BTMParameterReferenceImage2014) *NullableBTMParameterReferenceImage2014 {
	return &NullableBTMParameterReferenceImage2014{value: val, isSet: true}
}

func (v NullableBTMParameterReferenceImage2014) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMParameterReferenceImage2014) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
