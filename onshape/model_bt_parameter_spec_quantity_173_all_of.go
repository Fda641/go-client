/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTParameterSpecQuantity173AllOf struct for BTParameterSpecQuantity173AllOf
type BTParameterSpecQuantity173AllOf struct {
	BtType *string `json:"btType,omitempty"`
	QuantityType *string `json:"quantityType,omitempty"`
	Ranges *[]BTQuantityRange181 `json:"ranges,omitempty"`
}

// NewBTParameterSpecQuantity173AllOf instantiates a new BTParameterSpecQuantity173AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTParameterSpecQuantity173AllOf() *BTParameterSpecQuantity173AllOf {
	this := BTParameterSpecQuantity173AllOf{}
	return &this
}

// NewBTParameterSpecQuantity173AllOfWithDefaults instantiates a new BTParameterSpecQuantity173AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTParameterSpecQuantity173AllOfWithDefaults() *BTParameterSpecQuantity173AllOf {
	this := BTParameterSpecQuantity173AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTParameterSpecQuantity173AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecQuantity173AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTParameterSpecQuantity173AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTParameterSpecQuantity173AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetQuantityType returns the QuantityType field value if set, zero value otherwise.
func (o *BTParameterSpecQuantity173AllOf) GetQuantityType() string {
	if o == nil || o.QuantityType == nil {
		var ret string
		return ret
	}
	return *o.QuantityType
}

// GetQuantityTypeOk returns a tuple with the QuantityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecQuantity173AllOf) GetQuantityTypeOk() (*string, bool) {
	if o == nil || o.QuantityType == nil {
		return nil, false
	}
	return o.QuantityType, true
}

// HasQuantityType returns a boolean if a field has been set.
func (o *BTParameterSpecQuantity173AllOf) HasQuantityType() bool {
	if o != nil && o.QuantityType != nil {
		return true
	}

	return false
}

// SetQuantityType gets a reference to the given string and assigns it to the QuantityType field.
func (o *BTParameterSpecQuantity173AllOf) SetQuantityType(v string) {
	o.QuantityType = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *BTParameterSpecQuantity173AllOf) GetRanges() []BTQuantityRange181 {
	if o == nil || o.Ranges == nil {
		var ret []BTQuantityRange181
		return ret
	}
	return *o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecQuantity173AllOf) GetRangesOk() (*[]BTQuantityRange181, bool) {
	if o == nil || o.Ranges == nil {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *BTParameterSpecQuantity173AllOf) HasRanges() bool {
	if o != nil && o.Ranges != nil {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []BTQuantityRange181 and assigns it to the Ranges field.
func (o *BTParameterSpecQuantity173AllOf) SetRanges(v []BTQuantityRange181) {
	o.Ranges = &v
}

func (o BTParameterSpecQuantity173AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.QuantityType != nil {
		toSerialize["quantityType"] = o.QuantityType
	}
	if o.Ranges != nil {
		toSerialize["ranges"] = o.Ranges
	}
	return json.Marshal(toSerialize)
}

type NullableBTParameterSpecQuantity173AllOf struct {
	value *BTParameterSpecQuantity173AllOf
	isSet bool
}

func (v NullableBTParameterSpecQuantity173AllOf) Get() *BTParameterSpecQuantity173AllOf {
	return v.value
}

func (v *NullableBTParameterSpecQuantity173AllOf) Set(val *BTParameterSpecQuantity173AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTParameterSpecQuantity173AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTParameterSpecQuantity173AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTParameterSpecQuantity173AllOf(val *BTParameterSpecQuantity173AllOf) *NullableBTParameterSpecQuantity173AllOf {
	return &NullableBTParameterSpecQuantity173AllOf{value: val, isSet: true}
}

func (v NullableBTParameterSpecQuantity173AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTParameterSpecQuantity173AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
