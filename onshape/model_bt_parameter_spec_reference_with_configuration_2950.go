/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTParameterSpecReferenceWithConfiguration2950 struct for BTParameterSpecReferenceWithConfiguration2950
type BTParameterSpecReferenceWithConfiguration2950 struct {
	BTParameterSpecReference2789
	AllowAssemblies *bool `json:"allowAssemblies,omitempty"`
	AllowedInsertableTypes *[]string `json:"allowedInsertableTypes,omitempty"`
	BtType *string `json:"btType,omitempty"`
	MaxNumberOfPicks *int32 `json:"maxNumberOfPicks,omitempty"`
}

// NewBTParameterSpecReferenceWithConfiguration2950 instantiates a new BTParameterSpecReferenceWithConfiguration2950 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTParameterSpecReferenceWithConfiguration2950() *BTParameterSpecReferenceWithConfiguration2950 {
	this := BTParameterSpecReferenceWithConfiguration2950{}
	return &this
}

// NewBTParameterSpecReferenceWithConfiguration2950WithDefaults instantiates a new BTParameterSpecReferenceWithConfiguration2950 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTParameterSpecReferenceWithConfiguration2950WithDefaults() *BTParameterSpecReferenceWithConfiguration2950 {
	this := BTParameterSpecReferenceWithConfiguration2950{}
	return &this
}

// GetAllowAssemblies returns the AllowAssemblies field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetAllowAssemblies() bool {
	if o == nil || o.AllowAssemblies == nil {
		var ret bool
		return ret
	}
	return *o.AllowAssemblies
}

// GetAllowAssembliesOk returns a tuple with the AllowAssemblies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetAllowAssembliesOk() (*bool, bool) {
	if o == nil || o.AllowAssemblies == nil {
		return nil, false
	}
	return o.AllowAssemblies, true
}

// HasAllowAssemblies returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) HasAllowAssemblies() bool {
	if o != nil && o.AllowAssemblies != nil {
		return true
	}

	return false
}

// SetAllowAssemblies gets a reference to the given bool and assigns it to the AllowAssemblies field.
func (o *BTParameterSpecReferenceWithConfiguration2950) SetAllowAssemblies(v bool) {
	o.AllowAssemblies = &v
}

// GetAllowedInsertableTypes returns the AllowedInsertableTypes field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetAllowedInsertableTypes() []string {
	if o == nil || o.AllowedInsertableTypes == nil {
		var ret []string
		return ret
	}
	return *o.AllowedInsertableTypes
}

// GetAllowedInsertableTypesOk returns a tuple with the AllowedInsertableTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetAllowedInsertableTypesOk() (*[]string, bool) {
	if o == nil || o.AllowedInsertableTypes == nil {
		return nil, false
	}
	return o.AllowedInsertableTypes, true
}

// HasAllowedInsertableTypes returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) HasAllowedInsertableTypes() bool {
	if o != nil && o.AllowedInsertableTypes != nil {
		return true
	}

	return false
}

// SetAllowedInsertableTypes gets a reference to the given []string and assigns it to the AllowedInsertableTypes field.
func (o *BTParameterSpecReferenceWithConfiguration2950) SetAllowedInsertableTypes(v []string) {
	o.AllowedInsertableTypes = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTParameterSpecReferenceWithConfiguration2950) SetBtType(v string) {
	o.BtType = &v
}

// GetMaxNumberOfPicks returns the MaxNumberOfPicks field value if set, zero value otherwise.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetMaxNumberOfPicks() int32 {
	if o == nil || o.MaxNumberOfPicks == nil {
		var ret int32
		return ret
	}
	return *o.MaxNumberOfPicks
}

// GetMaxNumberOfPicksOk returns a tuple with the MaxNumberOfPicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) GetMaxNumberOfPicksOk() (*int32, bool) {
	if o == nil || o.MaxNumberOfPicks == nil {
		return nil, false
	}
	return o.MaxNumberOfPicks, true
}

// HasMaxNumberOfPicks returns a boolean if a field has been set.
func (o *BTParameterSpecReferenceWithConfiguration2950) HasMaxNumberOfPicks() bool {
	if o != nil && o.MaxNumberOfPicks != nil {
		return true
	}

	return false
}

// SetMaxNumberOfPicks gets a reference to the given int32 and assigns it to the MaxNumberOfPicks field.
func (o *BTParameterSpecReferenceWithConfiguration2950) SetMaxNumberOfPicks(v int32) {
	o.MaxNumberOfPicks = &v
}

func (o BTParameterSpecReferenceWithConfiguration2950) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTParameterSpecReference2789, errBTParameterSpecReference2789 := json.Marshal(o.BTParameterSpecReference2789)
	if errBTParameterSpecReference2789 != nil {
		return []byte{}, errBTParameterSpecReference2789
	}
	errBTParameterSpecReference2789 = json.Unmarshal([]byte(serializedBTParameterSpecReference2789), &toSerialize)
	if errBTParameterSpecReference2789 != nil {
		return []byte{}, errBTParameterSpecReference2789
	}
	if o.AllowAssemblies != nil {
		toSerialize["allowAssemblies"] = o.AllowAssemblies
	}
	if o.AllowedInsertableTypes != nil {
		toSerialize["allowedInsertableTypes"] = o.AllowedInsertableTypes
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.MaxNumberOfPicks != nil {
		toSerialize["maxNumberOfPicks"] = o.MaxNumberOfPicks
	}
	return json.Marshal(toSerialize)
}

type NullableBTParameterSpecReferenceWithConfiguration2950 struct {
	value *BTParameterSpecReferenceWithConfiguration2950
	isSet bool
}

func (v NullableBTParameterSpecReferenceWithConfiguration2950) Get() *BTParameterSpecReferenceWithConfiguration2950 {
	return v.value
}

func (v *NullableBTParameterSpecReferenceWithConfiguration2950) Set(val *BTParameterSpecReferenceWithConfiguration2950) {
	v.value = val
	v.isSet = true
}

func (v NullableBTParameterSpecReferenceWithConfiguration2950) IsSet() bool {
	return v.isSet
}

func (v *NullableBTParameterSpecReferenceWithConfiguration2950) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTParameterSpecReferenceWithConfiguration2950(val *BTParameterSpecReferenceWithConfiguration2950) *NullableBTParameterSpecReferenceWithConfiguration2950 {
	return &NullableBTParameterSpecReferenceWithConfiguration2950{value: val, isSet: true}
}

func (v NullableBTParameterSpecReferenceWithConfiguration2950) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTParameterSpecReferenceWithConfiguration2950) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
