/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMSketchPoint158 struct for BTMSketchPoint158
type BTMSketchPoint158 struct {
	BTMSketchGeomEntity5
	BtType *string `json:"btType,omitempty"`
	IsUserPoint *bool `json:"isUserPoint,omitempty"`
	X *float64 `json:"x,omitempty"`
	Y *float64 `json:"y,omitempty"`
}

// NewBTMSketchPoint158 instantiates a new BTMSketchPoint158 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMSketchPoint158() *BTMSketchPoint158 {
	this := BTMSketchPoint158{}
	return &this
}

// NewBTMSketchPoint158WithDefaults instantiates a new BTMSketchPoint158 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMSketchPoint158WithDefaults() *BTMSketchPoint158 {
	this := BTMSketchPoint158{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMSketchPoint158) SetBtType(v string) {
	o.BtType = &v
}

// GetIsUserPoint returns the IsUserPoint field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetIsUserPoint() bool {
	if o == nil || o.IsUserPoint == nil {
		var ret bool
		return ret
	}
	return *o.IsUserPoint
}

// GetIsUserPointOk returns a tuple with the IsUserPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetIsUserPointOk() (*bool, bool) {
	if o == nil || o.IsUserPoint == nil {
		return nil, false
	}
	return o.IsUserPoint, true
}

// HasIsUserPoint returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasIsUserPoint() bool {
	if o != nil && o.IsUserPoint != nil {
		return true
	}

	return false
}

// SetIsUserPoint gets a reference to the given bool and assigns it to the IsUserPoint field.
func (o *BTMSketchPoint158) SetIsUserPoint(v bool) {
	o.IsUserPoint = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetX() float64 {
	if o == nil || o.X == nil {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetXOk() (*float64, bool) {
	if o == nil || o.X == nil {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasX() bool {
	if o != nil && o.X != nil {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *BTMSketchPoint158) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *BTMSketchPoint158) GetY() float64 {
	if o == nil || o.Y == nil {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMSketchPoint158) GetYOk() (*float64, bool) {
	if o == nil || o.Y == nil {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *BTMSketchPoint158) HasY() bool {
	if o != nil && o.Y != nil {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *BTMSketchPoint158) SetY(v float64) {
	o.Y = &v
}

func (o BTMSketchPoint158) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMSketchGeomEntity5, errBTMSketchGeomEntity5 := json.Marshal(o.BTMSketchGeomEntity5)
	if errBTMSketchGeomEntity5 != nil {
		return []byte{}, errBTMSketchGeomEntity5
	}
	errBTMSketchGeomEntity5 = json.Unmarshal([]byte(serializedBTMSketchGeomEntity5), &toSerialize)
	if errBTMSketchGeomEntity5 != nil {
		return []byte{}, errBTMSketchGeomEntity5
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.IsUserPoint != nil {
		toSerialize["isUserPoint"] = o.IsUserPoint
	}
	if o.X != nil {
		toSerialize["x"] = o.X
	}
	if o.Y != nil {
		toSerialize["y"] = o.Y
	}
	return json.Marshal(toSerialize)
}

type NullableBTMSketchPoint158 struct {
	value *BTMSketchPoint158
	isSet bool
}

func (v NullableBTMSketchPoint158) Get() *BTMSketchPoint158 {
	return v.value
}

func (v *NullableBTMSketchPoint158) Set(val *BTMSketchPoint158) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMSketchPoint158) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMSketchPoint158) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMSketchPoint158(val *BTMSketchPoint158) *NullableBTMSketchPoint158 {
	return &NullableBTMSketchPoint158{value: val, isSet: true}
}

func (v NullableBTMSketchPoint158) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMSketchPoint158) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
