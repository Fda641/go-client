/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTObjectId struct for BTObjectId
type BTObjectId struct {
	Empty *bool `json:"empty,omitempty"`
}

// NewBTObjectId instantiates a new BTObjectId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTObjectId() *BTObjectId {
	this := BTObjectId{}
	return &this
}

// NewBTObjectIdWithDefaults instantiates a new BTObjectId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTObjectIdWithDefaults() *BTObjectId {
	this := BTObjectId{}
	return &this
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *BTObjectId) GetEmpty() bool {
	if o == nil || o.Empty == nil {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTObjectId) GetEmptyOk() (*bool, bool) {
	if o == nil || o.Empty == nil {
		return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *BTObjectId) HasEmpty() bool {
	if o != nil && o.Empty != nil {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *BTObjectId) SetEmpty(v bool) {
	o.Empty = &v
}

func (o BTObjectId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Empty != nil {
		toSerialize["empty"] = o.Empty
	}
	return json.Marshal(toSerialize)
}

type NullableBTObjectId struct {
	value *BTObjectId
	isSet bool
}

func (v NullableBTObjectId) Get() *BTObjectId {
	return v.value
}

func (v *NullableBTObjectId) Set(val *BTObjectId) {
	v.value = val
	v.isSet = true
}

func (v NullableBTObjectId) IsSet() bool {
	return v.isSet
}

func (v *NullableBTObjectId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTObjectId(val *BTObjectId) *NullableBTObjectId {
	return &NullableBTObjectId{value: val, isSet: true}
}

func (v NullableBTObjectId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTObjectId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
