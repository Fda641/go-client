/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTBillOfMaterialsTable1073 struct for BTBillOfMaterialsTable1073
type BTBillOfMaterialsTable1073 struct {
	BTTable1825
	BtType *string `json:"btType,omitempty"`
	FailedMetadataRepresentativeOccurrences *[]string `json:"failedMetadataRepresentativeOccurrences,omitempty"`
	Indented *bool `json:"indented,omitempty"`
	ShowingExcluded *bool `json:"showingExcluded,omitempty"`
}

// NewBTBillOfMaterialsTable1073 instantiates a new BTBillOfMaterialsTable1073 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTBillOfMaterialsTable1073() *BTBillOfMaterialsTable1073 {
	this := BTBillOfMaterialsTable1073{}
	return &this
}

// NewBTBillOfMaterialsTable1073WithDefaults instantiates a new BTBillOfMaterialsTable1073 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTBillOfMaterialsTable1073WithDefaults() *BTBillOfMaterialsTable1073 {
	this := BTBillOfMaterialsTable1073{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTBillOfMaterialsTable1073) SetBtType(v string) {
	o.BtType = &v
}

// GetFailedMetadataRepresentativeOccurrences returns the FailedMetadataRepresentativeOccurrences field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073) GetFailedMetadataRepresentativeOccurrences() []string {
	if o == nil || o.FailedMetadataRepresentativeOccurrences == nil {
		var ret []string
		return ret
	}
	return *o.FailedMetadataRepresentativeOccurrences
}

// GetFailedMetadataRepresentativeOccurrencesOk returns a tuple with the FailedMetadataRepresentativeOccurrences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073) GetFailedMetadataRepresentativeOccurrencesOk() (*[]string, bool) {
	if o == nil || o.FailedMetadataRepresentativeOccurrences == nil {
		return nil, false
	}
	return o.FailedMetadataRepresentativeOccurrences, true
}

// HasFailedMetadataRepresentativeOccurrences returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073) HasFailedMetadataRepresentativeOccurrences() bool {
	if o != nil && o.FailedMetadataRepresentativeOccurrences != nil {
		return true
	}

	return false
}

// SetFailedMetadataRepresentativeOccurrences gets a reference to the given []string and assigns it to the FailedMetadataRepresentativeOccurrences field.
func (o *BTBillOfMaterialsTable1073) SetFailedMetadataRepresentativeOccurrences(v []string) {
	o.FailedMetadataRepresentativeOccurrences = &v
}

// GetIndented returns the Indented field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073) GetIndented() bool {
	if o == nil || o.Indented == nil {
		var ret bool
		return ret
	}
	return *o.Indented
}

// GetIndentedOk returns a tuple with the Indented field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073) GetIndentedOk() (*bool, bool) {
	if o == nil || o.Indented == nil {
		return nil, false
	}
	return o.Indented, true
}

// HasIndented returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073) HasIndented() bool {
	if o != nil && o.Indented != nil {
		return true
	}

	return false
}

// SetIndented gets a reference to the given bool and assigns it to the Indented field.
func (o *BTBillOfMaterialsTable1073) SetIndented(v bool) {
	o.Indented = &v
}

// GetShowingExcluded returns the ShowingExcluded field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073) GetShowingExcluded() bool {
	if o == nil || o.ShowingExcluded == nil {
		var ret bool
		return ret
	}
	return *o.ShowingExcluded
}

// GetShowingExcludedOk returns a tuple with the ShowingExcluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073) GetShowingExcludedOk() (*bool, bool) {
	if o == nil || o.ShowingExcluded == nil {
		return nil, false
	}
	return o.ShowingExcluded, true
}

// HasShowingExcluded returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073) HasShowingExcluded() bool {
	if o != nil && o.ShowingExcluded != nil {
		return true
	}

	return false
}

// SetShowingExcluded gets a reference to the given bool and assigns it to the ShowingExcluded field.
func (o *BTBillOfMaterialsTable1073) SetShowingExcluded(v bool) {
	o.ShowingExcluded = &v
}

func (o BTBillOfMaterialsTable1073) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTTable1825, errBTTable1825 := json.Marshal(o.BTTable1825)
	if errBTTable1825 != nil {
		return []byte{}, errBTTable1825
	}
	errBTTable1825 = json.Unmarshal([]byte(serializedBTTable1825), &toSerialize)
	if errBTTable1825 != nil {
		return []byte{}, errBTTable1825
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.FailedMetadataRepresentativeOccurrences != nil {
		toSerialize["failedMetadataRepresentativeOccurrences"] = o.FailedMetadataRepresentativeOccurrences
	}
	if o.Indented != nil {
		toSerialize["indented"] = o.Indented
	}
	if o.ShowingExcluded != nil {
		toSerialize["showingExcluded"] = o.ShowingExcluded
	}
	return json.Marshal(toSerialize)
}

type NullableBTBillOfMaterialsTable1073 struct {
	value *BTBillOfMaterialsTable1073
	isSet bool
}

func (v NullableBTBillOfMaterialsTable1073) Get() *BTBillOfMaterialsTable1073 {
	return v.value
}

func (v *NullableBTBillOfMaterialsTable1073) Set(val *BTBillOfMaterialsTable1073) {
	v.value = val
	v.isSet = true
}

func (v NullableBTBillOfMaterialsTable1073) IsSet() bool {
	return v.isSet
}

func (v *NullableBTBillOfMaterialsTable1073) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTBillOfMaterialsTable1073(val *BTBillOfMaterialsTable1073) *NullableBTBillOfMaterialsTable1073 {
	return &NullableBTBillOfMaterialsTable1073{value: val, isSet: true}
}

func (v NullableBTBillOfMaterialsTable1073) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTBillOfMaterialsTable1073) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
