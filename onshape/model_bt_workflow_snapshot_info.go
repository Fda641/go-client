/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTWorkflowSnapshotInfo struct for BTWorkflowSnapshotInfo
type BTWorkflowSnapshotInfo struct {
	Actions *[]BTWorkflowActionInfo `json:"actions,omitempty"`
	ApproverIds *[]string `json:"approverIds,omitempty"`
	IsDiscarded *bool `json:"isDiscarded,omitempty"`
	IsFrozen *bool `json:"isFrozen,omitempty"`
	IsSetup *bool `json:"isSetup,omitempty"`
	MetadataState *string `json:"metadataState,omitempty"`
	NotifierIds *[]string `json:"notifierIds,omitempty"`
	State *BTWorkflowStateInfo `json:"state,omitempty"`
}

// NewBTWorkflowSnapshotInfo instantiates a new BTWorkflowSnapshotInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTWorkflowSnapshotInfo() *BTWorkflowSnapshotInfo {
	this := BTWorkflowSnapshotInfo{}
	return &this
}

// NewBTWorkflowSnapshotInfoWithDefaults instantiates a new BTWorkflowSnapshotInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTWorkflowSnapshotInfoWithDefaults() *BTWorkflowSnapshotInfo {
	this := BTWorkflowSnapshotInfo{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetActions() []BTWorkflowActionInfo {
	if o == nil || o.Actions == nil {
		var ret []BTWorkflowActionInfo
		return ret
	}
	return *o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetActionsOk() (*[]BTWorkflowActionInfo, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []BTWorkflowActionInfo and assigns it to the Actions field.
func (o *BTWorkflowSnapshotInfo) SetActions(v []BTWorkflowActionInfo) {
	o.Actions = &v
}

// GetApproverIds returns the ApproverIds field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetApproverIds() []string {
	if o == nil || o.ApproverIds == nil {
		var ret []string
		return ret
	}
	return *o.ApproverIds
}

// GetApproverIdsOk returns a tuple with the ApproverIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetApproverIdsOk() (*[]string, bool) {
	if o == nil || o.ApproverIds == nil {
		return nil, false
	}
	return o.ApproverIds, true
}

// HasApproverIds returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasApproverIds() bool {
	if o != nil && o.ApproverIds != nil {
		return true
	}

	return false
}

// SetApproverIds gets a reference to the given []string and assigns it to the ApproverIds field.
func (o *BTWorkflowSnapshotInfo) SetApproverIds(v []string) {
	o.ApproverIds = &v
}

// GetIsDiscarded returns the IsDiscarded field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetIsDiscarded() bool {
	if o == nil || o.IsDiscarded == nil {
		var ret bool
		return ret
	}
	return *o.IsDiscarded
}

// GetIsDiscardedOk returns a tuple with the IsDiscarded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetIsDiscardedOk() (*bool, bool) {
	if o == nil || o.IsDiscarded == nil {
		return nil, false
	}
	return o.IsDiscarded, true
}

// HasIsDiscarded returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasIsDiscarded() bool {
	if o != nil && o.IsDiscarded != nil {
		return true
	}

	return false
}

// SetIsDiscarded gets a reference to the given bool and assigns it to the IsDiscarded field.
func (o *BTWorkflowSnapshotInfo) SetIsDiscarded(v bool) {
	o.IsDiscarded = &v
}

// GetIsFrozen returns the IsFrozen field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetIsFrozen() bool {
	if o == nil || o.IsFrozen == nil {
		var ret bool
		return ret
	}
	return *o.IsFrozen
}

// GetIsFrozenOk returns a tuple with the IsFrozen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetIsFrozenOk() (*bool, bool) {
	if o == nil || o.IsFrozen == nil {
		return nil, false
	}
	return o.IsFrozen, true
}

// HasIsFrozen returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasIsFrozen() bool {
	if o != nil && o.IsFrozen != nil {
		return true
	}

	return false
}

// SetIsFrozen gets a reference to the given bool and assigns it to the IsFrozen field.
func (o *BTWorkflowSnapshotInfo) SetIsFrozen(v bool) {
	o.IsFrozen = &v
}

// GetIsSetup returns the IsSetup field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetIsSetup() bool {
	if o == nil || o.IsSetup == nil {
		var ret bool
		return ret
	}
	return *o.IsSetup
}

// GetIsSetupOk returns a tuple with the IsSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetIsSetupOk() (*bool, bool) {
	if o == nil || o.IsSetup == nil {
		return nil, false
	}
	return o.IsSetup, true
}

// HasIsSetup returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasIsSetup() bool {
	if o != nil && o.IsSetup != nil {
		return true
	}

	return false
}

// SetIsSetup gets a reference to the given bool and assigns it to the IsSetup field.
func (o *BTWorkflowSnapshotInfo) SetIsSetup(v bool) {
	o.IsSetup = &v
}

// GetMetadataState returns the MetadataState field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetMetadataState() string {
	if o == nil || o.MetadataState == nil {
		var ret string
		return ret
	}
	return *o.MetadataState
}

// GetMetadataStateOk returns a tuple with the MetadataState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetMetadataStateOk() (*string, bool) {
	if o == nil || o.MetadataState == nil {
		return nil, false
	}
	return o.MetadataState, true
}

// HasMetadataState returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasMetadataState() bool {
	if o != nil && o.MetadataState != nil {
		return true
	}

	return false
}

// SetMetadataState gets a reference to the given string and assigns it to the MetadataState field.
func (o *BTWorkflowSnapshotInfo) SetMetadataState(v string) {
	o.MetadataState = &v
}

// GetNotifierIds returns the NotifierIds field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetNotifierIds() []string {
	if o == nil || o.NotifierIds == nil {
		var ret []string
		return ret
	}
	return *o.NotifierIds
}

// GetNotifierIdsOk returns a tuple with the NotifierIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetNotifierIdsOk() (*[]string, bool) {
	if o == nil || o.NotifierIds == nil {
		return nil, false
	}
	return o.NotifierIds, true
}

// HasNotifierIds returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasNotifierIds() bool {
	if o != nil && o.NotifierIds != nil {
		return true
	}

	return false
}

// SetNotifierIds gets a reference to the given []string and assigns it to the NotifierIds field.
func (o *BTWorkflowSnapshotInfo) SetNotifierIds(v []string) {
	o.NotifierIds = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *BTWorkflowSnapshotInfo) GetState() BTWorkflowStateInfo {
	if o == nil || o.State == nil {
		var ret BTWorkflowStateInfo
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTWorkflowSnapshotInfo) GetStateOk() (*BTWorkflowStateInfo, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *BTWorkflowSnapshotInfo) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given BTWorkflowStateInfo and assigns it to the State field.
func (o *BTWorkflowSnapshotInfo) SetState(v BTWorkflowStateInfo) {
	o.State = &v
}

func (o BTWorkflowSnapshotInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.ApproverIds != nil {
		toSerialize["approverIds"] = o.ApproverIds
	}
	if o.IsDiscarded != nil {
		toSerialize["isDiscarded"] = o.IsDiscarded
	}
	if o.IsFrozen != nil {
		toSerialize["isFrozen"] = o.IsFrozen
	}
	if o.IsSetup != nil {
		toSerialize["isSetup"] = o.IsSetup
	}
	if o.MetadataState != nil {
		toSerialize["metadataState"] = o.MetadataState
	}
	if o.NotifierIds != nil {
		toSerialize["notifierIds"] = o.NotifierIds
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableBTWorkflowSnapshotInfo struct {
	value *BTWorkflowSnapshotInfo
	isSet bool
}

func (v NullableBTWorkflowSnapshotInfo) Get() *BTWorkflowSnapshotInfo {
	return v.value
}

func (v *NullableBTWorkflowSnapshotInfo) Set(val *BTWorkflowSnapshotInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTWorkflowSnapshotInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTWorkflowSnapshotInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTWorkflowSnapshotInfo(val *BTWorkflowSnapshotInfo) *NullableBTWorkflowSnapshotInfo {
	return &NullableBTWorkflowSnapshotInfo{value: val, isSet: true}
}

func (v NullableBTWorkflowSnapshotInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTWorkflowSnapshotInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
