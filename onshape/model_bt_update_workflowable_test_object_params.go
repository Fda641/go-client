/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTUpdateWorkflowableTestObjectParams struct for BTUpdateWorkflowableTestObjectParams
type BTUpdateWorkflowableTestObjectParams struct {
	Properties *[]BTPropertyValueParam `json:"properties,omitempty"`
}

// NewBTUpdateWorkflowableTestObjectParams instantiates a new BTUpdateWorkflowableTestObjectParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTUpdateWorkflowableTestObjectParams() *BTUpdateWorkflowableTestObjectParams {
	this := BTUpdateWorkflowableTestObjectParams{}
	return &this
}

// NewBTUpdateWorkflowableTestObjectParamsWithDefaults instantiates a new BTUpdateWorkflowableTestObjectParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTUpdateWorkflowableTestObjectParamsWithDefaults() *BTUpdateWorkflowableTestObjectParams {
	this := BTUpdateWorkflowableTestObjectParams{}
	return &this
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *BTUpdateWorkflowableTestObjectParams) GetProperties() []BTPropertyValueParam {
	if o == nil || o.Properties == nil {
		var ret []BTPropertyValueParam
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUpdateWorkflowableTestObjectParams) GetPropertiesOk() (*[]BTPropertyValueParam, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *BTUpdateWorkflowableTestObjectParams) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []BTPropertyValueParam and assigns it to the Properties field.
func (o *BTUpdateWorkflowableTestObjectParams) SetProperties(v []BTPropertyValueParam) {
	o.Properties = &v
}

func (o BTUpdateWorkflowableTestObjectParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableBTUpdateWorkflowableTestObjectParams struct {
	value *BTUpdateWorkflowableTestObjectParams
	isSet bool
}

func (v NullableBTUpdateWorkflowableTestObjectParams) Get() *BTUpdateWorkflowableTestObjectParams {
	return v.value
}

func (v *NullableBTUpdateWorkflowableTestObjectParams) Set(val *BTUpdateWorkflowableTestObjectParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTUpdateWorkflowableTestObjectParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTUpdateWorkflowableTestObjectParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTUpdateWorkflowableTestObjectParams(val *BTUpdateWorkflowableTestObjectParams) *NullableBTUpdateWorkflowableTestObjectParams {
	return &NullableBTUpdateWorkflowableTestObjectParams{value: val, isSet: true}
}

func (v NullableBTUpdateWorkflowableTestObjectParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTUpdateWorkflowableTestObjectParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
