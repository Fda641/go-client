/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTBillOfMaterialsTable1073AllOf struct for BTBillOfMaterialsTable1073AllOf
type BTBillOfMaterialsTable1073AllOf struct {
	BtType *string `json:"btType,omitempty"`
	FailedMetadataRepresentativeOccurrences *[]string `json:"failedMetadataRepresentativeOccurrences,omitempty"`
	Indented *bool `json:"indented,omitempty"`
	ShowingExcluded *bool `json:"showingExcluded,omitempty"`
}

// NewBTBillOfMaterialsTable1073AllOf instantiates a new BTBillOfMaterialsTable1073AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTBillOfMaterialsTable1073AllOf() *BTBillOfMaterialsTable1073AllOf {
	this := BTBillOfMaterialsTable1073AllOf{}
	return &this
}

// NewBTBillOfMaterialsTable1073AllOfWithDefaults instantiates a new BTBillOfMaterialsTable1073AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTBillOfMaterialsTable1073AllOfWithDefaults() *BTBillOfMaterialsTable1073AllOf {
	this := BTBillOfMaterialsTable1073AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTBillOfMaterialsTable1073AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetFailedMetadataRepresentativeOccurrences returns the FailedMetadataRepresentativeOccurrences field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073AllOf) GetFailedMetadataRepresentativeOccurrences() []string {
	if o == nil || o.FailedMetadataRepresentativeOccurrences == nil {
		var ret []string
		return ret
	}
	return *o.FailedMetadataRepresentativeOccurrences
}

// GetFailedMetadataRepresentativeOccurrencesOk returns a tuple with the FailedMetadataRepresentativeOccurrences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073AllOf) GetFailedMetadataRepresentativeOccurrencesOk() (*[]string, bool) {
	if o == nil || o.FailedMetadataRepresentativeOccurrences == nil {
		return nil, false
	}
	return o.FailedMetadataRepresentativeOccurrences, true
}

// HasFailedMetadataRepresentativeOccurrences returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073AllOf) HasFailedMetadataRepresentativeOccurrences() bool {
	if o != nil && o.FailedMetadataRepresentativeOccurrences != nil {
		return true
	}

	return false
}

// SetFailedMetadataRepresentativeOccurrences gets a reference to the given []string and assigns it to the FailedMetadataRepresentativeOccurrences field.
func (o *BTBillOfMaterialsTable1073AllOf) SetFailedMetadataRepresentativeOccurrences(v []string) {
	o.FailedMetadataRepresentativeOccurrences = &v
}

// GetIndented returns the Indented field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073AllOf) GetIndented() bool {
	if o == nil || o.Indented == nil {
		var ret bool
		return ret
	}
	return *o.Indented
}

// GetIndentedOk returns a tuple with the Indented field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073AllOf) GetIndentedOk() (*bool, bool) {
	if o == nil || o.Indented == nil {
		return nil, false
	}
	return o.Indented, true
}

// HasIndented returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073AllOf) HasIndented() bool {
	if o != nil && o.Indented != nil {
		return true
	}

	return false
}

// SetIndented gets a reference to the given bool and assigns it to the Indented field.
func (o *BTBillOfMaterialsTable1073AllOf) SetIndented(v bool) {
	o.Indented = &v
}

// GetShowingExcluded returns the ShowingExcluded field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTable1073AllOf) GetShowingExcluded() bool {
	if o == nil || o.ShowingExcluded == nil {
		var ret bool
		return ret
	}
	return *o.ShowingExcluded
}

// GetShowingExcludedOk returns a tuple with the ShowingExcluded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTable1073AllOf) GetShowingExcludedOk() (*bool, bool) {
	if o == nil || o.ShowingExcluded == nil {
		return nil, false
	}
	return o.ShowingExcluded, true
}

// HasShowingExcluded returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTable1073AllOf) HasShowingExcluded() bool {
	if o != nil && o.ShowingExcluded != nil {
		return true
	}

	return false
}

// SetShowingExcluded gets a reference to the given bool and assigns it to the ShowingExcluded field.
func (o *BTBillOfMaterialsTable1073AllOf) SetShowingExcluded(v bool) {
	o.ShowingExcluded = &v
}

func (o BTBillOfMaterialsTable1073AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.FailedMetadataRepresentativeOccurrences != nil {
		toSerialize["failedMetadataRepresentativeOccurrences"] = o.FailedMetadataRepresentativeOccurrences
	}
	if o.Indented != nil {
		toSerialize["indented"] = o.Indented
	}
	if o.ShowingExcluded != nil {
		toSerialize["showingExcluded"] = o.ShowingExcluded
	}
	return json.Marshal(toSerialize)
}

type NullableBTBillOfMaterialsTable1073AllOf struct {
	value *BTBillOfMaterialsTable1073AllOf
	isSet bool
}

func (v NullableBTBillOfMaterialsTable1073AllOf) Get() *BTBillOfMaterialsTable1073AllOf {
	return v.value
}

func (v *NullableBTBillOfMaterialsTable1073AllOf) Set(val *BTBillOfMaterialsTable1073AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTBillOfMaterialsTable1073AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTBillOfMaterialsTable1073AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTBillOfMaterialsTable1073AllOf(val *BTBillOfMaterialsTable1073AllOf) *NullableBTBillOfMaterialsTable1073AllOf {
	return &NullableBTBillOfMaterialsTable1073AllOf{value: val, isSet: true}
}

func (v NullableBTBillOfMaterialsTable1073AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTBillOfMaterialsTable1073AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
