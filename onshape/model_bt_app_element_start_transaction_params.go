/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTAppElementStartTransactionParams struct for BTAppElementStartTransactionParams
type BTAppElementStartTransactionParams struct {
	ParentChangeId *string `json:"parentChangeId,omitempty"`
	ReturnError *bool `json:"returnError,omitempty"`
}

// NewBTAppElementStartTransactionParams instantiates a new BTAppElementStartTransactionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAppElementStartTransactionParams() *BTAppElementStartTransactionParams {
	this := BTAppElementStartTransactionParams{}
	return &this
}

// NewBTAppElementStartTransactionParamsWithDefaults instantiates a new BTAppElementStartTransactionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAppElementStartTransactionParamsWithDefaults() *BTAppElementStartTransactionParams {
	this := BTAppElementStartTransactionParams{}
	return &this
}

// GetParentChangeId returns the ParentChangeId field value if set, zero value otherwise.
func (o *BTAppElementStartTransactionParams) GetParentChangeId() string {
	if o == nil || o.ParentChangeId == nil {
		var ret string
		return ret
	}
	return *o.ParentChangeId
}

// GetParentChangeIdOk returns a tuple with the ParentChangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementStartTransactionParams) GetParentChangeIdOk() (*string, bool) {
	if o == nil || o.ParentChangeId == nil {
		return nil, false
	}
	return o.ParentChangeId, true
}

// HasParentChangeId returns a boolean if a field has been set.
func (o *BTAppElementStartTransactionParams) HasParentChangeId() bool {
	if o != nil && o.ParentChangeId != nil {
		return true
	}

	return false
}

// SetParentChangeId gets a reference to the given string and assigns it to the ParentChangeId field.
func (o *BTAppElementStartTransactionParams) SetParentChangeId(v string) {
	o.ParentChangeId = &v
}

// GetReturnError returns the ReturnError field value if set, zero value otherwise.
func (o *BTAppElementStartTransactionParams) GetReturnError() bool {
	if o == nil || o.ReturnError == nil {
		var ret bool
		return ret
	}
	return *o.ReturnError
}

// GetReturnErrorOk returns a tuple with the ReturnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAppElementStartTransactionParams) GetReturnErrorOk() (*bool, bool) {
	if o == nil || o.ReturnError == nil {
		return nil, false
	}
	return o.ReturnError, true
}

// HasReturnError returns a boolean if a field has been set.
func (o *BTAppElementStartTransactionParams) HasReturnError() bool {
	if o != nil && o.ReturnError != nil {
		return true
	}

	return false
}

// SetReturnError gets a reference to the given bool and assigns it to the ReturnError field.
func (o *BTAppElementStartTransactionParams) SetReturnError(v bool) {
	o.ReturnError = &v
}

func (o BTAppElementStartTransactionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ParentChangeId != nil {
		toSerialize["parentChangeId"] = o.ParentChangeId
	}
	if o.ReturnError != nil {
		toSerialize["returnError"] = o.ReturnError
	}
	return json.Marshal(toSerialize)
}

type NullableBTAppElementStartTransactionParams struct {
	value *BTAppElementStartTransactionParams
	isSet bool
}

func (v NullableBTAppElementStartTransactionParams) Get() *BTAppElementStartTransactionParams {
	return v.value
}

func (v *NullableBTAppElementStartTransactionParams) Set(val *BTAppElementStartTransactionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAppElementStartTransactionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAppElementStartTransactionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAppElementStartTransactionParams(val *BTAppElementStartTransactionParams) *NullableBTAppElementStartTransactionParams {
	return &NullableBTAppElementStartTransactionParams{value: val, isSet: true}
}

func (v NullableBTAppElementStartTransactionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAppElementStartTransactionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
