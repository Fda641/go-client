/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTPStatementIf276AllOf struct for BTPStatementIf276AllOf
type BTPStatementIf276AllOf struct {
	BtType *string `json:"btType,omitempty"`
	Condition *BTPExpression9 `json:"condition,omitempty"`
	ElseBody *BTPStatement269 `json:"elseBody,omitempty"`
	SpaceAfterIf *BTPSpace10 `json:"spaceAfterIf,omitempty"`
	ThenBody *BTPStatement269 `json:"thenBody,omitempty"`
}

// NewBTPStatementIf276AllOf instantiates a new BTPStatementIf276AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPStatementIf276AllOf() *BTPStatementIf276AllOf {
	this := BTPStatementIf276AllOf{}
	return &this
}

// NewBTPStatementIf276AllOfWithDefaults instantiates a new BTPStatementIf276AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPStatementIf276AllOfWithDefaults() *BTPStatementIf276AllOf {
	this := BTPStatementIf276AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPStatementIf276AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementIf276AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPStatementIf276AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPStatementIf276AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetCondition returns the Condition field value if set, zero value otherwise.
func (o *BTPStatementIf276AllOf) GetCondition() BTPExpression9 {
	if o == nil || o.Condition == nil {
		var ret BTPExpression9
		return ret
	}
	return *o.Condition
}

// GetConditionOk returns a tuple with the Condition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementIf276AllOf) GetConditionOk() (*BTPExpression9, bool) {
	if o == nil || o.Condition == nil {
		return nil, false
	}
	return o.Condition, true
}

// HasCondition returns a boolean if a field has been set.
func (o *BTPStatementIf276AllOf) HasCondition() bool {
	if o != nil && o.Condition != nil {
		return true
	}

	return false
}

// SetCondition gets a reference to the given BTPExpression9 and assigns it to the Condition field.
func (o *BTPStatementIf276AllOf) SetCondition(v BTPExpression9) {
	o.Condition = &v
}

// GetElseBody returns the ElseBody field value if set, zero value otherwise.
func (o *BTPStatementIf276AllOf) GetElseBody() BTPStatement269 {
	if o == nil || o.ElseBody == nil {
		var ret BTPStatement269
		return ret
	}
	return *o.ElseBody
}

// GetElseBodyOk returns a tuple with the ElseBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementIf276AllOf) GetElseBodyOk() (*BTPStatement269, bool) {
	if o == nil || o.ElseBody == nil {
		return nil, false
	}
	return o.ElseBody, true
}

// HasElseBody returns a boolean if a field has been set.
func (o *BTPStatementIf276AllOf) HasElseBody() bool {
	if o != nil && o.ElseBody != nil {
		return true
	}

	return false
}

// SetElseBody gets a reference to the given BTPStatement269 and assigns it to the ElseBody field.
func (o *BTPStatementIf276AllOf) SetElseBody(v BTPStatement269) {
	o.ElseBody = &v
}

// GetSpaceAfterIf returns the SpaceAfterIf field value if set, zero value otherwise.
func (o *BTPStatementIf276AllOf) GetSpaceAfterIf() BTPSpace10 {
	if o == nil || o.SpaceAfterIf == nil {
		var ret BTPSpace10
		return ret
	}
	return *o.SpaceAfterIf
}

// GetSpaceAfterIfOk returns a tuple with the SpaceAfterIf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementIf276AllOf) GetSpaceAfterIfOk() (*BTPSpace10, bool) {
	if o == nil || o.SpaceAfterIf == nil {
		return nil, false
	}
	return o.SpaceAfterIf, true
}

// HasSpaceAfterIf returns a boolean if a field has been set.
func (o *BTPStatementIf276AllOf) HasSpaceAfterIf() bool {
	if o != nil && o.SpaceAfterIf != nil {
		return true
	}

	return false
}

// SetSpaceAfterIf gets a reference to the given BTPSpace10 and assigns it to the SpaceAfterIf field.
func (o *BTPStatementIf276AllOf) SetSpaceAfterIf(v BTPSpace10) {
	o.SpaceAfterIf = &v
}

// GetThenBody returns the ThenBody field value if set, zero value otherwise.
func (o *BTPStatementIf276AllOf) GetThenBody() BTPStatement269 {
	if o == nil || o.ThenBody == nil {
		var ret BTPStatement269
		return ret
	}
	return *o.ThenBody
}

// GetThenBodyOk returns a tuple with the ThenBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementIf276AllOf) GetThenBodyOk() (*BTPStatement269, bool) {
	if o == nil || o.ThenBody == nil {
		return nil, false
	}
	return o.ThenBody, true
}

// HasThenBody returns a boolean if a field has been set.
func (o *BTPStatementIf276AllOf) HasThenBody() bool {
	if o != nil && o.ThenBody != nil {
		return true
	}

	return false
}

// SetThenBody gets a reference to the given BTPStatement269 and assigns it to the ThenBody field.
func (o *BTPStatementIf276AllOf) SetThenBody(v BTPStatement269) {
	o.ThenBody = &v
}

func (o BTPStatementIf276AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Condition != nil {
		toSerialize["condition"] = o.Condition
	}
	if o.ElseBody != nil {
		toSerialize["elseBody"] = o.ElseBody
	}
	if o.SpaceAfterIf != nil {
		toSerialize["spaceAfterIf"] = o.SpaceAfterIf
	}
	if o.ThenBody != nil {
		toSerialize["thenBody"] = o.ThenBody
	}
	return json.Marshal(toSerialize)
}

type NullableBTPStatementIf276AllOf struct {
	value *BTPStatementIf276AllOf
	isSet bool
}

func (v NullableBTPStatementIf276AllOf) Get() *BTPStatementIf276AllOf {
	return v.value
}

func (v *NullableBTPStatementIf276AllOf) Set(val *BTPStatementIf276AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPStatementIf276AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPStatementIf276AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPStatementIf276AllOf(val *BTPStatementIf276AllOf) *NullableBTPStatementIf276AllOf {
	return &NullableBTPStatementIf276AllOf{value: val, isSet: true}
}

func (v NullableBTPStatementIf276AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPStatementIf276AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
