/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTStringMaximumLengthPattern2593 struct for BTStringMaximumLengthPattern2593
type BTStringMaximumLengthPattern2593 struct {
	BTStringFormatCondition683
	BtType *string `json:"btType,omitempty"`
	MaximumLength *int32 `json:"maximumLength,omitempty"`
}

// NewBTStringMaximumLengthPattern2593 instantiates a new BTStringMaximumLengthPattern2593 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTStringMaximumLengthPattern2593() *BTStringMaximumLengthPattern2593 {
	this := BTStringMaximumLengthPattern2593{}
	return &this
}

// NewBTStringMaximumLengthPattern2593WithDefaults instantiates a new BTStringMaximumLengthPattern2593 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTStringMaximumLengthPattern2593WithDefaults() *BTStringMaximumLengthPattern2593 {
	this := BTStringMaximumLengthPattern2593{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTStringMaximumLengthPattern2593) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTStringMaximumLengthPattern2593) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTStringMaximumLengthPattern2593) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTStringMaximumLengthPattern2593) SetBtType(v string) {
	o.BtType = &v
}

// GetMaximumLength returns the MaximumLength field value if set, zero value otherwise.
func (o *BTStringMaximumLengthPattern2593) GetMaximumLength() int32 {
	if o == nil || o.MaximumLength == nil {
		var ret int32
		return ret
	}
	return *o.MaximumLength
}

// GetMaximumLengthOk returns a tuple with the MaximumLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTStringMaximumLengthPattern2593) GetMaximumLengthOk() (*int32, bool) {
	if o == nil || o.MaximumLength == nil {
		return nil, false
	}
	return o.MaximumLength, true
}

// HasMaximumLength returns a boolean if a field has been set.
func (o *BTStringMaximumLengthPattern2593) HasMaximumLength() bool {
	if o != nil && o.MaximumLength != nil {
		return true
	}

	return false
}

// SetMaximumLength gets a reference to the given int32 and assigns it to the MaximumLength field.
func (o *BTStringMaximumLengthPattern2593) SetMaximumLength(v int32) {
	o.MaximumLength = &v
}

func (o BTStringMaximumLengthPattern2593) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTStringFormatCondition683, errBTStringFormatCondition683 := json.Marshal(o.BTStringFormatCondition683)
	if errBTStringFormatCondition683 != nil {
		return []byte{}, errBTStringFormatCondition683
	}
	errBTStringFormatCondition683 = json.Unmarshal([]byte(serializedBTStringFormatCondition683), &toSerialize)
	if errBTStringFormatCondition683 != nil {
		return []byte{}, errBTStringFormatCondition683
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.MaximumLength != nil {
		toSerialize["maximumLength"] = o.MaximumLength
	}
	return json.Marshal(toSerialize)
}

type NullableBTStringMaximumLengthPattern2593 struct {
	value *BTStringMaximumLengthPattern2593
	isSet bool
}

func (v NullableBTStringMaximumLengthPattern2593) Get() *BTStringMaximumLengthPattern2593 {
	return v.value
}

func (v *NullableBTStringMaximumLengthPattern2593) Set(val *BTStringMaximumLengthPattern2593) {
	v.value = val
	v.isSet = true
}

func (v NullableBTStringMaximumLengthPattern2593) IsSet() bool {
	return v.isSet
}

func (v *NullableBTStringMaximumLengthPattern2593) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTStringMaximumLengthPattern2593(val *BTStringMaximumLengthPattern2593) *NullableBTStringMaximumLengthPattern2593 {
	return &NullableBTStringMaximumLengthPattern2593{value: val, isSet: true}
}

func (v NullableBTStringMaximumLengthPattern2593) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTStringMaximumLengthPattern2593) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
