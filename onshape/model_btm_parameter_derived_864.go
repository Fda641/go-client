/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMParameterDerived864 struct for BTMParameterDerived864
type BTMParameterDerived864 struct {
	BTMParameter1
	BtType *string `json:"btType,omitempty"`
	Imports *[]BTMImport136 `json:"imports,omitempty"`
	ModuleId *BTPModuleId235 `json:"moduleId,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
}

// NewBTMParameterDerived864 instantiates a new BTMParameterDerived864 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMParameterDerived864() *BTMParameterDerived864 {
	this := BTMParameterDerived864{}
	return &this
}

// NewBTMParameterDerived864WithDefaults instantiates a new BTMParameterDerived864 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMParameterDerived864WithDefaults() *BTMParameterDerived864 {
	this := BTMParameterDerived864{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMParameterDerived864) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterDerived864) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMParameterDerived864) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMParameterDerived864) SetBtType(v string) {
	o.BtType = &v
}

// GetImports returns the Imports field value if set, zero value otherwise.
func (o *BTMParameterDerived864) GetImports() []BTMImport136 {
	if o == nil || o.Imports == nil {
		var ret []BTMImport136
		return ret
	}
	return *o.Imports
}

// GetImportsOk returns a tuple with the Imports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterDerived864) GetImportsOk() (*[]BTMImport136, bool) {
	if o == nil || o.Imports == nil {
		return nil, false
	}
	return o.Imports, true
}

// HasImports returns a boolean if a field has been set.
func (o *BTMParameterDerived864) HasImports() bool {
	if o != nil && o.Imports != nil {
		return true
	}

	return false
}

// SetImports gets a reference to the given []BTMImport136 and assigns it to the Imports field.
func (o *BTMParameterDerived864) SetImports(v []BTMImport136) {
	o.Imports = &v
}

// GetModuleId returns the ModuleId field value if set, zero value otherwise.
func (o *BTMParameterDerived864) GetModuleId() BTPModuleId235 {
	if o == nil || o.ModuleId == nil {
		var ret BTPModuleId235
		return ret
	}
	return *o.ModuleId
}

// GetModuleIdOk returns a tuple with the ModuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterDerived864) GetModuleIdOk() (*BTPModuleId235, bool) {
	if o == nil || o.ModuleId == nil {
		return nil, false
	}
	return o.ModuleId, true
}

// HasModuleId returns a boolean if a field has been set.
func (o *BTMParameterDerived864) HasModuleId() bool {
	if o != nil && o.ModuleId != nil {
		return true
	}

	return false
}

// SetModuleId gets a reference to the given BTPModuleId235 and assigns it to the ModuleId field.
func (o *BTMParameterDerived864) SetModuleId(v BTPModuleId235) {
	o.ModuleId = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *BTMParameterDerived864) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterDerived864) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *BTMParameterDerived864) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *BTMParameterDerived864) SetNamespace(v string) {
	o.Namespace = &v
}

func (o BTMParameterDerived864) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMParameter1, errBTMParameter1 := json.Marshal(o.BTMParameter1)
	if errBTMParameter1 != nil {
		return []byte{}, errBTMParameter1
	}
	errBTMParameter1 = json.Unmarshal([]byte(serializedBTMParameter1), &toSerialize)
	if errBTMParameter1 != nil {
		return []byte{}, errBTMParameter1
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Imports != nil {
		toSerialize["imports"] = o.Imports
	}
	if o.ModuleId != nil {
		toSerialize["moduleId"] = o.ModuleId
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	return json.Marshal(toSerialize)
}

type NullableBTMParameterDerived864 struct {
	value *BTMParameterDerived864
	isSet bool
}

func (v NullableBTMParameterDerived864) Get() *BTMParameterDerived864 {
	return v.value
}

func (v *NullableBTMParameterDerived864) Set(val *BTMParameterDerived864) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMParameterDerived864) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMParameterDerived864) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMParameterDerived864(val *BTMParameterDerived864) *NullableBTMParameterDerived864 {
	return &NullableBTMParameterDerived864{value: val, isSet: true}
}

func (v NullableBTMParameterDerived864) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMParameterDerived864) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
