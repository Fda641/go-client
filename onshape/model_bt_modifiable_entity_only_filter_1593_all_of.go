/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTModifiableEntityOnlyFilter1593AllOf struct for BTModifiableEntityOnlyFilter1593AllOf
type BTModifiableEntityOnlyFilter1593AllOf struct {
	BtType *string `json:"btType,omitempty"`
	ModifiableOnly *bool `json:"modifiableOnly,omitempty"`
}

// NewBTModifiableEntityOnlyFilter1593AllOf instantiates a new BTModifiableEntityOnlyFilter1593AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTModifiableEntityOnlyFilter1593AllOf() *BTModifiableEntityOnlyFilter1593AllOf {
	this := BTModifiableEntityOnlyFilter1593AllOf{}
	return &this
}

// NewBTModifiableEntityOnlyFilter1593AllOfWithDefaults instantiates a new BTModifiableEntityOnlyFilter1593AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTModifiableEntityOnlyFilter1593AllOfWithDefaults() *BTModifiableEntityOnlyFilter1593AllOf {
	this := BTModifiableEntityOnlyFilter1593AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTModifiableEntityOnlyFilter1593AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTModifiableEntityOnlyFilter1593AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTModifiableEntityOnlyFilter1593AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTModifiableEntityOnlyFilter1593AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetModifiableOnly returns the ModifiableOnly field value if set, zero value otherwise.
func (o *BTModifiableEntityOnlyFilter1593AllOf) GetModifiableOnly() bool {
	if o == nil || o.ModifiableOnly == nil {
		var ret bool
		return ret
	}
	return *o.ModifiableOnly
}

// GetModifiableOnlyOk returns a tuple with the ModifiableOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTModifiableEntityOnlyFilter1593AllOf) GetModifiableOnlyOk() (*bool, bool) {
	if o == nil || o.ModifiableOnly == nil {
		return nil, false
	}
	return o.ModifiableOnly, true
}

// HasModifiableOnly returns a boolean if a field has been set.
func (o *BTModifiableEntityOnlyFilter1593AllOf) HasModifiableOnly() bool {
	if o != nil && o.ModifiableOnly != nil {
		return true
	}

	return false
}

// SetModifiableOnly gets a reference to the given bool and assigns it to the ModifiableOnly field.
func (o *BTModifiableEntityOnlyFilter1593AllOf) SetModifiableOnly(v bool) {
	o.ModifiableOnly = &v
}

func (o BTModifiableEntityOnlyFilter1593AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ModifiableOnly != nil {
		toSerialize["modifiableOnly"] = o.ModifiableOnly
	}
	return json.Marshal(toSerialize)
}

type NullableBTModifiableEntityOnlyFilter1593AllOf struct {
	value *BTModifiableEntityOnlyFilter1593AllOf
	isSet bool
}

func (v NullableBTModifiableEntityOnlyFilter1593AllOf) Get() *BTModifiableEntityOnlyFilter1593AllOf {
	return v.value
}

func (v *NullableBTModifiableEntityOnlyFilter1593AllOf) Set(val *BTModifiableEntityOnlyFilter1593AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTModifiableEntityOnlyFilter1593AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTModifiableEntityOnlyFilter1593AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTModifiableEntityOnlyFilter1593AllOf(val *BTModifiableEntityOnlyFilter1593AllOf) *NullableBTModifiableEntityOnlyFilter1593AllOf {
	return &NullableBTModifiableEntityOnlyFilter1593AllOf{value: val, isSet: true}
}

func (v NullableBTModifiableEntityOnlyFilter1593AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTModifiableEntityOnlyFilter1593AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
