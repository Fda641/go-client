/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTDocumentProcessingInfo struct for BTDocumentProcessingInfo
type BTDocumentProcessingInfo struct {
	BTDocumentInfo
	TranslationEventKey *string `json:"translationEventKey,omitempty"`
	TranslationId *string `json:"translationId,omitempty"`
}

// NewBTDocumentProcessingInfo instantiates a new BTDocumentProcessingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTDocumentProcessingInfo() *BTDocumentProcessingInfo {
	this := BTDocumentProcessingInfo{}
	return &this
}

// NewBTDocumentProcessingInfoWithDefaults instantiates a new BTDocumentProcessingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTDocumentProcessingInfoWithDefaults() *BTDocumentProcessingInfo {
	this := BTDocumentProcessingInfo{}
	return &this
}

// GetTranslationEventKey returns the TranslationEventKey field value if set, zero value otherwise.
func (o *BTDocumentProcessingInfo) GetTranslationEventKey() string {
	if o == nil || o.TranslationEventKey == nil {
		var ret string
		return ret
	}
	return *o.TranslationEventKey
}

// GetTranslationEventKeyOk returns a tuple with the TranslationEventKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentProcessingInfo) GetTranslationEventKeyOk() (*string, bool) {
	if o == nil || o.TranslationEventKey == nil {
		return nil, false
	}
	return o.TranslationEventKey, true
}

// HasTranslationEventKey returns a boolean if a field has been set.
func (o *BTDocumentProcessingInfo) HasTranslationEventKey() bool {
	if o != nil && o.TranslationEventKey != nil {
		return true
	}

	return false
}

// SetTranslationEventKey gets a reference to the given string and assigns it to the TranslationEventKey field.
func (o *BTDocumentProcessingInfo) SetTranslationEventKey(v string) {
	o.TranslationEventKey = &v
}

// GetTranslationId returns the TranslationId field value if set, zero value otherwise.
func (o *BTDocumentProcessingInfo) GetTranslationId() string {
	if o == nil || o.TranslationId == nil {
		var ret string
		return ret
	}
	return *o.TranslationId
}

// GetTranslationIdOk returns a tuple with the TranslationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTDocumentProcessingInfo) GetTranslationIdOk() (*string, bool) {
	if o == nil || o.TranslationId == nil {
		return nil, false
	}
	return o.TranslationId, true
}

// HasTranslationId returns a boolean if a field has been set.
func (o *BTDocumentProcessingInfo) HasTranslationId() bool {
	if o != nil && o.TranslationId != nil {
		return true
	}

	return false
}

// SetTranslationId gets a reference to the given string and assigns it to the TranslationId field.
func (o *BTDocumentProcessingInfo) SetTranslationId(v string) {
	o.TranslationId = &v
}

func (o BTDocumentProcessingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTDocumentInfo, errBTDocumentInfo := json.Marshal(o.BTDocumentInfo)
	if errBTDocumentInfo != nil {
		return []byte{}, errBTDocumentInfo
	}
	errBTDocumentInfo = json.Unmarshal([]byte(serializedBTDocumentInfo), &toSerialize)
	if errBTDocumentInfo != nil {
		return []byte{}, errBTDocumentInfo
	}
	if o.TranslationEventKey != nil {
		toSerialize["translationEventKey"] = o.TranslationEventKey
	}
	if o.TranslationId != nil {
		toSerialize["translationId"] = o.TranslationId
	}
	return json.Marshal(toSerialize)
}

type NullableBTDocumentProcessingInfo struct {
	value *BTDocumentProcessingInfo
	isSet bool
}

func (v NullableBTDocumentProcessingInfo) Get() *BTDocumentProcessingInfo {
	return v.value
}

func (v *NullableBTDocumentProcessingInfo) Set(val *BTDocumentProcessingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTDocumentProcessingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTDocumentProcessingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTDocumentProcessingInfo(val *BTDocumentProcessingInfo) *NullableBTDocumentProcessingInfo {
	return &NullableBTDocumentProcessingInfo{value: val, isSet: true}
}

func (v NullableBTDocumentProcessingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTDocumentProcessingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
