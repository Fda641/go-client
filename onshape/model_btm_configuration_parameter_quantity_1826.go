/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMConfigurationParameterQuantity1826 struct for BTMConfigurationParameterQuantity1826
type BTMConfigurationParameterQuantity1826 struct {
	BTMConfigurationParameter819
	BtType *string `json:"btType,omitempty"`
	QuantityType *string `json:"quantityType,omitempty"`
	RangeAndDefault *BTQuantityRange181 `json:"rangeAndDefault,omitempty"`
}

// NewBTMConfigurationParameterQuantity1826 instantiates a new BTMConfigurationParameterQuantity1826 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMConfigurationParameterQuantity1826() *BTMConfigurationParameterQuantity1826 {
	this := BTMConfigurationParameterQuantity1826{}
	return &this
}

// NewBTMConfigurationParameterQuantity1826WithDefaults instantiates a new BTMConfigurationParameterQuantity1826 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMConfigurationParameterQuantity1826WithDefaults() *BTMConfigurationParameterQuantity1826 {
	this := BTMConfigurationParameterQuantity1826{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMConfigurationParameterQuantity1826) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterQuantity1826) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMConfigurationParameterQuantity1826) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMConfigurationParameterQuantity1826) SetBtType(v string) {
	o.BtType = &v
}

// GetQuantityType returns the QuantityType field value if set, zero value otherwise.
func (o *BTMConfigurationParameterQuantity1826) GetQuantityType() string {
	if o == nil || o.QuantityType == nil {
		var ret string
		return ret
	}
	return *o.QuantityType
}

// GetQuantityTypeOk returns a tuple with the QuantityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterQuantity1826) GetQuantityTypeOk() (*string, bool) {
	if o == nil || o.QuantityType == nil {
		return nil, false
	}
	return o.QuantityType, true
}

// HasQuantityType returns a boolean if a field has been set.
func (o *BTMConfigurationParameterQuantity1826) HasQuantityType() bool {
	if o != nil && o.QuantityType != nil {
		return true
	}

	return false
}

// SetQuantityType gets a reference to the given string and assigns it to the QuantityType field.
func (o *BTMConfigurationParameterQuantity1826) SetQuantityType(v string) {
	o.QuantityType = &v
}

// GetRangeAndDefault returns the RangeAndDefault field value if set, zero value otherwise.
func (o *BTMConfigurationParameterQuantity1826) GetRangeAndDefault() BTQuantityRange181 {
	if o == nil || o.RangeAndDefault == nil {
		var ret BTQuantityRange181
		return ret
	}
	return *o.RangeAndDefault
}

// GetRangeAndDefaultOk returns a tuple with the RangeAndDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfigurationParameterQuantity1826) GetRangeAndDefaultOk() (*BTQuantityRange181, bool) {
	if o == nil || o.RangeAndDefault == nil {
		return nil, false
	}
	return o.RangeAndDefault, true
}

// HasRangeAndDefault returns a boolean if a field has been set.
func (o *BTMConfigurationParameterQuantity1826) HasRangeAndDefault() bool {
	if o != nil && o.RangeAndDefault != nil {
		return true
	}

	return false
}

// SetRangeAndDefault gets a reference to the given BTQuantityRange181 and assigns it to the RangeAndDefault field.
func (o *BTMConfigurationParameterQuantity1826) SetRangeAndDefault(v BTQuantityRange181) {
	o.RangeAndDefault = &v
}

func (o BTMConfigurationParameterQuantity1826) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMConfigurationParameter819, errBTMConfigurationParameter819 := json.Marshal(o.BTMConfigurationParameter819)
	if errBTMConfigurationParameter819 != nil {
		return []byte{}, errBTMConfigurationParameter819
	}
	errBTMConfigurationParameter819 = json.Unmarshal([]byte(serializedBTMConfigurationParameter819), &toSerialize)
	if errBTMConfigurationParameter819 != nil {
		return []byte{}, errBTMConfigurationParameter819
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.QuantityType != nil {
		toSerialize["quantityType"] = o.QuantityType
	}
	if o.RangeAndDefault != nil {
		toSerialize["rangeAndDefault"] = o.RangeAndDefault
	}
	return json.Marshal(toSerialize)
}

type NullableBTMConfigurationParameterQuantity1826 struct {
	value *BTMConfigurationParameterQuantity1826
	isSet bool
}

func (v NullableBTMConfigurationParameterQuantity1826) Get() *BTMConfigurationParameterQuantity1826 {
	return v.value
}

func (v *NullableBTMConfigurationParameterQuantity1826) Set(val *BTMConfigurationParameterQuantity1826) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMConfigurationParameterQuantity1826) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMConfigurationParameterQuantity1826) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMConfigurationParameterQuantity1826(val *BTMConfigurationParameterQuantity1826) *NullableBTMConfigurationParameterQuantity1826 {
	return &NullableBTMConfigurationParameterQuantity1826{value: val, isSet: true}
}

func (v NullableBTMConfigurationParameterQuantity1826) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMConfigurationParameterQuantity1826) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
