/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTTableCellPropertyParameter2983 struct for BTTableCellPropertyParameter2983
type BTTableCellPropertyParameter2983 struct {
	BTTableCellParameter2399
	BtType *string `json:"btType,omitempty"`
	IsUnchanged *bool `json:"isUnchanged,omitempty"`
}

// NewBTTableCellPropertyParameter2983 instantiates a new BTTableCellPropertyParameter2983 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTTableCellPropertyParameter2983() *BTTableCellPropertyParameter2983 {
	this := BTTableCellPropertyParameter2983{}
	return &this
}

// NewBTTableCellPropertyParameter2983WithDefaults instantiates a new BTTableCellPropertyParameter2983 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTTableCellPropertyParameter2983WithDefaults() *BTTableCellPropertyParameter2983 {
	this := BTTableCellPropertyParameter2983{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTTableCellPropertyParameter2983) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableCellPropertyParameter2983) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTTableCellPropertyParameter2983) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTTableCellPropertyParameter2983) SetBtType(v string) {
	o.BtType = &v
}

// GetIsUnchanged returns the IsUnchanged field value if set, zero value otherwise.
func (o *BTTableCellPropertyParameter2983) GetIsUnchanged() bool {
	if o == nil || o.IsUnchanged == nil {
		var ret bool
		return ret
	}
	return *o.IsUnchanged
}

// GetIsUnchangedOk returns a tuple with the IsUnchanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTTableCellPropertyParameter2983) GetIsUnchangedOk() (*bool, bool) {
	if o == nil || o.IsUnchanged == nil {
		return nil, false
	}
	return o.IsUnchanged, true
}

// HasIsUnchanged returns a boolean if a field has been set.
func (o *BTTableCellPropertyParameter2983) HasIsUnchanged() bool {
	if o != nil && o.IsUnchanged != nil {
		return true
	}

	return false
}

// SetIsUnchanged gets a reference to the given bool and assigns it to the IsUnchanged field.
func (o *BTTableCellPropertyParameter2983) SetIsUnchanged(v bool) {
	o.IsUnchanged = &v
}

func (o BTTableCellPropertyParameter2983) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTTableCellParameter2399, errBTTableCellParameter2399 := json.Marshal(o.BTTableCellParameter2399)
	if errBTTableCellParameter2399 != nil {
		return []byte{}, errBTTableCellParameter2399
	}
	errBTTableCellParameter2399 = json.Unmarshal([]byte(serializedBTTableCellParameter2399), &toSerialize)
	if errBTTableCellParameter2399 != nil {
		return []byte{}, errBTTableCellParameter2399
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.IsUnchanged != nil {
		toSerialize["isUnchanged"] = o.IsUnchanged
	}
	return json.Marshal(toSerialize)
}

type NullableBTTableCellPropertyParameter2983 struct {
	value *BTTableCellPropertyParameter2983
	isSet bool
}

func (v NullableBTTableCellPropertyParameter2983) Get() *BTTableCellPropertyParameter2983 {
	return v.value
}

func (v *NullableBTTableCellPropertyParameter2983) Set(val *BTTableCellPropertyParameter2983) {
	v.value = val
	v.isSet = true
}

func (v NullableBTTableCellPropertyParameter2983) IsSet() bool {
	return v.isSet
}

func (v *NullableBTTableCellPropertyParameter2983) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTTableCellPropertyParameter2983(val *BTTableCellPropertyParameter2983) *NullableBTTableCellPropertyParameter2983 {
	return &NullableBTTableCellPropertyParameter2983{value: val, isSet: true}
}

func (v NullableBTTableCellPropertyParameter2983) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTTableCellPropertyParameter2983) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
