/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMConfiguredValueByBoolean1501AllOf struct for BTMConfiguredValueByBoolean1501AllOf
type BTMConfiguredValueByBoolean1501AllOf struct {
	BooleanValue *bool `json:"booleanValue,omitempty"`
	BtType *string `json:"btType,omitempty"`
}

// NewBTMConfiguredValueByBoolean1501AllOf instantiates a new BTMConfiguredValueByBoolean1501AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMConfiguredValueByBoolean1501AllOf() *BTMConfiguredValueByBoolean1501AllOf {
	this := BTMConfiguredValueByBoolean1501AllOf{}
	return &this
}

// NewBTMConfiguredValueByBoolean1501AllOfWithDefaults instantiates a new BTMConfiguredValueByBoolean1501AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMConfiguredValueByBoolean1501AllOfWithDefaults() *BTMConfiguredValueByBoolean1501AllOf {
	this := BTMConfiguredValueByBoolean1501AllOf{}
	return &this
}

// GetBooleanValue returns the BooleanValue field value if set, zero value otherwise.
func (o *BTMConfiguredValueByBoolean1501AllOf) GetBooleanValue() bool {
	if o == nil || o.BooleanValue == nil {
		var ret bool
		return ret
	}
	return *o.BooleanValue
}

// GetBooleanValueOk returns a tuple with the BooleanValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfiguredValueByBoolean1501AllOf) GetBooleanValueOk() (*bool, bool) {
	if o == nil || o.BooleanValue == nil {
		return nil, false
	}
	return o.BooleanValue, true
}

// HasBooleanValue returns a boolean if a field has been set.
func (o *BTMConfiguredValueByBoolean1501AllOf) HasBooleanValue() bool {
	if o != nil && o.BooleanValue != nil {
		return true
	}

	return false
}

// SetBooleanValue gets a reference to the given bool and assigns it to the BooleanValue field.
func (o *BTMConfiguredValueByBoolean1501AllOf) SetBooleanValue(v bool) {
	o.BooleanValue = &v
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMConfiguredValueByBoolean1501AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMConfiguredValueByBoolean1501AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMConfiguredValueByBoolean1501AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMConfiguredValueByBoolean1501AllOf) SetBtType(v string) {
	o.BtType = &v
}

func (o BTMConfiguredValueByBoolean1501AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BooleanValue != nil {
		toSerialize["booleanValue"] = o.BooleanValue
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	return json.Marshal(toSerialize)
}

type NullableBTMConfiguredValueByBoolean1501AllOf struct {
	value *BTMConfiguredValueByBoolean1501AllOf
	isSet bool
}

func (v NullableBTMConfiguredValueByBoolean1501AllOf) Get() *BTMConfiguredValueByBoolean1501AllOf {
	return v.value
}

func (v *NullableBTMConfiguredValueByBoolean1501AllOf) Set(val *BTMConfiguredValueByBoolean1501AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMConfiguredValueByBoolean1501AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMConfiguredValueByBoolean1501AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMConfiguredValueByBoolean1501AllOf(val *BTMConfiguredValueByBoolean1501AllOf) *NullableBTMConfiguredValueByBoolean1501AllOf {
	return &NullableBTMConfiguredValueByBoolean1501AllOf{value: val, isSet: true}
}

func (v NullableBTMConfiguredValueByBoolean1501AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMConfiguredValueByBoolean1501AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
