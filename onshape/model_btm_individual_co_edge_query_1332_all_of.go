/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMIndividualCoEdgeQuery1332AllOf struct for BTMIndividualCoEdgeQuery1332AllOf
type BTMIndividualCoEdgeQuery1332AllOf struct {
	BtType *string `json:"btType,omitempty"`
	EdgeQuery *BTMIndividualQuery138 `json:"edgeQuery,omitempty"`
	FaceQuery *BTMIndividualQuery138 `json:"faceQuery,omitempty"`
}

// NewBTMIndividualCoEdgeQuery1332AllOf instantiates a new BTMIndividualCoEdgeQuery1332AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMIndividualCoEdgeQuery1332AllOf() *BTMIndividualCoEdgeQuery1332AllOf {
	this := BTMIndividualCoEdgeQuery1332AllOf{}
	return &this
}

// NewBTMIndividualCoEdgeQuery1332AllOfWithDefaults instantiates a new BTMIndividualCoEdgeQuery1332AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMIndividualCoEdgeQuery1332AllOfWithDefaults() *BTMIndividualCoEdgeQuery1332AllOf {
	this := BTMIndividualCoEdgeQuery1332AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMIndividualCoEdgeQuery1332AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMIndividualCoEdgeQuery1332AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMIndividualCoEdgeQuery1332AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMIndividualCoEdgeQuery1332AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetEdgeQuery returns the EdgeQuery field value if set, zero value otherwise.
func (o *BTMIndividualCoEdgeQuery1332AllOf) GetEdgeQuery() BTMIndividualQuery138 {
	if o == nil || o.EdgeQuery == nil {
		var ret BTMIndividualQuery138
		return ret
	}
	return *o.EdgeQuery
}

// GetEdgeQueryOk returns a tuple with the EdgeQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMIndividualCoEdgeQuery1332AllOf) GetEdgeQueryOk() (*BTMIndividualQuery138, bool) {
	if o == nil || o.EdgeQuery == nil {
		return nil, false
	}
	return o.EdgeQuery, true
}

// HasEdgeQuery returns a boolean if a field has been set.
func (o *BTMIndividualCoEdgeQuery1332AllOf) HasEdgeQuery() bool {
	if o != nil && o.EdgeQuery != nil {
		return true
	}

	return false
}

// SetEdgeQuery gets a reference to the given BTMIndividualQuery138 and assigns it to the EdgeQuery field.
func (o *BTMIndividualCoEdgeQuery1332AllOf) SetEdgeQuery(v BTMIndividualQuery138) {
	o.EdgeQuery = &v
}

// GetFaceQuery returns the FaceQuery field value if set, zero value otherwise.
func (o *BTMIndividualCoEdgeQuery1332AllOf) GetFaceQuery() BTMIndividualQuery138 {
	if o == nil || o.FaceQuery == nil {
		var ret BTMIndividualQuery138
		return ret
	}
	return *o.FaceQuery
}

// GetFaceQueryOk returns a tuple with the FaceQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMIndividualCoEdgeQuery1332AllOf) GetFaceQueryOk() (*BTMIndividualQuery138, bool) {
	if o == nil || o.FaceQuery == nil {
		return nil, false
	}
	return o.FaceQuery, true
}

// HasFaceQuery returns a boolean if a field has been set.
func (o *BTMIndividualCoEdgeQuery1332AllOf) HasFaceQuery() bool {
	if o != nil && o.FaceQuery != nil {
		return true
	}

	return false
}

// SetFaceQuery gets a reference to the given BTMIndividualQuery138 and assigns it to the FaceQuery field.
func (o *BTMIndividualCoEdgeQuery1332AllOf) SetFaceQuery(v BTMIndividualQuery138) {
	o.FaceQuery = &v
}

func (o BTMIndividualCoEdgeQuery1332AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.EdgeQuery != nil {
		toSerialize["edgeQuery"] = o.EdgeQuery
	}
	if o.FaceQuery != nil {
		toSerialize["faceQuery"] = o.FaceQuery
	}
	return json.Marshal(toSerialize)
}

type NullableBTMIndividualCoEdgeQuery1332AllOf struct {
	value *BTMIndividualCoEdgeQuery1332AllOf
	isSet bool
}

func (v NullableBTMIndividualCoEdgeQuery1332AllOf) Get() *BTMIndividualCoEdgeQuery1332AllOf {
	return v.value
}

func (v *NullableBTMIndividualCoEdgeQuery1332AllOf) Set(val *BTMIndividualCoEdgeQuery1332AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMIndividualCoEdgeQuery1332AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMIndividualCoEdgeQuery1332AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMIndividualCoEdgeQuery1332AllOf(val *BTMIndividualCoEdgeQuery1332AllOf) *NullableBTMIndividualCoEdgeQuery1332AllOf {
	return &NullableBTMIndividualCoEdgeQuery1332AllOf{value: val, isSet: true}
}

func (v NullableBTMIndividualCoEdgeQuery1332AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMIndividualCoEdgeQuery1332AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
