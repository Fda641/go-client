/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTPTopLevelConstantDeclaration283 struct for BTPTopLevelConstantDeclaration283
type BTPTopLevelConstantDeclaration283 struct {
	BTPTopLevelNode286
	BtType *string `json:"btType,omitempty"`
	Declaration *BTPStatementConstantDeclaration273 `json:"declaration,omitempty"`
}

// NewBTPTopLevelConstantDeclaration283 instantiates a new BTPTopLevelConstantDeclaration283 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPTopLevelConstantDeclaration283() *BTPTopLevelConstantDeclaration283 {
	this := BTPTopLevelConstantDeclaration283{}
	return &this
}

// NewBTPTopLevelConstantDeclaration283WithDefaults instantiates a new BTPTopLevelConstantDeclaration283 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPTopLevelConstantDeclaration283WithDefaults() *BTPTopLevelConstantDeclaration283 {
	this := BTPTopLevelConstantDeclaration283{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPTopLevelConstantDeclaration283) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPTopLevelConstantDeclaration283) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPTopLevelConstantDeclaration283) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPTopLevelConstantDeclaration283) SetBtType(v string) {
	o.BtType = &v
}

// GetDeclaration returns the Declaration field value if set, zero value otherwise.
func (o *BTPTopLevelConstantDeclaration283) GetDeclaration() BTPStatementConstantDeclaration273 {
	if o == nil || o.Declaration == nil {
		var ret BTPStatementConstantDeclaration273
		return ret
	}
	return *o.Declaration
}

// GetDeclarationOk returns a tuple with the Declaration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPTopLevelConstantDeclaration283) GetDeclarationOk() (*BTPStatementConstantDeclaration273, bool) {
	if o == nil || o.Declaration == nil {
		return nil, false
	}
	return o.Declaration, true
}

// HasDeclaration returns a boolean if a field has been set.
func (o *BTPTopLevelConstantDeclaration283) HasDeclaration() bool {
	if o != nil && o.Declaration != nil {
		return true
	}

	return false
}

// SetDeclaration gets a reference to the given BTPStatementConstantDeclaration273 and assigns it to the Declaration field.
func (o *BTPTopLevelConstantDeclaration283) SetDeclaration(v BTPStatementConstantDeclaration273) {
	o.Declaration = &v
}

func (o BTPTopLevelConstantDeclaration283) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTPTopLevelNode286, errBTPTopLevelNode286 := json.Marshal(o.BTPTopLevelNode286)
	if errBTPTopLevelNode286 != nil {
		return []byte{}, errBTPTopLevelNode286
	}
	errBTPTopLevelNode286 = json.Unmarshal([]byte(serializedBTPTopLevelNode286), &toSerialize)
	if errBTPTopLevelNode286 != nil {
		return []byte{}, errBTPTopLevelNode286
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Declaration != nil {
		toSerialize["declaration"] = o.Declaration
	}
	return json.Marshal(toSerialize)
}

type NullableBTPTopLevelConstantDeclaration283 struct {
	value *BTPTopLevelConstantDeclaration283
	isSet bool
}

func (v NullableBTPTopLevelConstantDeclaration283) Get() *BTPTopLevelConstantDeclaration283 {
	return v.value
}

func (v *NullableBTPTopLevelConstantDeclaration283) Set(val *BTPTopLevelConstantDeclaration283) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPTopLevelConstantDeclaration283) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPTopLevelConstantDeclaration283) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPTopLevelConstantDeclaration283(val *BTPTopLevelConstantDeclaration283) *NullableBTPTopLevelConstantDeclaration283 {
	return &NullableBTPTopLevelConstantDeclaration283{value: val, isSet: true}
}

func (v NullableBTPTopLevelConstantDeclaration283) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPTopLevelConstantDeclaration283) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
