/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTAssemblyTransformedInstancesDefinitionParams struct for BTAssemblyTransformedInstancesDefinitionParams
type BTAssemblyTransformedInstancesDefinitionParams struct {
	TransformGroups *[]TransformGroup `json:"transformGroups,omitempty"`
}

// NewBTAssemblyTransformedInstancesDefinitionParams instantiates a new BTAssemblyTransformedInstancesDefinitionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTAssemblyTransformedInstancesDefinitionParams() *BTAssemblyTransformedInstancesDefinitionParams {
	this := BTAssemblyTransformedInstancesDefinitionParams{}
	return &this
}

// NewBTAssemblyTransformedInstancesDefinitionParamsWithDefaults instantiates a new BTAssemblyTransformedInstancesDefinitionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTAssemblyTransformedInstancesDefinitionParamsWithDefaults() *BTAssemblyTransformedInstancesDefinitionParams {
	this := BTAssemblyTransformedInstancesDefinitionParams{}
	return &this
}

// GetTransformGroups returns the TransformGroups field value if set, zero value otherwise.
func (o *BTAssemblyTransformedInstancesDefinitionParams) GetTransformGroups() []TransformGroup {
	if o == nil || o.TransformGroups == nil {
		var ret []TransformGroup
		return ret
	}
	return *o.TransformGroups
}

// GetTransformGroupsOk returns a tuple with the TransformGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTAssemblyTransformedInstancesDefinitionParams) GetTransformGroupsOk() (*[]TransformGroup, bool) {
	if o == nil || o.TransformGroups == nil {
		return nil, false
	}
	return o.TransformGroups, true
}

// HasTransformGroups returns a boolean if a field has been set.
func (o *BTAssemblyTransformedInstancesDefinitionParams) HasTransformGroups() bool {
	if o != nil && o.TransformGroups != nil {
		return true
	}

	return false
}

// SetTransformGroups gets a reference to the given []TransformGroup and assigns it to the TransformGroups field.
func (o *BTAssemblyTransformedInstancesDefinitionParams) SetTransformGroups(v []TransformGroup) {
	o.TransformGroups = &v
}

func (o BTAssemblyTransformedInstancesDefinitionParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransformGroups != nil {
		toSerialize["transformGroups"] = o.TransformGroups
	}
	return json.Marshal(toSerialize)
}

type NullableBTAssemblyTransformedInstancesDefinitionParams struct {
	value *BTAssemblyTransformedInstancesDefinitionParams
	isSet bool
}

func (v NullableBTAssemblyTransformedInstancesDefinitionParams) Get() *BTAssemblyTransformedInstancesDefinitionParams {
	return v.value
}

func (v *NullableBTAssemblyTransformedInstancesDefinitionParams) Set(val *BTAssemblyTransformedInstancesDefinitionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableBTAssemblyTransformedInstancesDefinitionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableBTAssemblyTransformedInstancesDefinitionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTAssemblyTransformedInstancesDefinitionParams(val *BTAssemblyTransformedInstancesDefinitionParams) *NullableBTAssemblyTransformedInstancesDefinitionParams {
	return &NullableBTAssemblyTransformedInstancesDefinitionParams{value: val, isSet: true}
}

func (v NullableBTAssemblyTransformedInstancesDefinitionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTAssemblyTransformedInstancesDefinitionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
