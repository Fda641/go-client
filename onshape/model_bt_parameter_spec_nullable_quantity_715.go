/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTParameterSpecNullableQuantity715 struct for BTParameterSpecNullableQuantity715
type BTParameterSpecNullableQuantity715 struct {
	BTParameterSpec6
	BtType *string `json:"btType,omitempty"`
	QuantityType *string `json:"quantityType,omitempty"`
	Ranges *[]BTNullableQuantityRange1340 `json:"ranges,omitempty"`
}

// NewBTParameterSpecNullableQuantity715 instantiates a new BTParameterSpecNullableQuantity715 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTParameterSpecNullableQuantity715() *BTParameterSpecNullableQuantity715 {
	this := BTParameterSpecNullableQuantity715{}
	return &this
}

// NewBTParameterSpecNullableQuantity715WithDefaults instantiates a new BTParameterSpecNullableQuantity715 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTParameterSpecNullableQuantity715WithDefaults() *BTParameterSpecNullableQuantity715 {
	this := BTParameterSpecNullableQuantity715{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTParameterSpecNullableQuantity715) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecNullableQuantity715) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTParameterSpecNullableQuantity715) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTParameterSpecNullableQuantity715) SetBtType(v string) {
	o.BtType = &v
}

// GetQuantityType returns the QuantityType field value if set, zero value otherwise.
func (o *BTParameterSpecNullableQuantity715) GetQuantityType() string {
	if o == nil || o.QuantityType == nil {
		var ret string
		return ret
	}
	return *o.QuantityType
}

// GetQuantityTypeOk returns a tuple with the QuantityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecNullableQuantity715) GetQuantityTypeOk() (*string, bool) {
	if o == nil || o.QuantityType == nil {
		return nil, false
	}
	return o.QuantityType, true
}

// HasQuantityType returns a boolean if a field has been set.
func (o *BTParameterSpecNullableQuantity715) HasQuantityType() bool {
	if o != nil && o.QuantityType != nil {
		return true
	}

	return false
}

// SetQuantityType gets a reference to the given string and assigns it to the QuantityType field.
func (o *BTParameterSpecNullableQuantity715) SetQuantityType(v string) {
	o.QuantityType = &v
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *BTParameterSpecNullableQuantity715) GetRanges() []BTNullableQuantityRange1340 {
	if o == nil || o.Ranges == nil {
		var ret []BTNullableQuantityRange1340
		return ret
	}
	return *o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTParameterSpecNullableQuantity715) GetRangesOk() (*[]BTNullableQuantityRange1340, bool) {
	if o == nil || o.Ranges == nil {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *BTParameterSpecNullableQuantity715) HasRanges() bool {
	if o != nil && o.Ranges != nil {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []BTNullableQuantityRange1340 and assigns it to the Ranges field.
func (o *BTParameterSpecNullableQuantity715) SetRanges(v []BTNullableQuantityRange1340) {
	o.Ranges = &v
}

func (o BTParameterSpecNullableQuantity715) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTParameterSpec6, errBTParameterSpec6 := json.Marshal(o.BTParameterSpec6)
	if errBTParameterSpec6 != nil {
		return []byte{}, errBTParameterSpec6
	}
	errBTParameterSpec6 = json.Unmarshal([]byte(serializedBTParameterSpec6), &toSerialize)
	if errBTParameterSpec6 != nil {
		return []byte{}, errBTParameterSpec6
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.QuantityType != nil {
		toSerialize["quantityType"] = o.QuantityType
	}
	if o.Ranges != nil {
		toSerialize["ranges"] = o.Ranges
	}
	return json.Marshal(toSerialize)
}

type NullableBTParameterSpecNullableQuantity715 struct {
	value *BTParameterSpecNullableQuantity715
	isSet bool
}

func (v NullableBTParameterSpecNullableQuantity715) Get() *BTParameterSpecNullableQuantity715 {
	return v.value
}

func (v *NullableBTParameterSpecNullableQuantity715) Set(val *BTParameterSpecNullableQuantity715) {
	v.value = val
	v.isSet = true
}

func (v NullableBTParameterSpecNullableQuantity715) IsSet() bool {
	return v.isSet
}

func (v *NullableBTParameterSpecNullableQuantity715) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTParameterSpecNullableQuantity715(val *BTParameterSpecNullableQuantity715) *NullableBTParameterSpecNullableQuantity715 {
	return &NullableBTParameterSpecNullableQuantity715{value: val, isSet: true}
}

func (v NullableBTParameterSpecNullableQuantity715) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTParameterSpecNullableQuantity715) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
