/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTOwnerInfo struct for BTOwnerInfo
type BTOwnerInfo struct {
	AcceptOwnershipTransfer *bool `json:"acceptOwnershipTransfer,omitempty"`
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Image *string `json:"image,omitempty"`
	IsEnterpriseOwnedResource *bool `json:"isEnterpriseOwnedResource,omitempty"`
	JsonType *string `json:"jsonType,omitempty"`
	Name *string `json:"name,omitempty"`
	Type *int32 `json:"type,omitempty"`
	ViewRef *string `json:"viewRef,omitempty"`
}

// NewBTOwnerInfo instantiates a new BTOwnerInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTOwnerInfo() *BTOwnerInfo {
	this := BTOwnerInfo{}
	return &this
}

// NewBTOwnerInfoWithDefaults instantiates a new BTOwnerInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTOwnerInfoWithDefaults() *BTOwnerInfo {
	this := BTOwnerInfo{}
	return &this
}

// GetAcceptOwnershipTransfer returns the AcceptOwnershipTransfer field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetAcceptOwnershipTransfer() bool {
	if o == nil || o.AcceptOwnershipTransfer == nil {
		var ret bool
		return ret
	}
	return *o.AcceptOwnershipTransfer
}

// GetAcceptOwnershipTransferOk returns a tuple with the AcceptOwnershipTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetAcceptOwnershipTransferOk() (*bool, bool) {
	if o == nil || o.AcceptOwnershipTransfer == nil {
		return nil, false
	}
	return o.AcceptOwnershipTransfer, true
}

// HasAcceptOwnershipTransfer returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasAcceptOwnershipTransfer() bool {
	if o != nil && o.AcceptOwnershipTransfer != nil {
		return true
	}

	return false
}

// SetAcceptOwnershipTransfer gets a reference to the given bool and assigns it to the AcceptOwnershipTransfer field.
func (o *BTOwnerInfo) SetAcceptOwnershipTransfer(v bool) {
	o.AcceptOwnershipTransfer = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTOwnerInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTOwnerInfo) SetId(v string) {
	o.Id = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *BTOwnerInfo) SetImage(v string) {
	o.Image = &v
}

// GetIsEnterpriseOwnedResource returns the IsEnterpriseOwnedResource field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetIsEnterpriseOwnedResource() bool {
	if o == nil || o.IsEnterpriseOwnedResource == nil {
		var ret bool
		return ret
	}
	return *o.IsEnterpriseOwnedResource
}

// GetIsEnterpriseOwnedResourceOk returns a tuple with the IsEnterpriseOwnedResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetIsEnterpriseOwnedResourceOk() (*bool, bool) {
	if o == nil || o.IsEnterpriseOwnedResource == nil {
		return nil, false
	}
	return o.IsEnterpriseOwnedResource, true
}

// HasIsEnterpriseOwnedResource returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasIsEnterpriseOwnedResource() bool {
	if o != nil && o.IsEnterpriseOwnedResource != nil {
		return true
	}

	return false
}

// SetIsEnterpriseOwnedResource gets a reference to the given bool and assigns it to the IsEnterpriseOwnedResource field.
func (o *BTOwnerInfo) SetIsEnterpriseOwnedResource(v bool) {
	o.IsEnterpriseOwnedResource = &v
}

// GetJsonType returns the JsonType field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetJsonType() string {
	if o == nil || o.JsonType == nil {
		var ret string
		return ret
	}
	return *o.JsonType
}

// GetJsonTypeOk returns a tuple with the JsonType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetJsonTypeOk() (*string, bool) {
	if o == nil || o.JsonType == nil {
		return nil, false
	}
	return o.JsonType, true
}

// HasJsonType returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasJsonType() bool {
	if o != nil && o.JsonType != nil {
		return true
	}

	return false
}

// SetJsonType gets a reference to the given string and assigns it to the JsonType field.
func (o *BTOwnerInfo) SetJsonType(v string) {
	o.JsonType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTOwnerInfo) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *BTOwnerInfo) SetType(v int32) {
	o.Type = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTOwnerInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTOwnerInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTOwnerInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTOwnerInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

func (o BTOwnerInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AcceptOwnershipTransfer != nil {
		toSerialize["acceptOwnershipTransfer"] = o.AcceptOwnershipTransfer
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.IsEnterpriseOwnedResource != nil {
		toSerialize["isEnterpriseOwnedResource"] = o.IsEnterpriseOwnedResource
	}
	if o.JsonType != nil {
		toSerialize["jsonType"] = o.JsonType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	return json.Marshal(toSerialize)
}

type NullableBTOwnerInfo struct {
	value *BTOwnerInfo
	isSet bool
}

func (v NullableBTOwnerInfo) Get() *BTOwnerInfo {
	return v.value
}

func (v *NullableBTOwnerInfo) Set(val *BTOwnerInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTOwnerInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTOwnerInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTOwnerInfo(val *BTOwnerInfo) *NullableBTOwnerInfo {
	return &NullableBTOwnerInfo{value: val, isSet: true}
}

func (v NullableBTOwnerInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTOwnerInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
