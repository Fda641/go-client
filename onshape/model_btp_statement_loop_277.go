/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTPStatementLoop277 struct for BTPStatementLoop277
type BTPStatementLoop277 struct {
	BTPStatement269
	BtType *string `json:"btType,omitempty"`
	Body *BTPStatement269 `json:"body,omitempty"`
	SpaceAfterLoopType *BTPSpace10 `json:"spaceAfterLoopType,omitempty"`
}

// NewBTPStatementLoop277 instantiates a new BTPStatementLoop277 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPStatementLoop277() *BTPStatementLoop277 {
	this := BTPStatementLoop277{}
	return &this
}

// NewBTPStatementLoop277WithDefaults instantiates a new BTPStatementLoop277 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPStatementLoop277WithDefaults() *BTPStatementLoop277 {
	this := BTPStatementLoop277{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPStatementLoop277) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementLoop277) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPStatementLoop277) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPStatementLoop277) SetBtType(v string) {
	o.BtType = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *BTPStatementLoop277) GetBody() BTPStatement269 {
	if o == nil || o.Body == nil {
		var ret BTPStatement269
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementLoop277) GetBodyOk() (*BTPStatement269, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *BTPStatementLoop277) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given BTPStatement269 and assigns it to the Body field.
func (o *BTPStatementLoop277) SetBody(v BTPStatement269) {
	o.Body = &v
}

// GetSpaceAfterLoopType returns the SpaceAfterLoopType field value if set, zero value otherwise.
func (o *BTPStatementLoop277) GetSpaceAfterLoopType() BTPSpace10 {
	if o == nil || o.SpaceAfterLoopType == nil {
		var ret BTPSpace10
		return ret
	}
	return *o.SpaceAfterLoopType
}

// GetSpaceAfterLoopTypeOk returns a tuple with the SpaceAfterLoopType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPStatementLoop277) GetSpaceAfterLoopTypeOk() (*BTPSpace10, bool) {
	if o == nil || o.SpaceAfterLoopType == nil {
		return nil, false
	}
	return o.SpaceAfterLoopType, true
}

// HasSpaceAfterLoopType returns a boolean if a field has been set.
func (o *BTPStatementLoop277) HasSpaceAfterLoopType() bool {
	if o != nil && o.SpaceAfterLoopType != nil {
		return true
	}

	return false
}

// SetSpaceAfterLoopType gets a reference to the given BTPSpace10 and assigns it to the SpaceAfterLoopType field.
func (o *BTPStatementLoop277) SetSpaceAfterLoopType(v BTPSpace10) {
	o.SpaceAfterLoopType = &v
}

func (o BTPStatementLoop277) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTPStatement269, errBTPStatement269 := json.Marshal(o.BTPStatement269)
	if errBTPStatement269 != nil {
		return []byte{}, errBTPStatement269
	}
	errBTPStatement269 = json.Unmarshal([]byte(serializedBTPStatement269), &toSerialize)
	if errBTPStatement269 != nil {
		return []byte{}, errBTPStatement269
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.SpaceAfterLoopType != nil {
		toSerialize["spaceAfterLoopType"] = o.SpaceAfterLoopType
	}
	return json.Marshal(toSerialize)
}

type NullableBTPStatementLoop277 struct {
	value *BTPStatementLoop277
	isSet bool
}

func (v NullableBTPStatementLoop277) Get() *BTPStatementLoop277 {
	return v.value
}

func (v *NullableBTPStatementLoop277) Set(val *BTPStatementLoop277) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPStatementLoop277) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPStatementLoop277) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPStatementLoop277(val *BTPStatementLoop277) *NullableBTPStatementLoop277 {
	return &NullableBTPStatementLoop277{value: val, isSet: true}
}

func (v NullableBTPStatementLoop277) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPStatementLoop277) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
