/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMParameterQueryList148 struct for BTMParameterQueryList148
type BTMParameterQueryList148 struct {
	BTMParameter1
	BtType *string `json:"btType,omitempty"`
	Queries *[]BTMIndividualQueryBase139 `json:"queries,omitempty"`
}

// NewBTMParameterQueryList148 instantiates a new BTMParameterQueryList148 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMParameterQueryList148() *BTMParameterQueryList148 {
	this := BTMParameterQueryList148{}
	return &this
}

// NewBTMParameterQueryList148WithDefaults instantiates a new BTMParameterQueryList148 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMParameterQueryList148WithDefaults() *BTMParameterQueryList148 {
	this := BTMParameterQueryList148{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMParameterQueryList148) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterQueryList148) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMParameterQueryList148) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMParameterQueryList148) SetBtType(v string) {
	o.BtType = &v
}

// GetQueries returns the Queries field value if set, zero value otherwise.
func (o *BTMParameterQueryList148) GetQueries() []BTMIndividualQueryBase139 {
	if o == nil || o.Queries == nil {
		var ret []BTMIndividualQueryBase139
		return ret
	}
	return *o.Queries
}

// GetQueriesOk returns a tuple with the Queries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterQueryList148) GetQueriesOk() (*[]BTMIndividualQueryBase139, bool) {
	if o == nil || o.Queries == nil {
		return nil, false
	}
	return o.Queries, true
}

// HasQueries returns a boolean if a field has been set.
func (o *BTMParameterQueryList148) HasQueries() bool {
	if o != nil && o.Queries != nil {
		return true
	}

	return false
}

// SetQueries gets a reference to the given []BTMIndividualQueryBase139 and assigns it to the Queries field.
func (o *BTMParameterQueryList148) SetQueries(v []BTMIndividualQueryBase139) {
	o.Queries = &v
}

func (o BTMParameterQueryList148) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMParameter1, errBTMParameter1 := json.Marshal(o.BTMParameter1)
	if errBTMParameter1 != nil {
		return []byte{}, errBTMParameter1
	}
	errBTMParameter1 = json.Unmarshal([]byte(serializedBTMParameter1), &toSerialize)
	if errBTMParameter1 != nil {
		return []byte{}, errBTMParameter1
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Queries != nil {
		toSerialize["queries"] = o.Queries
	}
	return json.Marshal(toSerialize)
}

type NullableBTMParameterQueryList148 struct {
	value *BTMParameterQueryList148
	isSet bool
}

func (v NullableBTMParameterQueryList148) Get() *BTMParameterQueryList148 {
	return v.value
}

func (v *NullableBTMParameterQueryList148) Set(val *BTMParameterQueryList148) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMParameterQueryList148) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMParameterQueryList148) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMParameterQueryList148(val *BTMParameterQueryList148) *NullableBTMParameterQueryList148 {
	return &NullableBTMParameterQueryList148{value: val, isSet: true}
}

func (v NullableBTMParameterQueryList148) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMParameterQueryList148) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
