/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMParameterReferenceCADImport2016 struct for BTMParameterReferenceCADImport2016
type BTMParameterReferenceCADImport2016 struct {
	BTMParameterReferenceBlob3281
	BtType *string `json:"btType,omitempty"`
}

// NewBTMParameterReferenceCADImport2016 instantiates a new BTMParameterReferenceCADImport2016 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMParameterReferenceCADImport2016() *BTMParameterReferenceCADImport2016 {
	this := BTMParameterReferenceCADImport2016{}
	return &this
}

// NewBTMParameterReferenceCADImport2016WithDefaults instantiates a new BTMParameterReferenceCADImport2016 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMParameterReferenceCADImport2016WithDefaults() *BTMParameterReferenceCADImport2016 {
	this := BTMParameterReferenceCADImport2016{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTMParameterReferenceCADImport2016) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMParameterReferenceCADImport2016) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTMParameterReferenceCADImport2016) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTMParameterReferenceCADImport2016) SetBtType(v string) {
	o.BtType = &v
}

func (o BTMParameterReferenceCADImport2016) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTMParameterReferenceBlob3281, errBTMParameterReferenceBlob3281 := json.Marshal(o.BTMParameterReferenceBlob3281)
	if errBTMParameterReferenceBlob3281 != nil {
		return []byte{}, errBTMParameterReferenceBlob3281
	}
	errBTMParameterReferenceBlob3281 = json.Unmarshal([]byte(serializedBTMParameterReferenceBlob3281), &toSerialize)
	if errBTMParameterReferenceBlob3281 != nil {
		return []byte{}, errBTMParameterReferenceBlob3281
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	return json.Marshal(toSerialize)
}

type NullableBTMParameterReferenceCADImport2016 struct {
	value *BTMParameterReferenceCADImport2016
	isSet bool
}

func (v NullableBTMParameterReferenceCADImport2016) Get() *BTMParameterReferenceCADImport2016 {
	return v.value
}

func (v *NullableBTMParameterReferenceCADImport2016) Set(val *BTMParameterReferenceCADImport2016) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMParameterReferenceCADImport2016) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMParameterReferenceCADImport2016) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMParameterReferenceCADImport2016(val *BTMParameterReferenceCADImport2016) *NullableBTMParameterReferenceCADImport2016 {
	return &NullableBTMParameterReferenceCADImport2016{value: val, isSet: true}
}

func (v NullableBTMParameterReferenceCADImport2016) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMParameterReferenceCADImport2016) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
