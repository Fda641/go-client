/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTSMBendTableRowMetadata1705 struct for BTSMBendTableRowMetadata1705
type BTSMBendTableRowMetadata1705 struct {
	BTBaseSMJointTableRowMetadata2232
	BtType *string `json:"btType,omitempty"`
	IsJointTypeEditable *bool `json:"isJointTypeEditable,omitempty"`
}

// NewBTSMBendTableRowMetadata1705 instantiates a new BTSMBendTableRowMetadata1705 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTSMBendTableRowMetadata1705() *BTSMBendTableRowMetadata1705 {
	this := BTSMBendTableRowMetadata1705{}
	return &this
}

// NewBTSMBendTableRowMetadata1705WithDefaults instantiates a new BTSMBendTableRowMetadata1705 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTSMBendTableRowMetadata1705WithDefaults() *BTSMBendTableRowMetadata1705 {
	this := BTSMBendTableRowMetadata1705{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTSMBendTableRowMetadata1705) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTSMBendTableRowMetadata1705) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTSMBendTableRowMetadata1705) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTSMBendTableRowMetadata1705) SetBtType(v string) {
	o.BtType = &v
}

// GetIsJointTypeEditable returns the IsJointTypeEditable field value if set, zero value otherwise.
func (o *BTSMBendTableRowMetadata1705) GetIsJointTypeEditable() bool {
	if o == nil || o.IsJointTypeEditable == nil {
		var ret bool
		return ret
	}
	return *o.IsJointTypeEditable
}

// GetIsJointTypeEditableOk returns a tuple with the IsJointTypeEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTSMBendTableRowMetadata1705) GetIsJointTypeEditableOk() (*bool, bool) {
	if o == nil || o.IsJointTypeEditable == nil {
		return nil, false
	}
	return o.IsJointTypeEditable, true
}

// HasIsJointTypeEditable returns a boolean if a field has been set.
func (o *BTSMBendTableRowMetadata1705) HasIsJointTypeEditable() bool {
	if o != nil && o.IsJointTypeEditable != nil {
		return true
	}

	return false
}

// SetIsJointTypeEditable gets a reference to the given bool and assigns it to the IsJointTypeEditable field.
func (o *BTSMBendTableRowMetadata1705) SetIsJointTypeEditable(v bool) {
	o.IsJointTypeEditable = &v
}

func (o BTSMBendTableRowMetadata1705) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTBaseSMJointTableRowMetadata2232, errBTBaseSMJointTableRowMetadata2232 := json.Marshal(o.BTBaseSMJointTableRowMetadata2232)
	if errBTBaseSMJointTableRowMetadata2232 != nil {
		return []byte{}, errBTBaseSMJointTableRowMetadata2232
	}
	errBTBaseSMJointTableRowMetadata2232 = json.Unmarshal([]byte(serializedBTBaseSMJointTableRowMetadata2232), &toSerialize)
	if errBTBaseSMJointTableRowMetadata2232 != nil {
		return []byte{}, errBTBaseSMJointTableRowMetadata2232
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.IsJointTypeEditable != nil {
		toSerialize["isJointTypeEditable"] = o.IsJointTypeEditable
	}
	return json.Marshal(toSerialize)
}

type NullableBTSMBendTableRowMetadata1705 struct {
	value *BTSMBendTableRowMetadata1705
	isSet bool
}

func (v NullableBTSMBendTableRowMetadata1705) Get() *BTSMBendTableRowMetadata1705 {
	return v.value
}

func (v *NullableBTSMBendTableRowMetadata1705) Set(val *BTSMBendTableRowMetadata1705) {
	v.value = val
	v.isSet = true
}

func (v NullableBTSMBendTableRowMetadata1705) IsSet() bool {
	return v.isSet
}

func (v *NullableBTSMBendTableRowMetadata1705) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTSMBendTableRowMetadata1705(val *BTSMBendTableRowMetadata1705) *NullableBTSMBendTableRowMetadata1705 {
	return &NullableBTSMBendTableRowMetadata1705{value: val, isSet: true}
}

func (v NullableBTSMBendTableRowMetadata1705) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTSMBendTableRowMetadata1705) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
