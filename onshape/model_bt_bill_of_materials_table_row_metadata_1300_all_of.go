/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTBillOfMaterialsTableRowMetadata1300AllOf struct for BTBillOfMaterialsTableRowMetadata1300AllOf
type BTBillOfMaterialsTableRowMetadata1300AllOf struct {
	BtType *string `json:"btType,omitempty"`
	CrossHighlightData *BTTableAssemblyCrossHighlightData2675 `json:"crossHighlightData,omitempty"`
	CrossHighlightDataIfAny *BTTableAssemblyCrossHighlightData2675 `json:"crossHighlightDataIfAny,omitempty"`
}

// NewBTBillOfMaterialsTableRowMetadata1300AllOf instantiates a new BTBillOfMaterialsTableRowMetadata1300AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTBillOfMaterialsTableRowMetadata1300AllOf() *BTBillOfMaterialsTableRowMetadata1300AllOf {
	this := BTBillOfMaterialsTableRowMetadata1300AllOf{}
	return &this
}

// NewBTBillOfMaterialsTableRowMetadata1300AllOfWithDefaults instantiates a new BTBillOfMaterialsTableRowMetadata1300AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTBillOfMaterialsTableRowMetadata1300AllOfWithDefaults() *BTBillOfMaterialsTableRowMetadata1300AllOf {
	this := BTBillOfMaterialsTableRowMetadata1300AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetCrossHighlightData returns the CrossHighlightData field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) GetCrossHighlightData() BTTableAssemblyCrossHighlightData2675 {
	if o == nil || o.CrossHighlightData == nil {
		var ret BTTableAssemblyCrossHighlightData2675
		return ret
	}
	return *o.CrossHighlightData
}

// GetCrossHighlightDataOk returns a tuple with the CrossHighlightData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) GetCrossHighlightDataOk() (*BTTableAssemblyCrossHighlightData2675, bool) {
	if o == nil || o.CrossHighlightData == nil {
		return nil, false
	}
	return o.CrossHighlightData, true
}

// HasCrossHighlightData returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) HasCrossHighlightData() bool {
	if o != nil && o.CrossHighlightData != nil {
		return true
	}

	return false
}

// SetCrossHighlightData gets a reference to the given BTTableAssemblyCrossHighlightData2675 and assigns it to the CrossHighlightData field.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) SetCrossHighlightData(v BTTableAssemblyCrossHighlightData2675) {
	o.CrossHighlightData = &v
}

// GetCrossHighlightDataIfAny returns the CrossHighlightDataIfAny field value if set, zero value otherwise.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) GetCrossHighlightDataIfAny() BTTableAssemblyCrossHighlightData2675 {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		var ret BTTableAssemblyCrossHighlightData2675
		return ret
	}
	return *o.CrossHighlightDataIfAny
}

// GetCrossHighlightDataIfAnyOk returns a tuple with the CrossHighlightDataIfAny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) GetCrossHighlightDataIfAnyOk() (*BTTableAssemblyCrossHighlightData2675, bool) {
	if o == nil || o.CrossHighlightDataIfAny == nil {
		return nil, false
	}
	return o.CrossHighlightDataIfAny, true
}

// HasCrossHighlightDataIfAny returns a boolean if a field has been set.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) HasCrossHighlightDataIfAny() bool {
	if o != nil && o.CrossHighlightDataIfAny != nil {
		return true
	}

	return false
}

// SetCrossHighlightDataIfAny gets a reference to the given BTTableAssemblyCrossHighlightData2675 and assigns it to the CrossHighlightDataIfAny field.
func (o *BTBillOfMaterialsTableRowMetadata1300AllOf) SetCrossHighlightDataIfAny(v BTTableAssemblyCrossHighlightData2675) {
	o.CrossHighlightDataIfAny = &v
}

func (o BTBillOfMaterialsTableRowMetadata1300AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.CrossHighlightData != nil {
		toSerialize["crossHighlightData"] = o.CrossHighlightData
	}
	if o.CrossHighlightDataIfAny != nil {
		toSerialize["crossHighlightDataIfAny"] = o.CrossHighlightDataIfAny
	}
	return json.Marshal(toSerialize)
}

type NullableBTBillOfMaterialsTableRowMetadata1300AllOf struct {
	value *BTBillOfMaterialsTableRowMetadata1300AllOf
	isSet bool
}

func (v NullableBTBillOfMaterialsTableRowMetadata1300AllOf) Get() *BTBillOfMaterialsTableRowMetadata1300AllOf {
	return v.value
}

func (v *NullableBTBillOfMaterialsTableRowMetadata1300AllOf) Set(val *BTBillOfMaterialsTableRowMetadata1300AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTBillOfMaterialsTableRowMetadata1300AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTBillOfMaterialsTableRowMetadata1300AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTBillOfMaterialsTableRowMetadata1300AllOf(val *BTBillOfMaterialsTableRowMetadata1300AllOf) *NullableBTBillOfMaterialsTableRowMetadata1300AllOf {
	return &NullableBTBillOfMaterialsTableRowMetadata1300AllOf{value: val, isSet: true}
}

func (v NullableBTBillOfMaterialsTableRowMetadata1300AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTBillOfMaterialsTableRowMetadata1300AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
