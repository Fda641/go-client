/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTFSValueMap2062 struct for BTFSValueMap2062
type BTFSValueMap2062 struct {
	ConfigurationValueString *string `json:"configurationValueString,omitempty"`
	FsvaluesKeyedByStrings *map[string]BTFSValue1888 `json:"fsvaluesKeyedByStrings,omitempty"`
	StandardTypeName *string `json:"standardTypeName,omitempty"`
	TypeTag *string `json:"typeTag,omitempty"`
	Value *[]BTFSValueMapEntry2077 `json:"value,omitempty"`
	ValueObject *map[string]map[string]interface{} `json:"valueObject,omitempty"`
}

// NewBTFSValueMap2062 instantiates a new BTFSValueMap2062 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTFSValueMap2062() *BTFSValueMap2062 {
	this := BTFSValueMap2062{}
	return &this
}

// NewBTFSValueMap2062WithDefaults instantiates a new BTFSValueMap2062 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTFSValueMap2062WithDefaults() *BTFSValueMap2062 {
	this := BTFSValueMap2062{}
	return &this
}

// GetConfigurationValueString returns the ConfigurationValueString field value if set, zero value otherwise.
func (o *BTFSValueMap2062) GetConfigurationValueString() string {
	if o == nil || o.ConfigurationValueString == nil {
		var ret string
		return ret
	}
	return *o.ConfigurationValueString
}

// GetConfigurationValueStringOk returns a tuple with the ConfigurationValueString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTFSValueMap2062) GetConfigurationValueStringOk() (*string, bool) {
	if o == nil || o.ConfigurationValueString == nil {
		return nil, false
	}
	return o.ConfigurationValueString, true
}

// HasConfigurationValueString returns a boolean if a field has been set.
func (o *BTFSValueMap2062) HasConfigurationValueString() bool {
	if o != nil && o.ConfigurationValueString != nil {
		return true
	}

	return false
}

// SetConfigurationValueString gets a reference to the given string and assigns it to the ConfigurationValueString field.
func (o *BTFSValueMap2062) SetConfigurationValueString(v string) {
	o.ConfigurationValueString = &v
}

// GetFsvaluesKeyedByStrings returns the FsvaluesKeyedByStrings field value if set, zero value otherwise.
func (o *BTFSValueMap2062) GetFsvaluesKeyedByStrings() map[string]BTFSValue1888 {
	if o == nil || o.FsvaluesKeyedByStrings == nil {
		var ret map[string]BTFSValue1888
		return ret
	}
	return *o.FsvaluesKeyedByStrings
}

// GetFsvaluesKeyedByStringsOk returns a tuple with the FsvaluesKeyedByStrings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTFSValueMap2062) GetFsvaluesKeyedByStringsOk() (*map[string]BTFSValue1888, bool) {
	if o == nil || o.FsvaluesKeyedByStrings == nil {
		return nil, false
	}
	return o.FsvaluesKeyedByStrings, true
}

// HasFsvaluesKeyedByStrings returns a boolean if a field has been set.
func (o *BTFSValueMap2062) HasFsvaluesKeyedByStrings() bool {
	if o != nil && o.FsvaluesKeyedByStrings != nil {
		return true
	}

	return false
}

// SetFsvaluesKeyedByStrings gets a reference to the given map[string]BTFSValue1888 and assigns it to the FsvaluesKeyedByStrings field.
func (o *BTFSValueMap2062) SetFsvaluesKeyedByStrings(v map[string]BTFSValue1888) {
	o.FsvaluesKeyedByStrings = &v
}

// GetStandardTypeName returns the StandardTypeName field value if set, zero value otherwise.
func (o *BTFSValueMap2062) GetStandardTypeName() string {
	if o == nil || o.StandardTypeName == nil {
		var ret string
		return ret
	}
	return *o.StandardTypeName
}

// GetStandardTypeNameOk returns a tuple with the StandardTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTFSValueMap2062) GetStandardTypeNameOk() (*string, bool) {
	if o == nil || o.StandardTypeName == nil {
		return nil, false
	}
	return o.StandardTypeName, true
}

// HasStandardTypeName returns a boolean if a field has been set.
func (o *BTFSValueMap2062) HasStandardTypeName() bool {
	if o != nil && o.StandardTypeName != nil {
		return true
	}

	return false
}

// SetStandardTypeName gets a reference to the given string and assigns it to the StandardTypeName field.
func (o *BTFSValueMap2062) SetStandardTypeName(v string) {
	o.StandardTypeName = &v
}

// GetTypeTag returns the TypeTag field value if set, zero value otherwise.
func (o *BTFSValueMap2062) GetTypeTag() string {
	if o == nil || o.TypeTag == nil {
		var ret string
		return ret
	}
	return *o.TypeTag
}

// GetTypeTagOk returns a tuple with the TypeTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTFSValueMap2062) GetTypeTagOk() (*string, bool) {
	if o == nil || o.TypeTag == nil {
		return nil, false
	}
	return o.TypeTag, true
}

// HasTypeTag returns a boolean if a field has been set.
func (o *BTFSValueMap2062) HasTypeTag() bool {
	if o != nil && o.TypeTag != nil {
		return true
	}

	return false
}

// SetTypeTag gets a reference to the given string and assigns it to the TypeTag field.
func (o *BTFSValueMap2062) SetTypeTag(v string) {
	o.TypeTag = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *BTFSValueMap2062) GetValue() []BTFSValueMapEntry2077 {
	if o == nil || o.Value == nil {
		var ret []BTFSValueMapEntry2077
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTFSValueMap2062) GetValueOk() (*[]BTFSValueMapEntry2077, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *BTFSValueMap2062) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given []BTFSValueMapEntry2077 and assigns it to the Value field.
func (o *BTFSValueMap2062) SetValue(v []BTFSValueMapEntry2077) {
	o.Value = &v
}

// GetValueObject returns the ValueObject field value if set, zero value otherwise.
func (o *BTFSValueMap2062) GetValueObject() map[string]map[string]interface{} {
	if o == nil || o.ValueObject == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.ValueObject
}

// GetValueObjectOk returns a tuple with the ValueObject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTFSValueMap2062) GetValueObjectOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.ValueObject == nil {
		return nil, false
	}
	return o.ValueObject, true
}

// HasValueObject returns a boolean if a field has been set.
func (o *BTFSValueMap2062) HasValueObject() bool {
	if o != nil && o.ValueObject != nil {
		return true
	}

	return false
}

// SetValueObject gets a reference to the given map[string]map[string]interface{} and assigns it to the ValueObject field.
func (o *BTFSValueMap2062) SetValueObject(v map[string]map[string]interface{}) {
	o.ValueObject = &v
}

func (o BTFSValueMap2062) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigurationValueString != nil {
		toSerialize["configurationValueString"] = o.ConfigurationValueString
	}
	if o.FsvaluesKeyedByStrings != nil {
		toSerialize["fsvaluesKeyedByStrings"] = o.FsvaluesKeyedByStrings
	}
	if o.StandardTypeName != nil {
		toSerialize["standardTypeName"] = o.StandardTypeName
	}
	if o.TypeTag != nil {
		toSerialize["typeTag"] = o.TypeTag
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ValueObject != nil {
		toSerialize["valueObject"] = o.ValueObject
	}
	return json.Marshal(toSerialize)
}

type NullableBTFSValueMap2062 struct {
	value *BTFSValueMap2062
	isSet bool
}

func (v NullableBTFSValueMap2062) Get() *BTFSValueMap2062 {
	return v.value
}

func (v *NullableBTFSValueMap2062) Set(val *BTFSValueMap2062) {
	v.value = val
	v.isSet = true
}

func (v NullableBTFSValueMap2062) IsSet() bool {
	return v.isSet
}

func (v *NullableBTFSValueMap2062) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTFSValueMap2062(val *BTFSValueMap2062) *NullableBTFSValueMap2062 {
	return &NullableBTFSValueMap2062{value: val, isSet: true}
}

func (v NullableBTFSValueMap2062) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTFSValueMap2062) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
