/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTUnitsMaximumDisplayPrecisionInfo struct for BTUnitsMaximumDisplayPrecisionInfo
type BTUnitsMaximumDisplayPrecisionInfo struct {
	UnitsDisplayPrecision *map[string]int32 `json:"unitsDisplayPrecision,omitempty"`
}

// NewBTUnitsMaximumDisplayPrecisionInfo instantiates a new BTUnitsMaximumDisplayPrecisionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTUnitsMaximumDisplayPrecisionInfo() *BTUnitsMaximumDisplayPrecisionInfo {
	this := BTUnitsMaximumDisplayPrecisionInfo{}
	return &this
}

// NewBTUnitsMaximumDisplayPrecisionInfoWithDefaults instantiates a new BTUnitsMaximumDisplayPrecisionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTUnitsMaximumDisplayPrecisionInfoWithDefaults() *BTUnitsMaximumDisplayPrecisionInfo {
	this := BTUnitsMaximumDisplayPrecisionInfo{}
	return &this
}

// GetUnitsDisplayPrecision returns the UnitsDisplayPrecision field value if set, zero value otherwise.
func (o *BTUnitsMaximumDisplayPrecisionInfo) GetUnitsDisplayPrecision() map[string]int32 {
	if o == nil || o.UnitsDisplayPrecision == nil {
		var ret map[string]int32
		return ret
	}
	return *o.UnitsDisplayPrecision
}

// GetUnitsDisplayPrecisionOk returns a tuple with the UnitsDisplayPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTUnitsMaximumDisplayPrecisionInfo) GetUnitsDisplayPrecisionOk() (*map[string]int32, bool) {
	if o == nil || o.UnitsDisplayPrecision == nil {
		return nil, false
	}
	return o.UnitsDisplayPrecision, true
}

// HasUnitsDisplayPrecision returns a boolean if a field has been set.
func (o *BTUnitsMaximumDisplayPrecisionInfo) HasUnitsDisplayPrecision() bool {
	if o != nil && o.UnitsDisplayPrecision != nil {
		return true
	}

	return false
}

// SetUnitsDisplayPrecision gets a reference to the given map[string]int32 and assigns it to the UnitsDisplayPrecision field.
func (o *BTUnitsMaximumDisplayPrecisionInfo) SetUnitsDisplayPrecision(v map[string]int32) {
	o.UnitsDisplayPrecision = &v
}

func (o BTUnitsMaximumDisplayPrecisionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UnitsDisplayPrecision != nil {
		toSerialize["unitsDisplayPrecision"] = o.UnitsDisplayPrecision
	}
	return json.Marshal(toSerialize)
}

type NullableBTUnitsMaximumDisplayPrecisionInfo struct {
	value *BTUnitsMaximumDisplayPrecisionInfo
	isSet bool
}

func (v NullableBTUnitsMaximumDisplayPrecisionInfo) Get() *BTUnitsMaximumDisplayPrecisionInfo {
	return v.value
}

func (v *NullableBTUnitsMaximumDisplayPrecisionInfo) Set(val *BTUnitsMaximumDisplayPrecisionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTUnitsMaximumDisplayPrecisionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTUnitsMaximumDisplayPrecisionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTUnitsMaximumDisplayPrecisionInfo(val *BTUnitsMaximumDisplayPrecisionInfo) *NullableBTUnitsMaximumDisplayPrecisionInfo {
	return &NullableBTUnitsMaximumDisplayPrecisionInfo{value: val, isSet: true}
}

func (v NullableBTUnitsMaximumDisplayPrecisionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTUnitsMaximumDisplayPrecisionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
