/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTStringFormatMatchPattern2446AllOf struct for BTStringFormatMatchPattern2446AllOf
type BTStringFormatMatchPattern2446AllOf struct {
	BtType *string `json:"btType,omitempty"`
	RegExpToMatch *string `json:"regExpToMatch,omitempty"`
}

// NewBTStringFormatMatchPattern2446AllOf instantiates a new BTStringFormatMatchPattern2446AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTStringFormatMatchPattern2446AllOf() *BTStringFormatMatchPattern2446AllOf {
	this := BTStringFormatMatchPattern2446AllOf{}
	return &this
}

// NewBTStringFormatMatchPattern2446AllOfWithDefaults instantiates a new BTStringFormatMatchPattern2446AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTStringFormatMatchPattern2446AllOfWithDefaults() *BTStringFormatMatchPattern2446AllOf {
	this := BTStringFormatMatchPattern2446AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTStringFormatMatchPattern2446AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTStringFormatMatchPattern2446AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTStringFormatMatchPattern2446AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTStringFormatMatchPattern2446AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetRegExpToMatch returns the RegExpToMatch field value if set, zero value otherwise.
func (o *BTStringFormatMatchPattern2446AllOf) GetRegExpToMatch() string {
	if o == nil || o.RegExpToMatch == nil {
		var ret string
		return ret
	}
	return *o.RegExpToMatch
}

// GetRegExpToMatchOk returns a tuple with the RegExpToMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTStringFormatMatchPattern2446AllOf) GetRegExpToMatchOk() (*string, bool) {
	if o == nil || o.RegExpToMatch == nil {
		return nil, false
	}
	return o.RegExpToMatch, true
}

// HasRegExpToMatch returns a boolean if a field has been set.
func (o *BTStringFormatMatchPattern2446AllOf) HasRegExpToMatch() bool {
	if o != nil && o.RegExpToMatch != nil {
		return true
	}

	return false
}

// SetRegExpToMatch gets a reference to the given string and assigns it to the RegExpToMatch field.
func (o *BTStringFormatMatchPattern2446AllOf) SetRegExpToMatch(v string) {
	o.RegExpToMatch = &v
}

func (o BTStringFormatMatchPattern2446AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.RegExpToMatch != nil {
		toSerialize["regExpToMatch"] = o.RegExpToMatch
	}
	return json.Marshal(toSerialize)
}

type NullableBTStringFormatMatchPattern2446AllOf struct {
	value *BTStringFormatMatchPattern2446AllOf
	isSet bool
}

func (v NullableBTStringFormatMatchPattern2446AllOf) Get() *BTStringFormatMatchPattern2446AllOf {
	return v.value
}

func (v *NullableBTStringFormatMatchPattern2446AllOf) Set(val *BTStringFormatMatchPattern2446AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTStringFormatMatchPattern2446AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTStringFormatMatchPattern2446AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTStringFormatMatchPattern2446AllOf(val *BTStringFormatMatchPattern2446AllOf) *NullableBTStringFormatMatchPattern2446AllOf {
	return &NullableBTStringFormatMatchPattern2446AllOf{value: val, isSet: true}
}

func (v NullableBTStringFormatMatchPattern2446AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTStringFormatMatchPattern2446AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
