/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTCurveGeometrySpline118AllOf struct for BTCurveGeometrySpline118AllOf
type BTCurveGeometrySpline118AllOf struct {
	BtType *string `json:"btType,omitempty"`
	ControlPointCount *int32 `json:"controlPointCount,omitempty"`
	ControlPoints *[]float64 `json:"controlPoints,omitempty"`
	Degree *int32 `json:"degree,omitempty"`
	IsPeriodic *bool `json:"isPeriodic,omitempty"`
	IsRational *bool `json:"isRational,omitempty"`
	Knots *[]float64 `json:"knots,omitempty"`
}

// NewBTCurveGeometrySpline118AllOf instantiates a new BTCurveGeometrySpline118AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTCurveGeometrySpline118AllOf() *BTCurveGeometrySpline118AllOf {
	this := BTCurveGeometrySpline118AllOf{}
	return &this
}

// NewBTCurveGeometrySpline118AllOfWithDefaults instantiates a new BTCurveGeometrySpline118AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTCurveGeometrySpline118AllOfWithDefaults() *BTCurveGeometrySpline118AllOf {
	this := BTCurveGeometrySpline118AllOf{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTCurveGeometrySpline118AllOf) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometrySpline118AllOf) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTCurveGeometrySpline118AllOf) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTCurveGeometrySpline118AllOf) SetBtType(v string) {
	o.BtType = &v
}

// GetControlPointCount returns the ControlPointCount field value if set, zero value otherwise.
func (o *BTCurveGeometrySpline118AllOf) GetControlPointCount() int32 {
	if o == nil || o.ControlPointCount == nil {
		var ret int32
		return ret
	}
	return *o.ControlPointCount
}

// GetControlPointCountOk returns a tuple with the ControlPointCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometrySpline118AllOf) GetControlPointCountOk() (*int32, bool) {
	if o == nil || o.ControlPointCount == nil {
		return nil, false
	}
	return o.ControlPointCount, true
}

// HasControlPointCount returns a boolean if a field has been set.
func (o *BTCurveGeometrySpline118AllOf) HasControlPointCount() bool {
	if o != nil && o.ControlPointCount != nil {
		return true
	}

	return false
}

// SetControlPointCount gets a reference to the given int32 and assigns it to the ControlPointCount field.
func (o *BTCurveGeometrySpline118AllOf) SetControlPointCount(v int32) {
	o.ControlPointCount = &v
}

// GetControlPoints returns the ControlPoints field value if set, zero value otherwise.
func (o *BTCurveGeometrySpline118AllOf) GetControlPoints() []float64 {
	if o == nil || o.ControlPoints == nil {
		var ret []float64
		return ret
	}
	return *o.ControlPoints
}

// GetControlPointsOk returns a tuple with the ControlPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometrySpline118AllOf) GetControlPointsOk() (*[]float64, bool) {
	if o == nil || o.ControlPoints == nil {
		return nil, false
	}
	return o.ControlPoints, true
}

// HasControlPoints returns a boolean if a field has been set.
func (o *BTCurveGeometrySpline118AllOf) HasControlPoints() bool {
	if o != nil && o.ControlPoints != nil {
		return true
	}

	return false
}

// SetControlPoints gets a reference to the given []float64 and assigns it to the ControlPoints field.
func (o *BTCurveGeometrySpline118AllOf) SetControlPoints(v []float64) {
	o.ControlPoints = &v
}

// GetDegree returns the Degree field value if set, zero value otherwise.
func (o *BTCurveGeometrySpline118AllOf) GetDegree() int32 {
	if o == nil || o.Degree == nil {
		var ret int32
		return ret
	}
	return *o.Degree
}

// GetDegreeOk returns a tuple with the Degree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometrySpline118AllOf) GetDegreeOk() (*int32, bool) {
	if o == nil || o.Degree == nil {
		return nil, false
	}
	return o.Degree, true
}

// HasDegree returns a boolean if a field has been set.
func (o *BTCurveGeometrySpline118AllOf) HasDegree() bool {
	if o != nil && o.Degree != nil {
		return true
	}

	return false
}

// SetDegree gets a reference to the given int32 and assigns it to the Degree field.
func (o *BTCurveGeometrySpline118AllOf) SetDegree(v int32) {
	o.Degree = &v
}

// GetIsPeriodic returns the IsPeriodic field value if set, zero value otherwise.
func (o *BTCurveGeometrySpline118AllOf) GetIsPeriodic() bool {
	if o == nil || o.IsPeriodic == nil {
		var ret bool
		return ret
	}
	return *o.IsPeriodic
}

// GetIsPeriodicOk returns a tuple with the IsPeriodic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometrySpline118AllOf) GetIsPeriodicOk() (*bool, bool) {
	if o == nil || o.IsPeriodic == nil {
		return nil, false
	}
	return o.IsPeriodic, true
}

// HasIsPeriodic returns a boolean if a field has been set.
func (o *BTCurveGeometrySpline118AllOf) HasIsPeriodic() bool {
	if o != nil && o.IsPeriodic != nil {
		return true
	}

	return false
}

// SetIsPeriodic gets a reference to the given bool and assigns it to the IsPeriodic field.
func (o *BTCurveGeometrySpline118AllOf) SetIsPeriodic(v bool) {
	o.IsPeriodic = &v
}

// GetIsRational returns the IsRational field value if set, zero value otherwise.
func (o *BTCurveGeometrySpline118AllOf) GetIsRational() bool {
	if o == nil || o.IsRational == nil {
		var ret bool
		return ret
	}
	return *o.IsRational
}

// GetIsRationalOk returns a tuple with the IsRational field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometrySpline118AllOf) GetIsRationalOk() (*bool, bool) {
	if o == nil || o.IsRational == nil {
		return nil, false
	}
	return o.IsRational, true
}

// HasIsRational returns a boolean if a field has been set.
func (o *BTCurveGeometrySpline118AllOf) HasIsRational() bool {
	if o != nil && o.IsRational != nil {
		return true
	}

	return false
}

// SetIsRational gets a reference to the given bool and assigns it to the IsRational field.
func (o *BTCurveGeometrySpline118AllOf) SetIsRational(v bool) {
	o.IsRational = &v
}

// GetKnots returns the Knots field value if set, zero value otherwise.
func (o *BTCurveGeometrySpline118AllOf) GetKnots() []float64 {
	if o == nil || o.Knots == nil {
		var ret []float64
		return ret
	}
	return *o.Knots
}

// GetKnotsOk returns a tuple with the Knots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTCurveGeometrySpline118AllOf) GetKnotsOk() (*[]float64, bool) {
	if o == nil || o.Knots == nil {
		return nil, false
	}
	return o.Knots, true
}

// HasKnots returns a boolean if a field has been set.
func (o *BTCurveGeometrySpline118AllOf) HasKnots() bool {
	if o != nil && o.Knots != nil {
		return true
	}

	return false
}

// SetKnots gets a reference to the given []float64 and assigns it to the Knots field.
func (o *BTCurveGeometrySpline118AllOf) SetKnots(v []float64) {
	o.Knots = &v
}

func (o BTCurveGeometrySpline118AllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.ControlPointCount != nil {
		toSerialize["controlPointCount"] = o.ControlPointCount
	}
	if o.ControlPoints != nil {
		toSerialize["controlPoints"] = o.ControlPoints
	}
	if o.Degree != nil {
		toSerialize["degree"] = o.Degree
	}
	if o.IsPeriodic != nil {
		toSerialize["isPeriodic"] = o.IsPeriodic
	}
	if o.IsRational != nil {
		toSerialize["isRational"] = o.IsRational
	}
	if o.Knots != nil {
		toSerialize["knots"] = o.Knots
	}
	return json.Marshal(toSerialize)
}

type NullableBTCurveGeometrySpline118AllOf struct {
	value *BTCurveGeometrySpline118AllOf
	isSet bool
}

func (v NullableBTCurveGeometrySpline118AllOf) Get() *BTCurveGeometrySpline118AllOf {
	return v.value
}

func (v *NullableBTCurveGeometrySpline118AllOf) Set(val *BTCurveGeometrySpline118AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableBTCurveGeometrySpline118AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableBTCurveGeometrySpline118AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTCurveGeometrySpline118AllOf(val *BTCurveGeometrySpline118AllOf) *NullableBTCurveGeometrySpline118AllOf {
	return &NullableBTCurveGeometrySpline118AllOf{value: val, isSet: true}
}

func (v NullableBTCurveGeometrySpline118AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTCurveGeometrySpline118AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
