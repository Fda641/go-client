/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTPFunctionOrPredicateDeclaration247 struct for BTPFunctionOrPredicateDeclaration247
type BTPFunctionOrPredicateDeclaration247 struct {
	BTPProcedureDeclarationBase266
	BtType *string `json:"btType,omitempty"`
	Name *BTPIdentifier8 `json:"name,omitempty"`
}

// NewBTPFunctionOrPredicateDeclaration247 instantiates a new BTPFunctionOrPredicateDeclaration247 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTPFunctionOrPredicateDeclaration247() *BTPFunctionOrPredicateDeclaration247 {
	this := BTPFunctionOrPredicateDeclaration247{}
	return &this
}

// NewBTPFunctionOrPredicateDeclaration247WithDefaults instantiates a new BTPFunctionOrPredicateDeclaration247 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTPFunctionOrPredicateDeclaration247WithDefaults() *BTPFunctionOrPredicateDeclaration247 {
	this := BTPFunctionOrPredicateDeclaration247{}
	return &this
}

// GetBtType returns the BtType field value if set, zero value otherwise.
func (o *BTPFunctionOrPredicateDeclaration247) GetBtType() string {
	if o == nil || o.BtType == nil {
		var ret string
		return ret
	}
	return *o.BtType
}

// GetBtTypeOk returns a tuple with the BtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPFunctionOrPredicateDeclaration247) GetBtTypeOk() (*string, bool) {
	if o == nil || o.BtType == nil {
		return nil, false
	}
	return o.BtType, true
}

// HasBtType returns a boolean if a field has been set.
func (o *BTPFunctionOrPredicateDeclaration247) HasBtType() bool {
	if o != nil && o.BtType != nil {
		return true
	}

	return false
}

// SetBtType gets a reference to the given string and assigns it to the BtType field.
func (o *BTPFunctionOrPredicateDeclaration247) SetBtType(v string) {
	o.BtType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTPFunctionOrPredicateDeclaration247) GetName() BTPIdentifier8 {
	if o == nil || o.Name == nil {
		var ret BTPIdentifier8
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTPFunctionOrPredicateDeclaration247) GetNameOk() (*BTPIdentifier8, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTPFunctionOrPredicateDeclaration247) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given BTPIdentifier8 and assigns it to the Name field.
func (o *BTPFunctionOrPredicateDeclaration247) SetName(v BTPIdentifier8) {
	o.Name = &v
}

func (o BTPFunctionOrPredicateDeclaration247) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedBTPProcedureDeclarationBase266, errBTPProcedureDeclarationBase266 := json.Marshal(o.BTPProcedureDeclarationBase266)
	if errBTPProcedureDeclarationBase266 != nil {
		return []byte{}, errBTPProcedureDeclarationBase266
	}
	errBTPProcedureDeclarationBase266 = json.Unmarshal([]byte(serializedBTPProcedureDeclarationBase266), &toSerialize)
	if errBTPProcedureDeclarationBase266 != nil {
		return []byte{}, errBTPProcedureDeclarationBase266
	}
	if o.BtType != nil {
		toSerialize["btType"] = o.BtType
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableBTPFunctionOrPredicateDeclaration247 struct {
	value *BTPFunctionOrPredicateDeclaration247
	isSet bool
}

func (v NullableBTPFunctionOrPredicateDeclaration247) Get() *BTPFunctionOrPredicateDeclaration247 {
	return v.value
}

func (v *NullableBTPFunctionOrPredicateDeclaration247) Set(val *BTPFunctionOrPredicateDeclaration247) {
	v.value = val
	v.isSet = true
}

func (v NullableBTPFunctionOrPredicateDeclaration247) IsSet() bool {
	return v.isSet
}

func (v *NullableBTPFunctionOrPredicateDeclaration247) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTPFunctionOrPredicateDeclaration247(val *BTPFunctionOrPredicateDeclaration247) *NullableBTPFunctionOrPredicateDeclaration247 {
	return &NullableBTPFunctionOrPredicateDeclaration247{value: val, isSet: true}
}

func (v NullableBTPFunctionOrPredicateDeclaration247) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTPFunctionOrPredicateDeclaration247) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
