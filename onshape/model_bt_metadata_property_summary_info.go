/*
 * Onshape REST API
 *
 * The Onshape REST API consumed by all clients.
 *
 * API version: 1.113
 * Contact: api-support@onshape.zendesk.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package onshape

import (
	"encoding/json"
)

// BTMetadataPropertySummaryInfo struct for BTMetadataPropertySummaryInfo
type BTMetadataPropertySummaryInfo struct {
	Description *string `json:"description,omitempty"`
	EditableInMicroversion *bool `json:"editableInMicroversion,omitempty"`
	EditableInVersion *bool `json:"editableInVersion,omitempty"`
	Href *string `json:"href,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	OwnerType *int32 `json:"ownerType,omitempty"`
	PropertyConfigSummaryInfoList *[]BTMetadataPropertyConfigSummaryInfo `json:"propertyConfigSummaryInfoList,omitempty"`
	UiReadonlyInMicroversion *bool `json:"uiReadonlyInMicroversion,omitempty"`
	UiReadonlyInVersion *bool `json:"uiReadonlyInVersion,omitempty"`
	ValueType *int32 `json:"valueType,omitempty"`
	ViewRef *string `json:"viewRef,omitempty"`
}

// NewBTMetadataPropertySummaryInfo instantiates a new BTMetadataPropertySummaryInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBTMetadataPropertySummaryInfo() *BTMetadataPropertySummaryInfo {
	this := BTMetadataPropertySummaryInfo{}
	return &this
}

// NewBTMetadataPropertySummaryInfoWithDefaults instantiates a new BTMetadataPropertySummaryInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBTMetadataPropertySummaryInfoWithDefaults() *BTMetadataPropertySummaryInfo {
	this := BTMetadataPropertySummaryInfo{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BTMetadataPropertySummaryInfo) SetDescription(v string) {
	o.Description = &v
}

// GetEditableInMicroversion returns the EditableInMicroversion field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetEditableInMicroversion() bool {
	if o == nil || o.EditableInMicroversion == nil {
		var ret bool
		return ret
	}
	return *o.EditableInMicroversion
}

// GetEditableInMicroversionOk returns a tuple with the EditableInMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetEditableInMicroversionOk() (*bool, bool) {
	if o == nil || o.EditableInMicroversion == nil {
		return nil, false
	}
	return o.EditableInMicroversion, true
}

// HasEditableInMicroversion returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasEditableInMicroversion() bool {
	if o != nil && o.EditableInMicroversion != nil {
		return true
	}

	return false
}

// SetEditableInMicroversion gets a reference to the given bool and assigns it to the EditableInMicroversion field.
func (o *BTMetadataPropertySummaryInfo) SetEditableInMicroversion(v bool) {
	o.EditableInMicroversion = &v
}

// GetEditableInVersion returns the EditableInVersion field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetEditableInVersion() bool {
	if o == nil || o.EditableInVersion == nil {
		var ret bool
		return ret
	}
	return *o.EditableInVersion
}

// GetEditableInVersionOk returns a tuple with the EditableInVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetEditableInVersionOk() (*bool, bool) {
	if o == nil || o.EditableInVersion == nil {
		return nil, false
	}
	return o.EditableInVersion, true
}

// HasEditableInVersion returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasEditableInVersion() bool {
	if o != nil && o.EditableInVersion != nil {
		return true
	}

	return false
}

// SetEditableInVersion gets a reference to the given bool and assigns it to the EditableInVersion field.
func (o *BTMetadataPropertySummaryInfo) SetEditableInVersion(v bool) {
	o.EditableInVersion = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BTMetadataPropertySummaryInfo) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BTMetadataPropertySummaryInfo) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BTMetadataPropertySummaryInfo) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *BTMetadataPropertySummaryInfo) SetNamespace(v string) {
	o.Namespace = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *BTMetadataPropertySummaryInfo) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetOwnerType() int32 {
	if o == nil || o.OwnerType == nil {
		var ret int32
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetOwnerTypeOk() (*int32, bool) {
	if o == nil || o.OwnerType == nil {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasOwnerType() bool {
	if o != nil && o.OwnerType != nil {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given int32 and assigns it to the OwnerType field.
func (o *BTMetadataPropertySummaryInfo) SetOwnerType(v int32) {
	o.OwnerType = &v
}

// GetPropertyConfigSummaryInfoList returns the PropertyConfigSummaryInfoList field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetPropertyConfigSummaryInfoList() []BTMetadataPropertyConfigSummaryInfo {
	if o == nil || o.PropertyConfigSummaryInfoList == nil {
		var ret []BTMetadataPropertyConfigSummaryInfo
		return ret
	}
	return *o.PropertyConfigSummaryInfoList
}

// GetPropertyConfigSummaryInfoListOk returns a tuple with the PropertyConfigSummaryInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetPropertyConfigSummaryInfoListOk() (*[]BTMetadataPropertyConfigSummaryInfo, bool) {
	if o == nil || o.PropertyConfigSummaryInfoList == nil {
		return nil, false
	}
	return o.PropertyConfigSummaryInfoList, true
}

// HasPropertyConfigSummaryInfoList returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasPropertyConfigSummaryInfoList() bool {
	if o != nil && o.PropertyConfigSummaryInfoList != nil {
		return true
	}

	return false
}

// SetPropertyConfigSummaryInfoList gets a reference to the given []BTMetadataPropertyConfigSummaryInfo and assigns it to the PropertyConfigSummaryInfoList field.
func (o *BTMetadataPropertySummaryInfo) SetPropertyConfigSummaryInfoList(v []BTMetadataPropertyConfigSummaryInfo) {
	o.PropertyConfigSummaryInfoList = &v
}

// GetUiReadonlyInMicroversion returns the UiReadonlyInMicroversion field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetUiReadonlyInMicroversion() bool {
	if o == nil || o.UiReadonlyInMicroversion == nil {
		var ret bool
		return ret
	}
	return *o.UiReadonlyInMicroversion
}

// GetUiReadonlyInMicroversionOk returns a tuple with the UiReadonlyInMicroversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetUiReadonlyInMicroversionOk() (*bool, bool) {
	if o == nil || o.UiReadonlyInMicroversion == nil {
		return nil, false
	}
	return o.UiReadonlyInMicroversion, true
}

// HasUiReadonlyInMicroversion returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasUiReadonlyInMicroversion() bool {
	if o != nil && o.UiReadonlyInMicroversion != nil {
		return true
	}

	return false
}

// SetUiReadonlyInMicroversion gets a reference to the given bool and assigns it to the UiReadonlyInMicroversion field.
func (o *BTMetadataPropertySummaryInfo) SetUiReadonlyInMicroversion(v bool) {
	o.UiReadonlyInMicroversion = &v
}

// GetUiReadonlyInVersion returns the UiReadonlyInVersion field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetUiReadonlyInVersion() bool {
	if o == nil || o.UiReadonlyInVersion == nil {
		var ret bool
		return ret
	}
	return *o.UiReadonlyInVersion
}

// GetUiReadonlyInVersionOk returns a tuple with the UiReadonlyInVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetUiReadonlyInVersionOk() (*bool, bool) {
	if o == nil || o.UiReadonlyInVersion == nil {
		return nil, false
	}
	return o.UiReadonlyInVersion, true
}

// HasUiReadonlyInVersion returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasUiReadonlyInVersion() bool {
	if o != nil && o.UiReadonlyInVersion != nil {
		return true
	}

	return false
}

// SetUiReadonlyInVersion gets a reference to the given bool and assigns it to the UiReadonlyInVersion field.
func (o *BTMetadataPropertySummaryInfo) SetUiReadonlyInVersion(v bool) {
	o.UiReadonlyInVersion = &v
}

// GetValueType returns the ValueType field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetValueType() int32 {
	if o == nil || o.ValueType == nil {
		var ret int32
		return ret
	}
	return *o.ValueType
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetValueTypeOk() (*int32, bool) {
	if o == nil || o.ValueType == nil {
		return nil, false
	}
	return o.ValueType, true
}

// HasValueType returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasValueType() bool {
	if o != nil && o.ValueType != nil {
		return true
	}

	return false
}

// SetValueType gets a reference to the given int32 and assigns it to the ValueType field.
func (o *BTMetadataPropertySummaryInfo) SetValueType(v int32) {
	o.ValueType = &v
}

// GetViewRef returns the ViewRef field value if set, zero value otherwise.
func (o *BTMetadataPropertySummaryInfo) GetViewRef() string {
	if o == nil || o.ViewRef == nil {
		var ret string
		return ret
	}
	return *o.ViewRef
}

// GetViewRefOk returns a tuple with the ViewRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BTMetadataPropertySummaryInfo) GetViewRefOk() (*string, bool) {
	if o == nil || o.ViewRef == nil {
		return nil, false
	}
	return o.ViewRef, true
}

// HasViewRef returns a boolean if a field has been set.
func (o *BTMetadataPropertySummaryInfo) HasViewRef() bool {
	if o != nil && o.ViewRef != nil {
		return true
	}

	return false
}

// SetViewRef gets a reference to the given string and assigns it to the ViewRef field.
func (o *BTMetadataPropertySummaryInfo) SetViewRef(v string) {
	o.ViewRef = &v
}

func (o BTMetadataPropertySummaryInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EditableInMicroversion != nil {
		toSerialize["editableInMicroversion"] = o.EditableInMicroversion
	}
	if o.EditableInVersion != nil {
		toSerialize["editableInVersion"] = o.EditableInVersion
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.OwnerType != nil {
		toSerialize["ownerType"] = o.OwnerType
	}
	if o.PropertyConfigSummaryInfoList != nil {
		toSerialize["propertyConfigSummaryInfoList"] = o.PropertyConfigSummaryInfoList
	}
	if o.UiReadonlyInMicroversion != nil {
		toSerialize["uiReadonlyInMicroversion"] = o.UiReadonlyInMicroversion
	}
	if o.UiReadonlyInVersion != nil {
		toSerialize["uiReadonlyInVersion"] = o.UiReadonlyInVersion
	}
	if o.ValueType != nil {
		toSerialize["valueType"] = o.ValueType
	}
	if o.ViewRef != nil {
		toSerialize["viewRef"] = o.ViewRef
	}
	return json.Marshal(toSerialize)
}

type NullableBTMetadataPropertySummaryInfo struct {
	value *BTMetadataPropertySummaryInfo
	isSet bool
}

func (v NullableBTMetadataPropertySummaryInfo) Get() *BTMetadataPropertySummaryInfo {
	return v.value
}

func (v *NullableBTMetadataPropertySummaryInfo) Set(val *BTMetadataPropertySummaryInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBTMetadataPropertySummaryInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBTMetadataPropertySummaryInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBTMetadataPropertySummaryInfo(val *BTMetadataPropertySummaryInfo) *NullableBTMetadataPropertySummaryInfo {
	return &NullableBTMetadataPropertySummaryInfo{value: val, isSet: true}
}

func (v NullableBTMetadataPropertySummaryInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBTMetadataPropertySummaryInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
